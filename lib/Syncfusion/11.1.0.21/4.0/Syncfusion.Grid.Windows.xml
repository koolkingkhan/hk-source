<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Grid.Windows</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.GridWindowsAssembly">
            <exclude/>
            <summary>
            This class holds the name of the Syncfusion.Grid.Windows assembly and provides a helper
            routine that helps with resolving types when loading a serialization stream and when
            the framework probes for assemblies by reflection.
            </summary>
        </member>
        <member name="F:Syncfusion.GridWindowsAssembly.Name">
            <summary>
            The full name of this assembly without version information: "Syncfusion.Grid.Windows"
            </summary>
        </member>
        <member name="F:Syncfusion.GridWindowsAssembly.Assembly">
            <summary>
            A reference to the <see cref="T:System.Reflection.Assembly"/> for the Grid assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.GridWindowsAssembly.RootNamespace">
            <summary>
            The root namespace of this assembly. Used internally for locating resources within the assembly.
            </summary>
        </member>
        <member name="M:Syncfusion.GridWindowsAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            This delegate helps with resolving types and can be used as a eventhandler
            for a <see cref="E:System.AppDomain.AssemblyResolve"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data with information about the type.</param>
            <returns>A reference to the assembly where the type is located.</returns>
            <remarks>
            Use this handler when reading back types from a serialization stread
            saved with an earlier version of this assembly.
            </remarks>
            <example>
            <code lang="C#">
                    public static GridModel LoadSoap(Stream s)
                    {
                        try
                        {
                            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(GridBaseAssembly.AssemblyResolver);
                            SoapFormatter b = new SoapFormatter();
                            b.AssemblyFormat = FormatterAssemblyStyle.Simple;
                            GridModel t = b.Deserialize(s) as GridModel;
                            t.Modified = false;
                            return t;
                        }
                        finally
                        {
                            AppDomain.CurrentDomain.AssemblyResolve -= new ResolveEventHandler(GridBaseAssembly.AssemblyResolver);
                        }
                    }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellButton">
            <summary>
            Defines a cell button element to be used with a cell renderer. A cell renderer can have several cell button elements.
            Examples are numeric up and down buttons, combo box buttons, etc..
            </summary>
            <remarks>
            The cell button is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.#ctor(Syncfusion.Windows.Forms.Grid.GridCellRendererBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>.
            </summary>
            <param name="owner">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> that manages the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Draws the cell button element at the specified row and column index.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="bActive">True if this is the active current cell; False otherwise.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.DrawMetroButtonStyle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,System.String,System.Boolean)">
            <summary>
            Draws the PushButton for Metro skin
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> object.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> object that represents the drawing area.</param>
            <param name="state">The current state of the button.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Draws a button using <see cref="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)"/> or if XP Themes
            are enabled, button will be drawn themed.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rect">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="buttonState">A <see cref="T:System.Windows.Forms.ButtonState"/> that specifies the current state.</param>
            <param name="style">The style information for the cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.IsHovering(System.Int32,System.Int32)">
            <summary>
            Determines whether the mouse is currently hovering over the button at the specified row and column.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if mouse is over the button; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.SetHovering(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo,System.Boolean)">
            <summary>
            Saves current hovering state.
            </summary>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with row and column index.</param>
            <param name="value">True to set hovering; False to reset hovering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.IsMouseDown(System.Int32,System.Int32)">
            <summary>
            Determines whether the mouse is currently pressed at the specified row and column.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if mouse is pressed over the button; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.SetMouseDown(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo,System.Boolean)">
            <summary>
            Saves current MouseDown state.
            </summary>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with row and column index.</param>
            <param name="value">True to set mouse down; False to reset mouse down state.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.IsPushed(System.Int32,System.Int32)">
            <summary>
            Determines whether the button is marked as pushed at the specified row and column.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if the button is marked as pushed; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.SetPushed(System.Int32,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Saves current pushed state.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="value">True to set the button as pushed; False to reset pushed state.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.HitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <summary>
            Tests if the mouse is over the button and if the button wants to handle any subsequent mouse event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data for the current mouse event.</param>
            <param name="controller">A <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> that has indicated to handle the mouse event.</param>
            <returns>A non-zero value if the button can and wants to handle the mouse event; 0 if the
            mouse event is unrelated for this button.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            Occurs when the mouse is hovering over the button (and HitTest indicated it wants to handle the mouse event).
            </summary>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> is called once before a series of <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHover(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> calls.
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverLeave(System.EventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> is called when the mouse leaves the button or if the mouse button
            is pressed.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHover(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            Occurs when the mouse is hovering over the button (and HitTest indicated it wants to handle the mouse event).
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> is called once before a series of <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHover(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> calls.
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverLeave(System.EventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> is called when the mouse leaves the button or if the mouse button
            is pressed.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverLeave(System.EventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            Occurs when the mouse has left hovering over the button (and HitTest indicated it wants to handle the mouse event).
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> with data about the mouse event (can also be <see cref="T:System.Windows.Forms.MouseEventArgs"/>).</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> is called once before a series of <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHover(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> calls.
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseHoverLeave(System.EventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)"/> is called when the mouse leaves the button or if the mouse button
            is pressed.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseDown(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            This is called from <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.HitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/>
            has indicated it wants to receive mouse events and the user has pressed the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
            <remarks>Once MouseDown has been called you are guaranteed to receive a MouseUp
            or CancelModel call.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseMove(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            This is called from <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.HitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/>
            has indicated it wants to receive mouse events and the user has pressed the mouse button and is moving the mouse.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
            <remarks>Once MouseDown has been called, you are guaranteed to receive a MouseUp
            or CancelModel call.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseUp(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            This is called from <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.HitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/>
            has indicated it wants to receive mouse events and the user has released the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
            <remarks>Once MouseDown has been called you are guaranteed to receive a MouseUp
            or CancelModel call.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.GetCursor(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            Return the cursor that you want to display.
            </summary>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
            <returns>The <see cref="T:System.Windows.Forms.Cursor"/> to be displayed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.CancelMode(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <summary>
            Occurs when the current mouse operation is canceled.
            </summary>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.OnClicked(Syncfusion.Windows.Forms.Grid.GridCellEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.Clicked"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.OnHoveringChanged(Syncfusion.Windows.Forms.Grid.GridCellEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.HoveringChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.OnMouseDownChanged(Syncfusion.Windows.Forms.Grid.GridCellEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseDownChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButton.OnPushedChanged(Syncfusion.Windows.Forms.Grid.GridCellEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.PushedChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> with event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridCellButton.Clicked">
            <summary>
            User clicked on cell button element.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridCellButton.HoveringChanged">
            <summary>
            User hovers mouse over cell button element or moved mouse away from cell button element.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseDownChanged">
            <summary>
            User pressed or released the mouse button while the cursor was over the cell button element.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridCellButton.PushedChanged">
            <summary>
            User moved mouse away from cell button element or back into it while pressing the mouse.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButton.Bounds">
            <summary>
            Gets or sets the coordinates of the cell button element in grid client area coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButton.Text">
            <summary>
            Gets or sets the text that has to be displayed inside cell button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseDownInfo">
            <summary>
            Gets the information of Saved HitTest.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButton.Grid">
            <summary>
            Gets a reference to the parent grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButton.Owner">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButton.FireClickOnMouseUp">
            <summary>
            Gets or sets a value indicating whether button should fire a <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.Clicked"/> event when user clicks on button.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl">
            <summary>
            Implements the text box that is shown in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/> when the
            user starts editing the cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl">
            <summary>
            Provides interface for <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/> and <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl"/> for
            the text box that is shown in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/> when the
            user starts editing the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.SuspendEvents">
            <summary>
            Suspends raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.ResumeEvents">
            <summary>
            Resumes raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.BeginInit">
            <summary>
            Suspends raising modified events until EndInit is called and set <see cref="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.Initializing"/> property to
            True. You should check <see cref="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.Initializing"/> in your cell renderer's implementation to see
            if changes in the text box are done because of initialization or user interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.EndInit">
            <summary>
            Resume raising modified events and resets the <see cref="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.Initializing"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.IsSuspendEvents">
            <summary>
            Gets a value indicating whether raising events is temporarily disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.Initializing">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.BeginInit"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.ParentCell">
            <summary>
            Gets the associated cell renderer for the text box.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.FloatDone">
            <summary>
            Gets or sets a value indicating whether the cell was floated over another cell after the
            user inserted text. Will be reset when the cell is redrawn.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.Floatable">
            <summary>
            Gets or sets a value indicating whether the cell supports floating over another cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridTextBoxControl.TextBoxMargins">
            <summary>
            Gets the default text box margins.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.ISupportsPopupControlContainer">
            <summary>
            Provides support for <see cref="P:Syncfusion.Windows.Forms.Grid.ISupportsPopupControlContainer.PopupControlContainer"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.ISupportsPopupControlContainer.PopupControlContainer">
            <summary>
            Gets or sets The container this child control is associated with.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.#ctor(Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>
            </summary>
            <param name="parent">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/> that the cell belongs to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnHandleDestroyed(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.SuspendEvents">
            <summary>
            Suspends raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.ResumeEvents">
            <summary>
            Resumes raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnTextChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnGotFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnLostFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnEnter(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnLeave(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.PreProcessMessage(System.Windows.Forms.Message@)">
            <override/>
            <summary>
            Preprocesses the keyboard or input messages within the message loop before they are dispatched.
            </summary>
            <param name="msg">Message that has to be dispatched.</param>
            <returns>True if the messages can be preprocessed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.IsInputKey(System.Windows.Forms.Keys)">
            <override/>
            <returns> A value indicating whether the key data can be allowed </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <override/>
            <returns> returns the message of the processed key </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.LineScroll(System.Int32)">
            <summary>
            Scroll the specified number of lines.
            </summary>
            <param name="count">The number of lines to scroll.</param>
            <remarks>
            Sends an EM_LINESCROLL message to the control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.BeginInit">
            <summary>
            Suspends raising Modified events until EndInit is called and set <see cref="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.Initializing"/> property to
            true. You should check <see cref="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.Initializing"/> your cell renderer's implementation to see
            if changes in the text box are done because of initialization or user interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.EndInit">
            <summary>
            Resume raising modified events and resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.Initializing"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.CreateParams">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.IsSuspendEvents">
            <summary>
            Gets a value indicating whether the raising events is temporarily disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.Initializing">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.BeginInit"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.ParentCell">
            <summary>
            Gets the associated cell renderer for the text box.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.FloatDone">
            <summary>
            Gets or sets a value indicating whether if the cell was floated over another cell after the
            user inserted text. Will be reset when the cell is redrawn.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.Floatable">
            <summary>
            Gets or sets a value indicating whether if the cell supports floating over another cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.DroppedDown">
            <summary>
            Gets or sets a value indicating whether the dropped-down state or shows or hides the drop-down window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxControl.PopupControlContainer">
            <summary>
            Gets or sets the container this child control is associated with.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl">
            <summary>
            Implements the text box that is shown in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/> when the
            user starts editing the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.Select(System.Boolean,System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.#ctor(Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>
            </summary>
            <param name="parent">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/> that the cell belongs to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnHandleDestroyed(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.SuspendEvents">
            <summary>
            Suspends raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.ResumeEvents">
            <summary>
            Resumes raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnTextChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnGotFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnLostFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnEnter(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnLeave(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.PreProcessMessage(System.Windows.Forms.Message@)">
            <override/>
            <summary>
            Preprocesses the keyboard and input messages within the message loop before they are dispatched.
            </summary>
            <param name="msg">Message that loops for input.</param>
            <returns>True if they are preprocessed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.IsInputKey(System.Windows.Forms.Keys)">
            <override/>
            <returns>Gets a value indicating whether the navigating keys can be used</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <override/>
            <returns>Gets a value indicating whether the key message has to be processed</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.LineScroll(System.Int32)">
            <summary>
            Scroll the specified number of lines.
            </summary>
            <param name="count">The number of lines to scroll.</param>
            <remarks>
            Sends an EM_LINESCROLL message to the control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.BeginInit">
            <summary>
            Suspends raising Modified events until EndInit is called and set <see cref="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.Initializing"/> property to
            true. You should check <see cref="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.Initializing"/> your cell renderer's implementation to see
            if changes in the text box are done because of initialization or user interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.EndInit">
            <summary>
            Resume raising modified events and resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.Initializing"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.Text">
            <override/>
            <summary>
            Gets or sets the current text in the rich text box.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.SelectedText">
            <override/>
            <summary>
            Gets or sets the selected text within the <see cref="T:System.Windows.Forms.RichTextBox"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.CreateParams">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.IsSuspendEvents">
            <summary>
            Gets a value indicating whether raising events is temporarily disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.InImeComposition">
            <summary>
            Gets a value indicating whether WM_IME_STARTCOMPOSITION was sent and False once WM_IME_ENDCOMPOSITION was handled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.Initializing">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.BeginInit"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.ParentCell">
            <summary>
            Gets the associated cell renderer for the text box.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.FloatDone">
            <summary>
            Gets or sets a value indicating whether the cell was floated over another cell after the
            user inserted text. Will be reset when the cell is redrawn.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.Floatable">
            <summary>
            Gets or sets a value indicating whether the cell supports floating over another cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.DroppedDown">
            <summary>
            Gets or sets a value indicating whether the dropped-down state will shows or hides the drop-down window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxControl.PopupControlContainer">
            <summary>
            Gets or sets the container this child control is associated with.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridDropDownCell">
            <summary>
            Provides a <see cref="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCell.EnsureDropDownContainer"/> method that ensures that a drop-down container is correctly initialized.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCell.EnsureDropDownContainer">
            <summary>
            Ensures that a drop-down container is correctly initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridDropDownContainer">
            <summary>
            A interface with base method for <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownContainer"/> to use without
            having strong reference to that class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownContainer.ShowPopup(System.Drawing.Point)">
            <summary>
            Shows the popup at the specified location.
            </summary>
            <param name="pt">A point in screen coordinates.
            Can be Point.Empty.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownContainer.PopupParent">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.IPopupParent"/> parent.
            </summary>
            <value>An instance of the <see cref="T:Syncfusion.Windows.Forms.IPopupParent"/> interface.</value>
            <remarks>
            The Popup framework can handle a hierarchy of popups (like
            in a menu) for which it requires each popup child to provide
            a reference to its Popup parent.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownContainer.ParentControl">
            <summary>
            Gets or sets the PopupControlContainer's Control Parent.
            </summary>
            <value>A control instance.</value>
            <remarks>
            <para>The Parent-Child relationship in this case is NOT similar
            to the one in the control hierarchy.</para>
            <para>
            When you specify a Parent control via
            ParentControl and pass a Point.Empty location to
            ShowPopup, the popup location will be dynamically determined
            based on the ParentControl bounds and the screen area.</para>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp">
            <summary>
            A helper interface for drop-down cell functionality. The GridDropDownCellImp class
            implements this interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.CreateDropDownContainer">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDropDownContainer"/> and associates it with
            the cells parent grid.
            </summary>
            <returns>The container where you can insert child controls to be displayed as a drop-down part for your cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.EnsureDropDownContainer">
            <summary>
            Ensures the container is valid and initialized.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.InitializeDropDownContainer">
            <summary>
            Called to initialize contents of the drop-down container for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.OnInitialize(System.Int32,System.Int32)">
            <summary>
            This method gets called from the cell renderer's initialize method. Override this method if you need to do any initialization
            for the current cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.OnHasFocusControlChanged">
            <summary>
            Override this method if your cell renderer supports in-place editing and you want
            to do any custom initialization at this point before cell gets redrawn.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.DropDownContainerCloseDropDown(System.Object,Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <summary>
            Will be called to indicate that the popup child was closed.
            </summary>
            <param name="sender">The child that was closed. </param>
            <param name="e">The event data with a <see cref="P:Syncfusion.Windows.Forms.PopupClosedEventArgs.PopupCloseType"/> value. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <summary>
            Occurs after the popup has been dropped-down and made visible.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs when the drop-down container is about to be shown.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.NotifyShowingDropDown(System.Drawing.Size@)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowingDropDown(Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)"/> for the parent grid.
            </summary>
            <param name="size">The suggested size of the drop-down</param>
            <returns>True if drop-down should be shown; False if operation should be canceled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.NotifyShowedDropDown">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowedDropDown(System.EventArgs)"/> for the parent grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.OnShowDropDown">
            <summary>
            This is called from GridCurrentCell.ShowDropDown after BeginEdit has been called.
            </summary>
            <remarks>
            If your renderer supports dropped-down state, the drop-down window should be made
            visible at this time.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.OnCloseDropDown(Syncfusion.Windows.Forms.PopupCloseType)">
            <summary>
            This is called from GridCurrentCell.CloseDropDown.
            </summary>
            <remarks>
            If your renderer supports dropped-down state, the drop-down window should be
            closed at this time.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.OnButtonClicked(System.Int32,System.Int32,System.Int32)">
            <summary>
            This method is called when the user clicks a cell button inside a cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="button">The button control</param>
            <remarks>In your overriden version
            of this method, you can activate the current cell for the given row and column index and then
            drop-down a list.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            User pressed key down. (similar to Control.OnKeyDown)
            </summary>
            <param name="e">The event args of Key down</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.FixTopMostWindow">
            <summary>
            Ensures that the drop-down part is the top-most window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.InitFocusEditPart">
            <summary>
            Gets or sets a value indicating whether the focus should remain with the grid or active text box when dropped-down. True if focus
            should remain with grid; False if drop-down should get focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.IgnoreDoubleClickTicks">
            <summary>
            Gets or sets a value indicating whether the Environment.TickCount value until a second click should be considered a double click.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.IgnoreFocus">
            <summary>
            Gets or sets a value indicating whether grid focus notification should be temporarily ignored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.Grid">
            <summary>
            Gets a reference to the parent grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.CurrentCell">
            <summary>
            Gets a reference to GridCurrentCell implementation
            of the GridControlBase this cell renderer is associated with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.DropDownButton">
            <summary>
            Gets or sets the drop-down button.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.IsDroppedDown">
            <summary>
            Gets a value indicating whether the drop-down is currently dropped-down and visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.EditPart">
            <summary>
            Gets the text box that is displayed in the user input field for
            a combo box.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.PopupControlContainer">
            <summary>
            Gets the container where you can insert child controls to be displayed as drop-down part for your cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.DropDownContainer">
            <summary>
            Gets the container same as <see cref="P:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp.PopupControlContainer"/>, for convenience only.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory">
            <summary>
            GridCellModelFactory creates <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> objects to be used in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridCellModelFactory">
            <summary>
            Provides a <see cref="M:Syncfusion.Windows.Forms.Grid.IGridCellModelFactory.CreateCellModel(System.String,Syncfusion.Windows.Forms.Grid.GridModel)"/> method that instantiates <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> 
            objects on demand when a cell is touched that has a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> that is 
            not found in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridCellModelFactory.CreateCellModel(System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Instantiates <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> objects on demand when a cell is touched that has a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> that is 
            not found in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/> collection.
            </summary>
            <returns>returns GridCellModelBase</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridCellModelFactory.IsDefault">
            <summary>
            Gets a value indicating whether true when the grid is allowed to replace this factory with a derived factory at any time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory.#ctor">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory.#ctor(System.Boolean)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory"/> and optionally marks it as "Default",
            allowing the grid to replace it with a derived factory at any time.
            </summary>
            <param name="isDefault">When True, marks this instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory"/> as Default.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory.CreateCellModel(System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> objects to be used in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="cellTypeName">A cell type name that identifies the cell model to be instantiated.</param>
            <param name="pGrid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> the new cell model object should be associated with.</param>
            <returns>A cell model.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseCellModelFactory.IsDefault">
            <summary>
            Gets a value indicating whether the grid is allowed to replace this factory with a derived factory at any time.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellLayout">
            <summary>
            This class holds layout information and bounds for a cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellLayout.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle[],System.Drawing.Rectangle)">
            <overload>
            Initializes a new CellLayout with the given parameters.
            </overload>
            <summary>
            Initializes a new CellLayout with the given parameters.
            </summary>
            <param name="cellRectangle">This is the full cell rectangle including borders.</param>
            <param name="innerRectangle"> This is the cell area without borders.</param>
            <param name="buttons">An array of <see cref="T:System.Drawing.Rectangle"/> with boundaries for all cell buttons.</param>
            <param name="textRectangle">This is the text rectangle. It is the cell rectangle without buttons, borders, or text margins.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellLayout.#ctor">
            <summary>
             Initializes an empty CellLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellLayout.CellRectangle">
            <summary>
            Gets or sets the full cell rectangle including borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellLayout.InnerRectangle">
            <summary>
            Gets or sets the cell area without borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellLayout.Buttons">
            <summary>
            Gets or sets an array of <see cref="T:System.Drawing.Rectangle"/> with boundaries for all cell buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellLayout.ClientRectangle">
            <summary>
            Gets or sets the client rectangle. It is the cell rectangle without buttons and borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellLayout.TextRectangle">
            <summary>
            Gets or sets the text rectangle. It is the cell rectangle without buttons, borders, or text margins.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase">
            <summary>
            Defines the data / model part of a cell type. Settings can be serialized out to a file together with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.Dispose">
            <overload>
            Releases the all resources used by the component.
            </overload>
            <summary>
            Releases the all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnBindingContextChanged(System.EventArgs)">
            <summary>
            Called when the BindingContext property was changed.
            </summary>
            <param name="e">An empty EventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetLocalizedString(System.String)">
            <summary>
            Returns a localized string from the SR.txt resource file.
            </summary>
            <param name="value">The key to look up.</param>
            <returns>The localized string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new GridCellModelBase object and stores a reference to the GridModel this cell belongs to.
            </overload>
            <summary>
            Initializes a new GridCellModelBase object and stores a reference to the GridModel this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> that owns this model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnModelDeserialization(System.Object,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Called from GridModel implementation of IDeserializationCallback.OnDeserialization.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="model">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> that was deserialized.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the cell model.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the cell model.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Creates a renderer for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> specific for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</returns>
            <remarks>You must override this method in your implementation of GridCellModelBase.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.CreateCopy(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Creates a copy of this cell model for another GridModel.
            </summary>
            <param name="gridModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for the new control.</param>
            <returns>Returns the instance of the grid model</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.AddBorders(System.Drawing.Size,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Adds border margins to given cell client area size. The borders are determined from a specified style with cell content information.
            </summary>
            <param name="size">The <see cref="T:System.Drawing.Size"/> with the cell size.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:System.Drawing.Size"/> with the cell size including its borders.</returns>
            <remarks>
            calls  GridMargins.AddMargins(size, StyleInfoBordersToMargins(style));
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <overload>
            Removes border margins from a given cell rectangle. The borders are determined from a specified style with cell content information.
            </overload>
            <summary>
            Removes border margins from a given cell rectangle. The borders are determined from a specified style with cell content information.
            </summary>
            <param name="cellBounds">The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="isRightToLeft">Indicates if grid is in RightToLeft mode.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds excluding its borders.</returns>
            <remarks>
            Calls GridMargins.RemoveMargins(cellBounds, StyleInfoBordersToMargins(style));
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Removes border margins from a given cell rectangle. The borders are determined from a specified style with cell content information.
            </summary>
            <param name="cellBounds">The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds excluding its borders.</returns>
            <remarks>
            calls GridMargins.RemoveMargins(cellBounds, StyleInfoBordersToMargins(style));
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <overload>
            Calculates the preferred size of the cell based on its contents, including margins and any buttons.
            </overload>
            <summary>
            Calculates the preferred size of the cell based on its contents, including margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">Vertical or horizontal</param>
            <returns>The optimal size of the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.MeasureSampleWString(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Gets the preferred size to be used for an empty cell.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="font">The <see cref="T:System.Drawing.Font"/> to be used.</param>
            <returns>The <see cref="T:System.Drawing.Size"/> of the string "Wg;".</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetCellSize(System.Int32,System.Int32)">
            <summary>
            Gets the actual size of the cell including margins and cell buttons.
            Spanned cells will return the size of the whole cell
            covering neighboring cells.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The actual <see cref="T:System.Drawing.Size"/> of the cell including margins and cell buttons. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetCellClientSize(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Gets the actual size of the cell without margins and without cell buttons.
            Spanned cells will return the size of the whole cell
            covering neighboring cells.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The actual <see cref="T:System.Drawing.Size"/> of the cell without margins or cell buttons.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnQueryCanFloatCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryFloatCell)">
            <summary>
            Determines whether the cell supports floating over a neighboring cell or can be
            flooded by a previous cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="query">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryFloatCell"/> value that specifies whether a cell is asked
            about support for floating over another cell or being flooded by a previous cell.</param>
            <returns>True if floating is possible; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnQueryCanMergeCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridMergeCellDirection)">
            <summary>
            Determines whether the cell supports merging of neighboring cells.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="mergeCellDirection">Specifies if rows or columns should be merged.</param>
            <returns>True if merging is possible; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetFormattedOrActiveTextAt(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Returns the display text of the specified cell. If it is the current cell the active text is returned.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>A <see cref="T:System.String"/> with the display text of the specified cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <summary>
            This is called from GridStyleInfo.GetFormattedText.
            GridStyleInfo.CultureInfo is used for conversion to string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>The formatted text for the given value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)">
            <summary>
            Parses the display text and converts it into a cell value to be stored in the style object.
            GridStyleInfo.CultureInfo is used for parsing the string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="text">The input text to be parsed.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object)">
            <summary>
            This is called from GridStyleInfo.GetText (ignoring any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> settings).
            CultureInfo.CurrentText is used for conversion to string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to convert to a string.</param>
            <returns>The string that represents the given value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ApplyText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String)">
            <summary>
            Parses the text and converts it into a cell value to be stored in the style object (ignoring any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> settings).
            CultureInfo.CurrentText is used for parsing the string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="text">The input text to be parsed.</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.SetActiveText(System.Int32,System.Int32,System.String)">
            <summary>
            Changes the active text for the cell model.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="text">The new text for the cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetActiveText(System.Int32,System.Int32)">
            <summary>
            Returns active text of current cell or null if rowIndex, colIndex is not current cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The active text for the current cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnActiveTextChanged(Syncfusion.Windows.Forms.Grid.GridCellEventArgs)">
            <summary>
            Recalculates floating cell state and raises the ActiveTextChanged event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ResetActiveText(System.Int32,System.Int32)">
            <summary>
            Reset the active text to its original state.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetPropertyDescriptor(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Returns GridStyleInfo.PropertyDescriptor.
            </summary>
            <param name="style">The style object</param>
            <returns>A PropertyDescriptor</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetTypeConverter(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Returns a TypeConverter with type information about the style.CellValue.
            </summary>
            <param name="style">The style object</param>
            <returns>A TypeConverter</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.IsDisposing">
            <summary>
            Gets a value indicating whether the object is executing <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.Dispose"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ForceCoveredCellFullBounds">
            <summary>
            Gets or sets a value indicating whether covered cells need to be drawn passing in the complete
            coordinates of the covered cell even if parts of the covered cell are above the
            current view.
            </summary>
            <remarks>
            If you expect your cell type to be used in a scenario where a cell can span
            over 100s of rows, you should set this property to true and provide an optimized
            draw routine in the cell renderer that accepts a clipped rectangle. <para/>
            The GridGroupingControls GridNestedTableControl uses this flag to optimize drawing
            of nested tables. Nested tables are all drawn in a child cell and can span thousands
            of rows. Instead of calculating the whole rectangle for the nested cell, the grid
            can pass in just the visible bounds. This improves performance of these nested
            cells a lot.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.Name">
            <summary>
            Gets the name of the cell type. May later be used as key for looking up the cell type.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.DisplayName">
            <summary>
            Gets the display name of the cell type. May later be used to display cell in a selection dialog.
            or property grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.BindingContext">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.BindingContext"/> for this object. You can assign a <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.BindingContext"/>
            form a parent form to this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.Description">
            <summary>
            Gets a description of the cell type.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.SerializeSchemeVersion">
            <summary>
            Gets the version information when cell model is deserialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.Grid">
            <summary>
            Gets a reference to the GridModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ButtonBarSize">
            <summary>
            Gets or sets the total size of any buttons.
            </summary>
            <remarks>Set size.Height to int.MaxValue if button should fill cell and not be
            vertically aligned with text.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelBase.MeasureEmptyCellString">
            <summary>
            Gets or sets the string which is used when doing a resize to fit for cells with empty text.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ActiveTextChanged">
            <summary>
            Occurs when active text has been changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase">
            <summary>
            This is a base class for the renderer part of a cell type.
            </summary>
            <remarks>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            You typically access cell renderers through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CellRenderers"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Dispose">
            <overload>
            Releases the all resources used by the component.
            </overload>
            <summary>
            Releases the all resources used by the component.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.dropDownImp">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ProcessMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Lets you customize and redirect mouse wheel behavior to a cell renderer, e.g. if you have
            a drop-down displayed. Returns true if parent grid should not be scrolled; False if parent grid should scroll.
            </summary>
            <param name="e">The mouse event arguments.</param>
            <returns>returns False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetEditState">
            <summary>
            Returns state information that lets you restore the current editing state (e.g. caret position or other
            cell-type specific information) at a later point with <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetEditState(System.Object)"/>.
            </summary>
            <returns>A cell-type specific object with editing state information.</returns>
            <remarks>
            You need to override this method in a derived cell-type class. Otherwise calling this method
            will have no effect.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetEditState(System.Object)">
            <summary>
            Restores previously retrieved editing state information from a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetEditState"/> call.
            </summary>
            <param name="state">The cell-type specific object with editing state information.</param>
            <remarks>
            You need to override this method in a derived cell-type class. Otherwise calling this method
            will have no effect.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridCellRendererBase object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ToString">
            <override/>
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDeleting">
            <summary>
            Occurs before the text box contents are deleted when user presses <Delete/> key in cell.
            </summary>
            <returns>True if cell contents can be cleared.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.UnwireModel(Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Override this method if you are subscribing to events from a cell model. It is called before the reference to the cell model is reset or when dispose has been called.
            </summary>
            <param name="cellModel">The GridCellModelBase.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.WireModel(Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Override this method if you are subscribing to events from a cell model. It is called after the reference to the cell model has been initialized.
            </summary>
            <param name="cellModel">The GridCellModelBase.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnModelChanged(System.EventArgs)">
            <summary>
            Override this method if you need to know when reference to cell model is changed. This method is called after the reference to cell model has been changed.
            </summary>
            <param name="e">Always EventArgs.Empty.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Dispose(System.Boolean)">
            <summary>
            Unwires any events subscribed from GridControlBase and releases cell buttons.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InvertRect(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draw inverted rectangle at the given rectangle.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="bounds">The Rectangle Bounds.</param>
            <param name="r">Rectangle to invert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDeactivating">
            <summary>
            Called from GridCurrentCell.Deactivate after GridCurrentCell.Deactivating event
            and before the current cell is deactivated.
            </summary>
            <returns>True if renderer can be deactivated; False if deactivation should be aborted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDeactived(System.Int32,System.Int32)">
            <summary>
            Called from GridCurrentCell.Deactivated after the current cell is deactivated
            and before the GridCurrentCell.Deactivated event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnBeginEdit">
            <summary>
            Called from GridCurrentCell.BeginEdit. Checks if cell renderer support
            in place editing. If in-place editing is supported, <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetHasFocusControl(System.Boolean)"/>
            is called which triggers <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnHasFocusControlChanged"/> and initiates repainting
            the cell. In your overriden <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/> method, you should then check <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ShouldDrawFocused(System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnEndEdit">
            <summary>
            Called from GridCurrentCell.EndEdit. If render had focus, <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetHasFocusControl(System.Boolean)"/>
            is called which triggers <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnHasFocusControlChanged"/> and initiates repainting
            the cell. In your overriden <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/> method, you should then check <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ShouldDrawFocused(System.Int32,System.Int32)"/>
            which will return False.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.QueryFocusInside">
            <summary>
            Determines if this control contains focus. Override this method if you
            want to show drop-down windows and indicate the control has not lost focus when
            the drop-down is shown.
            </summary>
            <returns>True if the control or any child control has focus; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetHasFocusControl(System.Boolean)">
            <summary>
            If the control supports in-place editing, set internal member and then fire
            OnHasFocusControlChanged.
            </summary>
            <param name="value">The boolean value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnHasFocusControlChanged">
            <summary>
            Override this method if your cell renderer supports in-place editing and you want
            to do any custom initialization at this point before cell gets redrawn.
            </summary>
            <remarks>
            The default behavior of this virtual method is to force a redraw of the current cell.
            A cell can then initialize an edit control and set focus in the OnDraw method call.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnSaveChanges">
            <summary>
            This method is called from GridCurrentCell.ConfirmChanges when the current cell
            was marked as modified. Any drop-downs have been closed at this time. It saves changes for the current cell.
            </summary>
            <returns>True if changes were saved successfully; False if no changes were saved.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnRejectChanges">
            <summary>
            This is called from GridCurrentCell.RejectChanges. Any drop-downs have been closed at this time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnStartEditing">
            <summary>
            Occurs before the current cell switches into editing mode.
            </summary>
            <returns>True if editing the cell is allowed; false otherwise.</returns>
            <remarks>
            The grid will switch into editing mode when the user presses a key while the cell
            is not in editing mode or when you call <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/>.
            You can cancel the operation by overriding this method and returning false.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnEditingComplete">
            <summary>
            Occurs when the grid completes editing mode for the active current cell.
            </summary>
            <remarks>
            The grid raises this event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> objects <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.EndEdit"/>
            or <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.CancelEdit"/> method is called. The event occurs after <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/> is raised.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnValidate">
            <summary>
            This method is called from GridCurrentCell.Validate after GridCurrentCell.Validating event has been
            fired. The default version checks if the active text fits any criteria as specified
            in the style object: It can be parsed into a cell value and meets GridCellValidateValueInfo criteria.
            </summary>
            <returns>True if the modified text is valid; False otherwise.</returns>
            <remarks>
            If you throw an exception in your override, the exception message will be stored in the
            GridCurrentCell.ErrorMessage string and if specified, a message box will be shown.<para/>
            OnValidate will call ValidateString, which you can also override.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnValidated">
            <summary>
            This method is called from GridCurrentCell.Validate after the current cell contents were
            successfully validated and before GridCurrentCell.Validated event is.
            fired.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnActivating(System.Int32,System.Int32)">
            <summary>
            This is called from GridCurrentCell.Activate after the activating event has been raised
            and allows interception of cell activation.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True is cell can be activated; False otherwise.</returns>
            <remarks>
            When the current cell is moved from one position to another, Essential Grid will
            first deactivate the current cell and afterwards activate the current cell at the
            new position. At the time activate is called, the old current cell is deactivated
            and Essential Grid has no active current cell.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnActivated">
            <summary>
            This is called after the activating event and notifies that at this time
            the current cell has now become the active current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ShouldDrawEditing(System.Int32,System.Int32)">
            <summary>
            Determines if the cell at the specified row and column should be drawn in "editing" mode.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if the cell should be drawn in "editing" mode; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ShouldDrawFocused(System.Int32,System.Int32)">
            <summary>
            Determines if the cell at the specified row and column should be drawn "focused".
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if the cell should be drawn "focused".</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.NotifyCurrentCellChanging">
            <summary>
            Raises the GridCurrentCell.CellChanging event indicating the contents of the
            current cell are about to be changed by the user.
            </summary>
            <returns>True if cell contents can be modified; False if cell contents should not be changed.</returns>
            <remarks>Call this method from your derived renderer if you support modifying the cell
            contents the first time before the user edits the cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.NotifyCurrentCellChanged">
            <summary>
            Raises the GridCurrentCell.CellChanged event indicating the contents of the
            current cell have been changed (e.g. in response to a TextBox.Changed event).
            </summary>
            <remarks>If you have implemented a custom cell type you should call this method
            from your derived renderer if you support modifying the cell
            contents.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.NotifyCurrentCellControlDoubleClick(System.Windows.Forms.Control)">
            <summary>
            Raises the GridCurrentCell.ControlDoubleClick event indicating the cell has
            in-place editing mode and the user double-clicked inside the control
            associated with the current cell.
            </summary>
            <param name="control">A reference to the control associated with the current cell.</param>
            <remarks>
            GridCurrentCell.ControlDoubleClick lets you detect a double click inside
            a cell for any CurrentCellActivateBehavior. If for example the focus is set
            to the renderers control after the first click, the grid will listen for a
            MouseDown on the newly focused control and raise this event on a second click.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlDoubleClick(System.Object,System.EventArgs)">
            <summary>
            Handles the DoubleClick event of the embedded control and raises the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlDoubleClick"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnControlDoubleClick(System.Windows.Forms.Control)">
            <summary>
            Occurs when the current cell
            has in-place editing mode and the user double-clicked inside the control
            associated with the current cell.
            </summary>
            <remarks>
            GridCurrentCell.ControlDoubleClick lets you detect a double click inside
            a cell for any CurrentCellActivateBehavior. If for example the focus is set
            to the renderers control after the first click, the grid will listen for a
            MouseDown on the newly focused control and raise this event on a second click.
            <para/>
            Raising this event is only optional for the cell renderer that manages the active cell.<para/>
            <para/>
            A text box will usually send this event when the associated <see cref="T:System.Windows.Forms.TextBox"/> control has received
            the focus after the cell was switched into edit mode and the user double-clicked. Other cell renderers
            may or may not send this event.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.NotifyCurrentCellControlGotFocus(System.Windows.Forms.Control)">
            <summary>
            Raises the GridCurrentCell.ControlGotFocus event indicating the cell has
            switched to in-place editing and the control associated with the current cell
            has received the focus.
            </summary>
            <param name="control">A reference to the control associated with the current cell.</param>
            <remarks>No derived renderer currently calls this method.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.NotifyCurrentCellControlLostFocus(System.Windows.Forms.Control)">
            <summary>
            Raises the GridCurrentCell.ControlLostFocus event indicating the cell has
            switched to in-place editing and the control associated with the current cell
            has lost the focus.
            </summary>
            <param name="control">Control associated with the current cell.</param>
            <remarks>No derived renderer currently calls this method.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnShowDropDown">
            <summary>
            This is called from GridCurrentCell.ShowDropDown after BeginEdit has been called.
            </summary>
            <remarks>
            If your renderer supports dropped-down state, the drop-down window should be made
            visible at this time.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnCloseDropDown(Syncfusion.Windows.Forms.PopupCloseType)">
            <summary>
            This is called from GridCurrentCell.CloseDropDown.
            </summary>
            <remarks>
            If your renderer supports dropped-down state, the drop-down window should be made
            closed at this time.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <summary>
            Allows custom formatting of a cell by changing its style object.
            </summary>
            <param name="e">Event data</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)"/> is called from <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/>
            in order to allow custom formatting of
            a cell by changing its style object.
            <para/>
            Set the cancel property true if you want to avoid
            the associated cell renderers object <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)"/>
            method to be called.<para/>
            Changes made to the style object will not be saved in the grid nor cached. This event
            is called every time a portion of the grid is repainted and the specified cell belongs
            to the invalidated region of the window that needs to be redrawn.<para/>
            Changes to the style object done at this time will also not be reflected when accessing
            cells though the models indexer. See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>.<para/>
            <note type="note">Do not change base style or cell type at this time.</note>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetViewStyleInfo(System.Int32,System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnOutlineCurrentCell(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Highlights the current cell by inverting the cells border or drawing a thick border.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="r">Specifies the cell rectangle.</param>
            <remarks>
            Override this method if you don't want the default highlighting
            of your cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GridViewLayoutChanged(System.Object,System.EventArgs)">
            <summary>
            Indicates that cell window coordinates in the grid view have changed. Cached coordinates need
            to be recalculated.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnCellLayoutChanged">
            <summary>
            Called when the ViewLayout of the parent grid is changed, for example if grid is scrolled or row height is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnGridGotFocus(System.EventArgs)">
            <summary>
            Called when the parent grid of this cell renderer gets the focus.
            </summary>
            <param name="e">The EventArgs.Empty</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ResetCellLayout">
            <summary>
            Reset window coordinates (cell bounds) of the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetCellBoundsCore(System.Int32,System.Int32)">
            <overload>
            Returns a rectangle with cell bounds for the specified cell. For covered cell,
            the total of all covered cells will be returned.
            </overload>
            <summary>
            Returns a rectangle with cell bounds for the specified cell. For covered cell,
            the total of all covered cells will be returned.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetCellBoundsCore(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns a rectangle with cell bounds for the specified cell. For covered cell,
            the total of all covered cells will be returned.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="includeFloated">Specifies if the range covered by a floating cell should be returned</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetCellBoundsCoreInt(System.Int32,System.Int32,System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the col.</param>
            <param name="nonClientIfVisible">if set to <c>true</c> [non client if visible].</param>
            <returns>returns Rectangle</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetCellLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellLayout"/> for the specified cell using cell state information as specified in the style object
            and caches the layout information.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellLayout"/> with layout information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetCellClientRectangle(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <summary>
            Get the cell client rectangle taking floated cells into consideration.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="floatedCells">Specifies if the range covered by a floating cell should be returned.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> for the client area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.PerformLayout(System.Int32,System.Int32)">
            <overload>
            Calculates the CellLayout for a specified cell.
            </overload>
            <summary>
            Calculates the CellLayout for the specified cell using cell state information as specified in the style object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellLayout"/> with layout information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.PerformLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Calculates the CellLayout for the specified cell using cell state information as specified in the style object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellLayout"/> with layout information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.PerformLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle)">
            <summary>
            Calculates the CellLayout for the specified cell using cell state information as specified in the style object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="cellRectangle">The Rectangle.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellLayout"/> with layout information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RemoveMargins(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Removes TextMargins from the specified client bounds.
            </summary>
            <param name="clientRectangle">The Rectangle</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> with the bounds.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> with the bounds.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DrawSingleCell(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <summary>
            Draw the contents of the specified cell including cell background and optionally also the borders. Call
            this method if you want to draw a stand-alone cell and you want to ensure that also the background
            of the cell and also the borders are painted.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="cellRectangle">Specifies the cell rectangle.</param>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <param name="style">A reference to the style of the cell.</param>
            <param name="includeBorders">Specifies whether borders should also be drawn or excluded.</param>
            <remarks>
            The method calls DrawBackground to draw
            the background as specified in the style object.<para/>
            If includeBorders is false the area covered by borders is excluded when the rectangle
            is passed to the DrawBackground method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Draw the contents of the specified cell.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="cellRectangle">Specifies the cell rectangle.</param>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <param name="style">A reference to the style of the cell.</param>
            <remarks>
            When drawing cells, it is necessary to determine if the
            specified cell (with rowIndex and colIndex) is the current cell and if
            it is active.<para/>
            If your control is associated with a control and supports in-place editing
            and the specified cell is the current cell, you should position the control. Take a look at the GridTextBoxCellRenderer
            implementation of this method for an example.<para/>
            Otherwise, you can simply draw the cell. <para/>
            Please note that you should first call DrawBackground to draw
            the background and borders as specified in the style object.<para/>
            The base-class version of this method first calls PerformLayout and then the
            cell renderers OnDraw method. After the inner cell has been drawn, it will draw
            each cell button for the cell.
            <note type="note">Overriding this method is normally not necessary. In most cases, it is
            sufficient to override the OnDraw method.</note>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellButton(Syncfusion.Windows.Forms.Grid.GridCellButton,System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Draws the cell button element at the specified row and column index.
            </summary>
            <param name="button">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to be drawn.</param>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="bActive">True if this is the active current cell; False otherwise.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellButtonBackground(Syncfusion.Windows.Forms.Grid.GridCellButton,System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Draws a button using <see cref="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)"/>; if XP Themes
            are enabled, button will be drawn themed.
            </summary>
            <remarks>
            Override this method if you want to have buttons with a customized color, e.g. a push button
            drawn with the back color as specified with the interior property.
            </remarks>
            <param name="button">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to be drawn.</param>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rect">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="buttonState">A <see cref="T:System.Windows.Forms.ButtonState"/> that specifies the current state.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <example>
            This example draws a custom button element background.
            <code lang="C#">
                    public static void Draw3dFrame(Graphics g, int x0, int y0, int x1, int y1, int w, Color rgbTopLeft, Color rgbBottomRight)
                    {
                        Rectangle rc;
            <para/>
                        for (int i = 0; i != w; i++)
                        {
                            // Top
                            Brush brTL = new SolidBrush(rgbTopLeft);
                            rc = Rectangle.FromLTRB(x0, y0, x1, y0+1);
                            g.FillRectangle(brTL, rc);
            <para/>
                            // Left
                            rc = Rectangle.FromLTRB(x0, y0, x0+1, y1);
                            g.FillRectangle(brTL, rc);
                            brTL.Dispose();
            <para/>
                            Brush brBR = new SolidBrush(rgbBottomRight);
            <para/>
                            // Bottom
                            rc = Rectangle.FromLTRB(x0, y1, x1+1, y1+1);
                            g.FillRectangle(brBR, rc);
            <para/>
                            // Right
                            rc = Rectangle.FromLTRB(x1, y0, x1+1, y1);
                            g.FillRectangle(brBR, rc);
                            brBR.Dispose();
            <para/>
                            if (i != w-1)
                            {
                                x0++;
                                y0++;
                                x1--;
                                y1--;
                            }
                        }
                    }
                    protected override void OnDrawCellButtonBackground(GridCellButton button, Graphics g, Rectangle rect, ButtonState buttonState, GridStyleInfo style)
                    {
                        bool drawPressed = (buttonState &amp; ButtonState.Pushed) != 0;
                        Color hilight = SystemColors.ControlLightLight;
                        Color shadow = SystemColors.ControlDarkDark;
                        if (!drawPressed)
                        {
                            GridPaint.Draw3dFrame(g, rect.Left, rect.Top, rect.Right-1, rect.Bottom-1, 1,
                                hilight, shadow);
                        }
                        else
                        {
                            Brush br = new SolidBrush(shadow);
                            g.FillRectangle(br, Rectangle.FromLTRB(rect.Left, rect.Bottom-1, rect.Right-1, rect.Bottom));
                            g.FillRectangle(br, Rectangle.FromLTRB(rect.Right-1, rect.Top, rect.Right, rect.Bottom));
                            br.Dispose();
                        }
                    }
            </code>
            <code lang="VB">
            Public Shared Sub Draw3dFrame(g As Graphics, x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer, w As Integer, rgbTopLeft As Color, rgbBottomRight As Color)
                Dim rc As Rectangle
            <para/>
                Dim i As Integer
            <para/>
                While i &lt;&gt; w
                    ' Top
                    Dim brTL = New SolidBrush(rgbTopLeft)
                    rc = Rectangle.FromLTRB(x0, y0, x1, y0 + 1)
                    g.FillRectangle(brTL, rc)
            <para/>
                    ' Left
                    rc = Rectangle.FromLTRB(x0, y0, x0 + 1, y1)
                    g.FillRectangle(brTL, rc)
                    brTL.Dispose()
            <para/>
                    Dim brBR = New SolidBrush(rgbBottomRight)
            <para/>
                    ' Bottom
                    rc = Rectangle.FromLTRB(x0, y1, x1 + 1, y1 + 1)
                    g.FillRectangle(brBR, rc)
            <para/>
                    ' Right
                    rc = Rectangle.FromLTRB(x1, y0, x1 + 1, y1)
                    g.FillRectangle(brBR, rc)
                    brBR.Dispose()
            <para/>
                    If i &lt;&gt; w - 1 Then
                        x0 += 1
                        y0 += 1
                        x1 -= 1
                        y1 -= 1
                    End If
                    i += 1
                End While
            End Sub 'Draw3dFrame
            <para/>
            Protected Overrides Sub OnDrawCellButtonBackground(button As GridCellButton, g As Graphics, rect As Rectangle, buttonState As ButtonState, style As GridStyleInfo)
                Dim drawPressed As Boolean = (buttonState And ButtonState.Pushed) &lt;&gt; 0
                Dim hilight As Color = SystemColors.ControlLightLight
                Dim shadow As Color = SystemColors.ControlDarkDark
                If Not drawPressed Then
                    GridPaint.Draw3dFrame(g, rect.Left, rect.Top, rect.Right - 1, rect.Bottom - 1, 1, hilight, shadow)
                Else
                    Dim br = New SolidBrush(shadow)
                    g.FillRectangle(br, Rectangle.FromLTRB(rect.Left, rect.Bottom - 1, rect.Right - 1, rect.Bottom))
                    g.FillRectangle(br, Rectangle.FromLTRB(rect.Right - 1, rect.Top, rect.Right, rect.Bottom))
                    br.Dispose()
                End If
            End Sub 'OnDrawCellButtonBackground
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnQueryShowButtons(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether the cell buttons shall be drawn for the specific row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>returns boolean value to indicate the cell buttons shall be drawn for the specific row and column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            This method is called from the cell renderer's draw method to draw the contents
            of the client bounds for the cell, e.g. the text for a static cell.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="clientRectangle">Specifies the client rectangle. It is the cell rectangle without buttons and borders.</param>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <param name="style">A reference to the style object of the cell.</param>
            <remarks>
            When drawing cells, it is necessary to determine if the
            specified cell (with rowIndex and colIndex) is the current cell and if
            it is active.<para/>
            If your control is associated with a control and supports in-place editing
            and the specified cell is the current cell, you should position the control. Take a look at the GridTextBoxCellRenderer
            implementation of this method for an example.<para/>
            Otherwise, you can simply draw the cell. <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.AddButton(Syncfusion.Windows.Forms.Grid.GridCellButton)">
            <summary>
            Adds a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to the cell renderers list of cell buttons.
            </summary>
            <param name="button">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to add.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RemoveButton(Syncfusion.Windows.Forms.Grid.GridCellButton)">
            <summary>
            Removes a GridCellButton from the cell renderer's list of cell buttons.
            </summary>
            <param name="button">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetButton(System.Int32)">
            <summary>
            Returns a reference to the the GridCellButton at the specified index.
            </summary>
            <param name="index">The index of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/>.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> at the index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <summary>
            Checks if the background for a cell needs drawing and optionally calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/>
            and also draws the frame for the cell as specified in the style object.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rect">The Rectangle</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="fillBackground">True if background needs to be redrawn.</param>
            <remarks>
            The method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/> for covered cells and bannered cells. For regular
            cells, you can force <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/> to be called by assigning BrushInfo.Empty
            to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>. You can
            do this in <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)"/>, for example.
            <para/>
            Otherwise <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/> will not be called
            for regular cells because of internal drawing optimizations within the grid. By default
            the grid optimizes drawing such that the background of neighboring cells with the same
            color is drawn in one operation.
            <para/>
            After the background of a cell has been drawn (either by a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/>
            or because of earlier drawing inside the grid) the cells frame is drawn as specified
            with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> by calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DrawCellAppearance(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <summary>
            Called to draw / erase the background for a cell.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs"/> that contains the event data.</param>
            <remarks>
            This method is called for covered cells and bannered cells. For regular
            cells, you can force <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/> to be called by assigning BrushInfo.Empty
            to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>. You can
            do this for example in <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)"/>.
            <para/>
            Otherwise <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/> will not be called
            for regular cells because of internal drawing optimizations within the grid. By default
            the grid optimizes drawing such that the background of neighboring cells with the same
            color is drawn in one operation.
            <para/>
            The method will also not be called if you handle the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/>
            event of <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> and set e.Cancel = true.
            <para/>
            The default version of this method fills the entire background as specified
            with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> and also draws the image specified
            with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImage"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DrawCellAppearance(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Draws the frame for the cells appearance (sunken or raised).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rect">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <remarks>
            If you want to draw custom borders around a cell, be sure to reserve space
            for the extra area occupied by your borders. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BorderMargins"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetMarkHeaderState(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Checks if this is a header cell that should indicate current cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>True if header shall be outlined; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetControl(System.Windows.Forms.Control)">
            <summary>
            Sets a reference to the associated control.
            </summary>
            <param name="control">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Control"/> to be associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlLostFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the LostFocus event of the embedded control and raises the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlLostFocus"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlGotFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the GotFocus event of the embedded control and raises the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlGotFocus"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnSetControlText(System.String)">
            <summary>
            Called right after ControlText was set.
            </summary>
            <param name="text">The ControlText</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ResetControlText">
            <summary>
            Resets the ControlText to its original state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.UpdateControlValue">
            <summary>
            Forces the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlValue"/> to reflect current control contents. Call this method
            if you want to know the value that will be saved in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>
            if user would accept current cells contents.
            </summary>
            <remarks>
            This method requires that <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlText"/> contains most recent value. Override this
            method and derived cell renderers if you need to get the text from the embedded control. <para/>
            TextBoxCellRenderer does for example get the value from <see cref="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxText"/> instead.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetControlValue(System.Object,System.Boolean)">
            <summary>
            Sets the cell value for the current cell and optionally initializes the ControlText based on the value.
            </summary>
            <param name="value">The cell value.</param>
            <param name="initControlText">True if InitializeControlText should be called.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InitializeControlText(System.Object)">
            <summary>
            Initializes <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlText"/> based on the specified cell value.
            </summary>
            <param name="controlValue">
            The cell value. See the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            </param>
            <remarks>
            The default behavior of this method is to call <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetFormattedText(System.Object)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.StyleInfo"/> object and then raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText"/>
            event.<para/>
            The user can catch the event and change the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs.ControlText"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs"/> object.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ResetControlValue">
            <summary>
            Resets the cell value of the current cell to its original state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetDisplayText">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlText"/>.
            </summary>
            <returns>Display text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetCellValue">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlValue"/>.
            </summary>
            <returns>Cell value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Initialize(System.Int32,System.Int32)">
            <summary>
            Initializes the intrinsic state of the control for the current cell.
            </summary>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <remarks>
            Initializes the intrinsic state (e.g., row, column, style) of
            the control for the current cell. This method is called when
            the current cell has moved. The operations that follow all
            depend on the intrinsic state of the control.<para/>
            Initialize calculates the cell layout (inner, client rectangle bounds) and then calls OnInitialize.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnInitialize(System.Int32,System.Int32)">
            <summary>
            This method gets called from the cell renderer's initialize method. Override this method if you need to any initialization
            for the current cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InitalizedAt(System.Int32,System.Int32)">
            <summary>
            Determines whether this cell type serves as current cell or if
            the current cell is at the specified row and column id.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if control is used as current cell; False if control is not current cell.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Hide">
            <summary>
            If there is a control associated with the cell type (for in-place editing), override this
            method to hide the control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsControlVisible">
            <summary>
            Determines if there is a control associated with the cell type (for in-place editing) and
            if it is visible.
            </summary>
            <returns>True if it is visible; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            Calls protected virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ProcessKeyEventArgs(System.Windows.Forms.Message@)"/> method.
            </summary>
            <param name="m">The <see cref="T:System.Windows.Forms.Message"/> with data of the keyboard event.</param>
            <returns>True if key was handled; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            This is called from GridControlBase.ProcessKeyEventArgs and allows your customized cell renderer
            to process keyboard events before the GridControlBase gets the actual KeyDown / KeyUp event.
            </summary>
            <param name="m">The <see cref="T:System.Windows.Forms.Message"/> with data of the keyboard event.</param>
            <returns>True if key was handled; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Calls OnKeyDown.
            </summary>
            <param name="e">The KeyEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Calls OnKeyPress.
            </summary>
            <param name="e">The KeyPressEventArg</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            User pressed key down (similar to Control.OnKeyDown).
            </summary>
            <param name="e">The KeyEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            User released key (similar to Control.OnKeyUp).
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> with data of the keyboard event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            User pressed key (similar to Control.OnKeyPress).
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> with data of the keyboard event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Copy">
            <summary>
            Called when user initiates a clipboard copy and the grid has a current cell but no range is selected.
            </summary>
            <returns>True if successful; False if failed.</returns>
            <remarks>
            Copy() performs the following tasks:<para/>
            a) Copy selected text as formatted in the cell.<para/>
            b) Only if cell is inactive copy the GridStyleInfo info for the cell.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Paste">
            <summary>
            Called when user initiates a clipboard paste and the grid has a current cell but no range is selected.
            </summary>
            <returns>True if successful; False if failed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Cut">
            <summary>
            Called when user initiates a clipboard cut and the grid has a current cell but no range is selected.
            </summary>
            <returns>True if successful; False if failed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.CanCopy">
            <summary>
            Determines whether current cell can be copied to clipboard.
            </summary>
            <returns>True if copy is supported; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.CanCut">
            <summary>
            Determines whether current cell can be cut to clipboard.
            </summary>
            <returns>True if cut is supported; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.CanPaste">
            <summary>
            Determines whether current cell can be pasted from clipboard.
            </summary>
            <returns>True if paste is supported; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.FindText(System.String,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridFindTextOptions,System.Boolean)">
            <summary>
            Searches the specified text and optionally moves the current cell to the cell if the
            text was found.
            </summary>
            <param name="find">The text to be searched.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">Search criteria.</param>
            <param name="bSetCell">True if current cell should be moved after text was found.</param>
            <returns>True if text was found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ReplaceText(System.String,System.String,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridFindTextOptions,System.Boolean)">
            <summary>
            Searches the specified text and optionally moves the current cell to the cell if the
            text was found.
            </summary>
            <param name="find">The text to be searched.</param>
            <param name="replace">The replace text.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">Search criteria.</param>
            <param name="bSetCell">True if current cell should be moved after text was found.</param>
            <returns>True if text was found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ReplaceSel(System.String)">
            <summary>
            Replaces the selected text in the current cell.
            </summary>
            <param name="replacement">The string to replace the current selected text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetSelectedText(System.String@)">
            <summary>
            Return the selected text in the current cell.
            </summary>
            <param name="strResult">The resulting string with the selected text</param>
            <returns>True if successful; False if failed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnNotifyMsg(System.Windows.Forms.Message@)">
            <summary>
            Called from OnVScroll, OnHScroll before grid is scrolled.
            </summary>
            <param name="pMsg">The Message</param>
            <remarks>
            Will deactivate the current cell when the user scrolls to the right and the current cell
            is a floating or covered cell which spans the freeze columns / row line.<para/>
            Also, any dropped-down windows will be closed.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsReadOnly">
            <summary>
            Returns whether the current cell is Read-only.
            </summary>
            <returns>True if Read-only; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ValidateString(System.String)">
            <summary>
            Called from OnValidate and checks whether the specified text is valid.
            </summary>
            <param name="text">Text to be validated.</param>
            <returns>True if text if valid; False otherwise.</returns>
            <remarks>
            This also works for limiting the keyboard input, e.g. only digits.
            Called after the user pressed a key and before it is accepted.
            </remarks>
            <example>
            Don't allow "-" to be typed.
            <code lang="C#">
                      public override bool ValidateString(string text)
                      {
                           TraceUtil.TraceCurrentMethodInfoIf(Switches.CellRenderer.TraceVerbose, text);
            <para/>
                           if (text.IndexOf("-") != -1)
                                return false;
                           return true;
                      }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseHitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController. Checks if the mouse is over a cell button element
            and if the cell is clickable.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="mouseEventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="controller">The current controller requested to handle this mouse event.</param>
            <returns>Non-zero hit context value if you request to handle the mouse event; zero if you vote
            not to handle the mouse event.</returns>
            <remarks>Override OnHitTest in your derived cell renderer if you want to catch mouse events.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnHitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <summary>
            This method is called to determine whether the cell renderer wants to receive mouse events
            for the give cell at the given coordinates.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="controller">The current controller requested to handle this mouse event.</param>
            <returns>Non-zero hit context value if you request to handle the mouse event; zero if you vote
            not to handle the mouse event.</returns>
            <remarks>Override this method and return GridHitTestContext.Cell (or any other non-zero value)
            to force mouse messages (OnMouseDown, OnMouseHover, OnMouseUp) being called for the cell renderer.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseGetCursor(System.Int32,System.Int32)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController. Returns the cursor to be displayed at the given row or column.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>returns Cursor</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnGetCursor(System.Int32,System.Int32)">
            <summary>
            Override this method if you want to change the cursor for this cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The <see cref="T:System.Windows.Forms.Cursor"/> to be displayed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseMouseHoverEnter(System.Int32,System.Int32)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when HitTest has indicated it wants
            to receive mouse events and the user has moved the mouse into the cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <remarks>See also MouseHoverLeave.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHoverEnter(System.Int32,System.Int32)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when your cell renderer has indicated
            in its OnHitTest override that it wants to receive mouse events and the user has moved
            the mouse into the cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <remarks>See also OnMouseHoverLeave.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseMouseHover(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHover"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHoverEnter(System.Int32,System.Int32)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHover(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when your cell renderer has indicated
            in its OnHitTest override that it wants to receive mouse events and the user is moving
            the mouse over the cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
            <remarks>OnMouseHover will only be called after OnMouseHoveEnter. When the user
            moves the mouse out of the MouseHoverLeave is called.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseMouseHoverLeave(System.Int32,System.Int32,System.EventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHoverLeave(System.Int32,System.Int32,System.EventArgs)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHoverLeave(System.Int32,System.Int32,System.EventArgs)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when your cell renderer has indicated
            in its OnHitTest override that it wants to receive mouse events and the user is moving
            the mouse out of the cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> with event data.</param>
            <remarks>Once OnMouseHoveEnter has been called you are guaranteed to receive a OnMouseHoverLeave
            call either if the user moves the mouse of the cell boundaries or presses a button or if the
            mouse operation is canceled.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseMouseDown(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseDown"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseDown(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseDown(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when your cell renderer has indicated
            in its OnHitTest override that it wants to receive mouse events and the user has pressed
            a mouse button.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the Control.MouseDown event of the attached cell control.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">The MouseEventArgs with mouse position relative to top-left corner of cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseMouseMove(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseMove"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseMove(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseMove(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when your cell renderer has indicated
            in its OnHitTest override that it wants to receive mouse events and the user has pressed
            a mouse button and is moving the mouse pointer.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.mouseUpCellButtonHitTest">
            <summary>
            RaiseMouseUp wil save the RaiseHitTest return value here. OnMouseUp will check this and
            only raise CellClick when no cell button was clicked.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseMouseUp(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseUp"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseUp(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsPointOverImage(System.Int32,System.Int32,System.Drawing.Point)">
            <summary>
            Checks if the specified point is over an image (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>) .
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="pt">The point to be tested.</param>
            <returns>True if inside image; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseUp(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when your cell renderer has indicated
            in its OnHitTest override that it wants to receive mouse events and the user has pressed
            a mouse button and is releasing the button.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseCancelMode(System.Int32,System.Int32)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCancelMode"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnCancelMode(System.Int32,System.Int32)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnCancelMode(System.Int32,System.Int32)">
            <summary>
            This is called from GridClickCellsMouseController or GridSelectCellsMouseController when your cell renderer has indicated
            in its OnHitTest override that it wants to receive mouse events and the mouse operation
            is canceled.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is called from GridSelectCellsMouseController when the user clicked inside a cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RaiseDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> event and initiates a call to the virtual <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is called from GridSelectCellsMouseController when the user double-clicks inside a cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnButtonClicked(System.Int32,System.Int32,System.Int32)">
            <summary>
            This method is called when the user clicks a cell button inside cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="button">The button</param>
            <remarks>In your overriden version
            of this method, you can activate the current cell for the given row and column index and then
            drop-down a list.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.CreateDropDownContainer">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownContainer"/> and associates it with
            the cell's parent grid.
            </summary>
            <returns>The container where you can insert child controls to be displayed as drop-down part for your cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.EnsureDropDownContainer">
            <summary>
            Ensures the container is valid and initialized.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InitializeDropDownContainer">
            <summary>
            Called to initialize contents of the drop-down container for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ChildClosing(Syncfusion.Windows.Forms.IPopupChild,Syncfusion.Windows.Forms.PopupCloseType)">
            <summary>
            Will be called to indicate that the popup child was closed in the specified mode.
            </summary>
            <param name="childUI">The child that was closed.</param>
            <param name="popupCloseType">A <see cref="T:Syncfusion.Windows.Forms.PopupCloseType"/> value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DropDownContainerCloseDropDown(System.Object,Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <summary>
            Will be called to indicate that the popup child was closed.
            </summary>
            <param name="sender">The child that was closed.</param>
            <param name="e">The event data with a <see cref="P:Syncfusion.Windows.Forms.PopupClosedEventArgs.PopupCloseType"/> value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <summary>
            Occurs after the popup has been dropped-down and made visible.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs when the drop-down container is about to be shown.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.NotifyShowingDropDown(System.Drawing.Size@)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowingDropDown(Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)"/> for the parent grid.
            </summary>
            <param name="size">The suggested size of the drop-down.</param>
            <returns>True if drop-down should be shown; False if operation should be canceled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.NotifyShowedDropDown">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowedDropDown(System.EventArgs)"/> for the parent grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsRelatedControl(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Called to find out whether a specified control is part of the popup hierarchy.
            </summary>
            <param name="control">A control instance. </param>
            <param name="askPopupParent">True indicates this query should be passed to the IPopupParent, if any; False indicates you should not query the popup parent.</param>
            <returns>True if the control is part of the popup hierarchy; False if not.</returns>
            <seealso cref="T:Syncfusion.Windows.Forms.IPopupItem"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnScrollInView(Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason)">
            <summary>
            Called from GridCurrentCell.ScrollInView to determine if cell should be scrolled into
            view when GridCurrentCell.ScrollInView is called.
            </summary>
            <param name="reason">The reason for scrolling current cell into view.</param>
            <returns>True if cell supports scrolling into view.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.GetNestedCurrentCell">
            <summary>
            Returns a nested current cell if this cell type hosts a GridControl by itself (for
            example GridNestedTableControlCellRenderer with a GridGroupingControl overrides
            this method).
            </summary>
            <returns>A nested current cell object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ShouldRefreshCurrentCell">
            <summary>
            Called to determine whether the cell needs to be repainted when it becomes
            the active current cell.
            </summary>
            <returns>True if cell needs to be repainted; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsDisposing">
            <summary>
            Gets a value indicating whether object is executing <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Dispose"/> method call. Returns true if object is executing <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Dispose"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsDisposed">
            <summary>
            Gets a value indicating whether object has been disposed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DropDownImp">
            <summary>
            Gets or sets a helper object for drop-down cell functionality.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Model">
            <summary>
            Gets or sets a reference to the GridCellModelBase that this cell renderer
            is associated with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.CurrentCell">
            <summary>
            Gets a reference to GridCurrentCell implementation
            of the GridControlBase this cell renderer is associated with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InBeginEdit">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnBeginEdit"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SupportsFocusControl">
            <summary>
            Gets or sets a value indicating whether the cell renderer supports in-place editing with focus
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SupportsEditing">
            <summary>
            Gets or sets a value indicating whether the cell renderer supports being switched into edit mode. Default is true, only for GridStaticCellRenderer
            and GridHeaderCellRenderer it is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.HasFocusControl">
            <summary>
            Gets a value indicating whether the cell renderer has the focus (is in-place edit mode).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsEditing">
            <summary>
            Gets a value indicating whether BeginEdit has been called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.IsDroppedDown">
            <summary>
            Gets a value indicating whether the current cell is in a dropped-down state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Control">
            <summary>
            Gets a reference to the associated control. If no control is
            associated with the cell type, NULL will be returned.
            </summary>
            <returns>Reference to the associated control. Can be NULL.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InSetControlText">
            <summary>
            Gets a value indicating whether ControlText setter was called. True when ControlText setter was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlText">
            <summary>
            Gets or sets the active text that is displayed for the current cell, e.g. TextBox.Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.LastOnSetControlTextFailed">
            <summary> Gets or sets a value indicating whether last OnSetControl TextFailed. For internal use.</summary>
            <exclude/>
            <remarks>
            GridComboBoxCellRenderer.OnSetControlText sets this LastOnSetControlTextFailed = true
            if (TextBoxText != text) after calling base.OnSetControlText(text); // Sets TextBoxText.
            <para/>
            In that case ControlText will revert back any changes.
            <para/>
            This fixes issue with cancelling Changing event in comboboxes.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.HasControlText">
            <summary>
            Gets a value indicating whether ControlText for the current cell has been set.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InSetControlValue">
            <summary>
            Gets a value indicating whether the ControlValue setter was called. True if ControlValue setter was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlValue">
            <summary>
            Gets or sets the cell value for the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InSetSetControlValue">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetControlValue(System.Object,System.Boolean)"/> method was called. True when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.SetControlValue(System.Object,System.Boolean)"/> method was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.HasControlValue">
            <summary>
            Gets a value indicating whether the cell value for the current cell has been changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.InInitialize">
            <summary>
            Gets a value indicating whether is in initialize method. True while in initialize method.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.CurrentStyle">
            <summary>
            Gets the current view style for the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Initalized">
            <summary>
            Gets a value indicating whether this cell type serves as current cell or if
            the current cell is at the specified row and column id.
            </summary>
            <returns>True if control is used as current cell; False if control is not current cell.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Grid">
            <summary>
            Gets a reference to the parent grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.StyleInfo">
            <summary>
            Gets a reference to the style object associated with the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ForceRefreshOnActivateCell">
            <summary>Gets or sets a value indicating whether your control needs to be refreshed when it
            becomes the current cell in the grid.</summary>
            <remarks>
            If you set this
            attribute to be true, some grid internal optimizations with
            outlining the current cell are turned off. These optimizations
            assume that the style of a cell does not change when it has
            become the current cell.
            If your control's appearance depends on whether it is a
            current cell or not, you should set this attribute True (
            default is False).
            For example, if you have a password control which should be
            drawn with plain text only when it is the current cell, you
            may set the ForceRefreshOnActivateCell attribute of the
            specific control to be true.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.RowIndex">
            <summary>
            Gets or sets the row id of the current cell.
            </summary>
            <remarks>
            This value is only valid if GridControlBase::Init has been called
            and an intrinsic state is initialized; if the control is
            currently not used as current cell, the value is
            undetermined.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ColIndex">
            <summary>
            Gets or sets the column id of the current cell.
            </summary>
            <remarks>
            This value is only valid if GridControlBase::Init has been called
            and intrinsic state is initialized; if the control is
            currently not used as current cell, the value is
            undetermined.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.MouseDownTick">
            <summary>
            Gets or sets the cached Environment.TickCount of the last MouseDown event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.MouseDownPoint">
            <summary>
            Gets or sets the cached mouse position of the last MouseDown event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ClickOverImage">
            <summary>
            Gets or sets a value indicating whether the mouse was over an image (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>)
            in static cell when the mouse was released.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.AlwaysRaiseCellClick">
            <summary>
            Gets or sets a value indicating whether a CellClick event should always be raised. If
            this property is false, it depends on <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/>
            if <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> is raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DropDownPart">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDropDownCellImp"/> that provides drop-down logic for this renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DropDownButton">
            <summary>
            Gets or sets the drop-down button.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.DropDownContainer">
            <summary>
            Gets the container where you can insert child controls to be displayed as drop-down part for your cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel">
            <summary>
            Implements the data / model part of a column or row header.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel"/> can serve as a model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStaticCellModel">
            <summary>
            Defines the data / model part of a static cell. A static cell is also a base class for many
            other cell types that display text.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>
            instances if a there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the cell model.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the cell model.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.OnQueryCanMergeCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridMergeCellDirection)">
            <override/>
            <summary>
            Determines whether the cell supports merging of neighboring cells.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="mergeCellDirection">Specifies if rows or columns should be merged.</param>
            <returns>True if merging is possible; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.OnQueryCanFloatCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryFloatCell)">
            <override/>
            <summary>
            Determines whether the cell supports floating over a neighboring cell or can be
            flooded by a previous cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="query">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryFloatCell"/> value that specifies whether a cell is asked
            about support for floating over another cell or being flooded by a previous cell.</param>
            <returns>True if floating is possible; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.AllowFloating">
            <summary>
            Gets or sets a value indicating whether this celltype supports being floated or flooded.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStaticCellModel.AllowMerging">
            <summary>
            Gets or sets a value indicating whether this celltype supports being merged.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer">
            <summary>
            Implements the renderer as part of a column or row header.
            </summary>
            <remarks>
            <para/>
            There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel"/> if several views display the same.
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The header cell is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is true.
            <para/>
            <para/>
            The following table lists some characteristics about the header cell type.
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>Header</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Click Only</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>When set to <see cref="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Flat"/>, the header will be drawn with slightly raised edges typical for cell headers. If the grid is XP Themes enabled, the headers will be drawn with XP Themes look. If you specify Sunken or Raised, the header will be drawn with sunken or raised edges and not XP Themed. (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>Header (Default: TextBox)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>If empty, the standard header text will be drawn as specified with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedRowHeaders"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedColHeaders"/> properties in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> is not NULL, the cell value will be displayed as header text.  (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the header cell can be activated as current cell when the user clicks onto the header. Usually you do not want a header to be activated as current cell unless you want to have editing capabilities such as allowing user to rename header text in place. (You would have to implement a custom header cell for this.) (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value can not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for a image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description>Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. If grid is XP Themes enabled, this color will be ignored and the header will be drawn with default XP Themes header background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for a individual cell when merging cells feature has been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with  <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>If empty, the standard header text will be drawn as specified with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedRowHeaders"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedColHeaders"/> properties in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> is not NULL, the cell value will be displayed as header text.  (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set.  (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: true)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer">
            <summary>
            Defines the renderer part of a static cell. A static cell renderer is also a base class for many
            other cell types and provides the inactive cell rendering for cell types that support editing (such as
            a text box or combo box).
            </summary>
            <remarks>
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The following table lists some characteristics about the Static cell type.
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>Static</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Click Only</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>Both</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImage"/> (<see cref="T:System.Drawing.Image"/>)</term>
                    <description>Gets / sets the image that the cell displays as background. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageMode"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode"/>)</term>
                    <description>Indicates how the background image is displayed. (Default: GridBackgroundImageMode)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>Static. (Default: TextBox)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cells value. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if text can float into the boundaries of a neighboring cell. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if this cell can be flooded by a previous cell. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for an individual cell when merging cells feature has been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with  <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell values that are being checked before any user changes are committed to the grid cell's style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: true)</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridStaticCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.CanCopy">
            <summary>
            Allows single cell copy for static cells..
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.CanCut">
            <summary>
            Allows single cell cut for static cells..
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.RemoveMargins(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Removes TextMargins from the specified client bounds.
            </summary>
            <param name="clientRectangle">The Rectangle</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.DrawImage(System.Drawing.Graphics,System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <overload>
            Draws an image at a given position in an ImageList onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/>.
            </overload>
            <summary>
            Draws an image at a given position in an ImageList onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="imageList">The image list.</param>      
            <param name="imageIndex">The image index in the image list.</param>
            <param name="bounds">The target rectangle where the image should be drawn.</param>
            <param name="isRightToLeft">Indicates if grid is in RightToLeft mode.</param>
            <returns>The bounds of the rectangle. Might differ if it was vertically centered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.DrawImage(System.Drawing.Graphics,System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws an image at a given position in an ImageList onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="imageList">The image list.</param>       
            <param name="imageIndex">The image index in the image list.</param>
            <param name="bounds">The target rectangle where the image should be drawn.</param>
            <param name="clipBounds">The target rectangle where the image should be clipped.</param>
            <param name="isRightToLeft">Indicates if grid is in RightToLeft mode.</param>
            <returns>The bounds of the rectangle. Might differ if it was vertically centered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.DrawImage(System.Drawing.Graphics,System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Draws an image at a given position in an ImageList onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="imageList">The image list.</param>
            <param name="imageIndex">The image index in the image list.</param>
            <param name="bounds">The target rectangle where the image should be drawn.</param>
            <returns>The bounds of the rectangle. Might differ if it was vertically centered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Color,System.Boolean)">
            <overload>
            Draws a text at a given position onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/>.
            </overload>
            <summary>
            Draws a text at a given position onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="g">Points to the device context.</param>       
            <param name="displayText">The display text.</param>
            <param name="font">The font value.</param>
            <param name="textRectangle">The text rectangle.</param>
            <param name="style">Cell information with alignment, trimming, and HotkeyPrefix information.</param>
            <param name="textColor">The text color.</param>
            <param name="isRightToLeft">Indicates if grid is in RightToLeft mode.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            Draws a text at a given position onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/> and
            draws text optionally disabled.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="displayText">The display text.</param>
            <param name="font">The font value.</param>
            <param name="textRectangle">The text rectangle.</param>      
            <param name="style">Cell information with alignment, trimming, and HotkeyPrefix information.</param>
            <param name="textColor">The text color.</param>
            <param name="drawDisabled">True if text should be drawn disabled.</param>
            <param name="isRightToLeft">Indicates if grid is in RightToLeft mode.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Color)">
            <summary>
            Draws a text at a given position onto the <see cref="T:System.Drawing.Graphics"/> canvas at a specified <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="displayText">The display text.</param>
            <param name="font">The font value.</param>
            <param name="textRectangle">The text rectangle.</param>
            <param name="style">Cell information with alignment, trimming, and HotkeyPrefix information.</param>
            <param name="textColor">The text color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.MeasureDisplayStringWidth(System.Drawing.Graphics,System.String,System.Drawing.Font)">
            <summary>
            UseGdiPlusRightAlignedTextWorkaround implements a work-around for a GDI+ known issue with
            right-aligned text and DrawString.
            </summary>
            <remarks>
            When you have cells with right-aligned text, some words are not aligned at the right border as
            you would expect. This is because of GDI+ designed behavior, and the degree of the problem varies
            from font to font. You can see this behavior for example with regular System.Windows.Forms.Label
            controls. Since Essential Grid relies on GDI+, it exhibits the same behavior. Besides using a
            Monospaced Font, some work around include using either antialiased string drawing or
            explicitly measuring the string width and not relying on DrawString to draw the text right-aligned.
            <para/>
            When you enable UseGdiPlusRightAlignedTextWorkaround, the static cell renderer will
            use the measure string width workaround. However, this will slow down drawing of right-aligned text.
            </remarks>
            <returns>returns Measure Display String Width</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer.IsPointOverImage(System.Int32,System.Int32,System.Drawing.Point)">
            <summary>
            Checks if the specified point is over an image (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>) .
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="pt">The point to be tested.</param>
            <returns>True if inside image; False otherwise.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridHeaderCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.WireGrid">
            <summary>
            Sets up mouse event hooks with the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.UnwireGrid">
            <summary>
            Resets up mouse event hooks with the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnHitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <summary>
            This method is called to determine whether the cell renderer wants to receive mouse events
            for the give cell at the given coordinates.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="controller">The current controller requested to handle this mouse event.</param>
            <returns>
            Non-zero hit context value if you request to handle the mouse event; zero if you vote
            not to handle the mouse event.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnMouseMove(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnMouseHover(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnMouseDown(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnMouseUp(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnMouseHoverLeave(System.Int32,System.Int32,System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.DrawMetroHeaderStyle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.ThemedHeaderDrawing.HeaderState)">
            <summary>
            Draws Metro header skins
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> object.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> object that represents the drawing area.</param>
            <param name="state">The current state of the header.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>Allows custom formatting of a cell by changing its style object.</summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnDrawDisplayText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            This method is called from <see cref="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/> to draw the face text of the header cell after
            its background has been drawn.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="textRectangle">Specifies the text rectangle. It is the cell rectangle without buttons, borders, or text margins.</param>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <param name="style">A reference to the style object of the cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer.OnOutlineCurrentCell(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridImageUtil">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageUtil.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageUtil.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageUtil.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean,System.Windows.Forms.ImageList,System.Int32)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridImageSizeMode">
            <summary>
            Specifies the scaling of images in a cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridImageSizeMode.Normal">
            <summary>
            Don't scale.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridImageSizeMode.CenterImage">
            <summary>
            Center in cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridImageSizeMode.AutoSize">
            <summary>
            Make same size as cell but keep height / width ratio proportionally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridImageSizeMode.StretchImage">
            <summary>
            Make same size as cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridImageCellModel">
            <summary>
            Implements the data / model part for an image cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridImageCellRenderer">
            <summary>
            Implements the renderer part of an image cell.
            </summary>
            <remarks>
            <para/>
            There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridImageCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridImageCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel">
            <summary>
            Implements the data / model part for an original text box entry cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel">
            <summary>
            Implements the data / model part for a text box cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <override/>
            <summary>
            Return formatted text for the specified value.
            GridStyleInfo.CultureInfo is used for conversion to string.
            </summary>
            <param name="style">Cell style information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>Formatted text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the cell model.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the cell model.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="grid">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer">
            <summary>
            Implements the renderer part of a text box cell.
            </summary>
            <remarks>
            Use "OriginalTextBox" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> of a cells <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell.
            <para/>
            The "OriginalTextBox" cell type supports password entry and upper/lower case data entry. See the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PasswordChar"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CharacterCasing"/> properties
            of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            <para/>
            <para/>
            The following table lists some characteristics about the OriginalTextBox cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>OriginalTextBox</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:System.Windows.Forms.TextBox"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>Both</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImage"/> (<see cref="T:System.Drawing.Image"/>)</term>
                    <description>Gets / sets the image that the cells display as background. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageMode"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode"/>)</term>
                    <description>Indicates how the background image is displayed. (Default: GridBackgroundImageMode)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>OriginalTextBox (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CharacterCasing"/> (<see cref="T:System.Windows.Forms.CharacterCasing"/>)</term>
                    <description>Specifies if cell control modifies the case of characters as they are typed when the cell's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> is "OriginalTextBox". (Default: CharacterCasing.Normal)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if text can float into the boundaries of a neighboring cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if this cell can be flooded by a previous cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for an individual cell when merging cells features have been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PasswordChar"/> (<see cref="T:System.Char"/>)</term>
                    <description>The character used to mask characters of a password in a password-entry cell. The cells <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> must be "OriginalTextBox". (Default: Blank)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Indicates whether an exception should be thrown in the <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> method if the formatted text can not be parsed and converted to the type specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell values that are being checked before any user changes are committed to the grid cell's style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the text box should show a vertical scrollbar when text is being edited and does not fit in cell. WrapText must be initialized to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
            <example>
            The following code samples show how to apply PasswordChar and CharacterCasing
            <coderef file="d:\syncfusion\essential suite\Grid\Samples\CellTypes\PasswordCells\CS\MainForm.cs" name="Password Cells" lang="C#"><code lang="C#">
                        form.Text = "Password Cells";
            <para/>
                        gridControl1.BeginUpdate();
                        gridControl1.TableStyle.FloatCell = true;
                        gridControl1.FloatCellsMode = GridFloatCellsMode.OnDemandCalculation;
                        gridControl1.TableStyle.BackColor = Color.FromArgb(204, 212, 230);
                        gridControl1.TableStyle.CellType = "OriginalTextBox";
            <para/>
                        GridStyleInfo style;
            <para/>
                        for (int row = 2; row != 10; row++)
                        {
                            style = gridControl1[row, 2];
                            style.PasswordChar = '*';
                            style.Text = new string((char) (65 + row), row);
            <para/>
                            style = gridControl1[row, 3];
                            style.CharacterCasing = CharacterCasing.Lower;
                            style.Text = new string((char) (65 + row), row);
            <para/>
                            style = gridControl1[row, 4];
                            style.CharacterCasing = CharacterCasing.Upper;
                            style.Text = new string((char) (65 + row), row);
                        }
            <para/>
                        gridControl1.EndUpdate(true);</code></coderef>
            <coderef file="d:\syncfusion\essential suite\Grid\Samples\CellTypes\PasswordCells\VB\MainForm.vb" name="Password Cells" lang="VB"><code lang="VB">
                   form.Text = "Password Cells"
            <para/>
                   gridControl1.BeginUpdate()
                   gridControl1.TableStyle.FloatCell = True
                   gridControl1.FloatCellsMode = GridFloatCellsMode.OnDemandCalculation
                   gridControl1.TableStyle.BackColor = Color.FromArgb(204, 212, 230)
                   gridControl1.TableStyle.CellType = "OriginalTextBox"
            <para/>
                   Dim style As GridStyleInfo
            <para/>
                   Dim row As Integer
                   For row = 2 To 10
                       style = gridControl1(row, 2)
                       style.PasswordChar = "*"c
                       style.Text = New String(ChrW(65 + row), row)
            <para/>
                       style = gridControl1(row, 3)
                       style.CharacterCasing = CharacterCasing.Lower
                       style.Text = New String(ChrW(65 + row), row)
            <para/>
                       style = gridControl1(row, 4)
                       style.CharacterCasing = CharacterCasing.Upper
                       style.Text = New String(ChrW(65 + row), row)
                   Next row
            <para/>
                   gridControl1.EndUpdate(True)</code></coderef>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer">
            <summary>
            Implements the renderer part of a text box cell.
            </summary>
            <remarks>
            Use "text box" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> of a cells <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            <para/>
            The following table lists some characteristics about the text box cell type.
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>Text Box</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>Both</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImage"/> (<see cref="T:System.Drawing.Image"/>)</term>
                    <description>Gets / sets the image that the cell displays as background. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageMode"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode"/>)</term>
                    <description>Indicates how the background image is displayed. (Default: GridBackgroundImageMode)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>Text Box (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cells value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if text can float into the boundaries of a neighboring cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if this cell can be flooded by a previous cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description>Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting text from list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for an individual cell when merging cells feature has been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Indicates whether an exception should be thrown in the <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> method if the formatted text can not be parsed or converted to the type specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed or converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cell's style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text box should show a vertical scrollbar when text is being edited and does not fit in cell. WrapText must be initialized to true. (Default: false)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            <para/>
            <para/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.wantsAutoSize">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.limitTextLength">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.textBoxControl">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.inTextBoxChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.GetEditState">
            <override/>
            <summary>Returns the state information that lets you restore the current edit state.</summary>
            <returns>State information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.SetEditState(System.Object)">
            <override/>
            <summary>
            Restores previously retrieved editing state information from a GetEditState call.
            </summary>
            <param name="state">The cell-type specific object with the edit state information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridTextBoxCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.WireModel(Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.UnwireModel(Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.CreateTextBox">
            <summary>
            Creates the text box that is shown in-place in the cell when the
            user starts editing the cell.
            </summary>
            <returns>
            Returns the new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the <see cref="E:System.Windows.Forms.Control.TextChanged"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBox"/> is raised.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnSetControlText(System.String)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.ControlLostFocus(System.Object,System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.ControlGotFocus(System.Object,System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxLostFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event of the text box and raise a
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlLostFocus"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxGotFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event of the text box and raises a
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlGotFocus"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <summary>
            Called from Initialize after currentRowIndex, inInitialize are set and PerformLayout finished.
            </summary>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.ModelUpdateActiveText">
            <summary>
            Calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.SetActiveText(System.Int32,System.Int32,System.String)"/> on the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.NotifyCurrentCellChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.SetModelActiveText(System.String)">
            <summary>
            Calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.SetActiveText(System.Int32,System.Int32,System.String)"/> and ensures that <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ActiveTextChanged"/>
            event is ignored for the current renderer. Only other renderers in other grid views will handle the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ActiveTextChanged"/> event.
            </summary>
            <param name="value">The text to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.GetSelectedText(System.String@)">
            <override/>
            <summary>
            Gets the selected text in the current cell.
            </summary>
            <param name="strResult">A string with the selected text.</param>
            <returns>True if the operation is successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.ReplaceSel(System.String)">
            <override/>
            <summary>Replaces the selected text in the current cell.</summary>
            <param name="replacement">String to replace the current selected text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnHasFocusControlChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.SetTextBoxText(System.String,System.Boolean)">
            <summary>
            Sets the TextBox.Text of the text box and optionally validates the string with a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ValidateString(System.String)"/> call.
            </summary>
            <param name="s">The text to be displayed.</param>
            <param name="validate">Indicates if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ValidateString(System.String)"/> should be called.</param>
            <returns>True if text was valid and could be copied to the text box.</returns>
            <remarks>
            The method will also raises a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging"/> event if the text
            was not modified.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.SetSelectedText(System.String,System.Boolean)">
            <summary>
            Sets the TextBox.SelectedText of the text box and optionally validates the string with a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ValidateString(System.String)"/> call.
            </summary>
            <param name="text">The text that should replace the current selected text in the text box.</param>
            <param name="validate">Indicates if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ValidateString(System.String)"/> should be called.</param>
            <returns>True if text was valid and could be copied to the text box.</returns>
            <remarks>
            The method raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanged"/> event after the text
            was modified.
            <para/>
            Note: This is a low-level method. The method does not raise <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging"/> and also does not
            check if the current cell is already in editing mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.CanCopy">
            <override/>
            <summary>
            Determines whether current cell can be copied to clipboard.
            </summary>
            <returns>returs True.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.Copy">
            <override/>
            <summary>Called when user initiates a clipboard copy and works with a single cell only.</summary>
            <returns>True if the operation is successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.Paste">
            <override/>
            <summary>Called when user initiates a clipboard paste and works only with a single cell.</summary>
            <returns>True if the operation is successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.CanPaste">
            <override/>
            <summary>Determines whether the current cell can be pasted from clipboard.</summary>
            <returns>True if it is allowed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.CanCut">
            <override/>
            <summary>Determines whether the current cell can be cut to clipboard.</summary>
            <returns>True if this operation is allowed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.Cut">
            <override/>
            <summary>Called when user initiates a clipboard cut and works with a single cell only.</summary>
            <returns>True if the operation is successful.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.WantsAutoSize">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.LimitTextLength">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxControl">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.InTextBoxChanged">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBox">
            <summary>
            Gets the text box that is shown in-place in the cell when the
            user starts editing the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.IgnoreTextBoxChanged">
            <summary>
            Gets or sets a value indicating whether TextBoxChanged events should be ignored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.ForceControlValueInNotifyCurrentCellChanged">
            <summary>
            Gets or sets a value indicating whether a call to SetControlValue should be
            made when <see cref="M:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.NotifyCurrentCellChanged"/> is called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.InNotifyCurrentCellChangedException">
            <summary>
            Gets a value indicating whether InNotifyCurrentCellChangedException. Internal only.
            </summary>
            <value>
            <c>true</c> if [in notify current cell changed exception]; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.InSetTextBoxTextCore">
            <summary>
            Gets a value indicating whether InSetTextBoxTextCore. Internal only.
            </summary>
            <value>
            <c>true</c> if [in set text box text core]; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxTextCore">
            <summary>
            Gets or sets the TextBoxTextCore. Internal only.
            </summary>
            <value>The text box text core.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxText">
            <summary>
            Gets or sets the current text in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBox"/>.
            </summary>
            <remarks>
            When you change this text, the setter of this property will ensure
            the cell is not Read-only, raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging"/>
            change the text and after successful change, raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanged"/>
            event and force a refresh of the cell.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.DisableTextBox">
            <summary>
            Gets or sets a value indicating whether the text box should be hidden. This is useful for derived
            cell renderers that want to be able to switch between a edit-mode and
            static mode, e.g. a drop-down list does not need to have text input
            capabilities.
            </summary>
            <remarks>
            When disabled, you can still call <see cref="P:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer.TextBoxText"/>
            to change the text for the active cell. In this case TextBoxText
            will save the text in a member variable and simply draw the text
            by itself.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridOriginalTextBoxCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer.CreateTextBox">
            <summary>
            Creates the text box that is shown in-place in the cell when the
            user starts editing the cell.
            </summary>
            <returns>
            Returns the new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/>.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer.ControlText">
            <override/>
            <summary>
            Gets or sets the active text that is displyed for the current cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel">
            <summary>
            Implements the data / model part of a push button cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer">
            <summary>
            Implements the renderer part of a push button cell.
            </summary>
            <remarks>
            The push button cell is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is true.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            <para/>
            The following table lists some characteristics about the PushButton cell type.
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>PushButton</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Cell Button</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/></description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Click Only</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>PushButton. (Default: TextBox)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the button can be clicked with the mouse. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> how to disable activating the cell as current cell. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets or sets the text that is shown in the button. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the button will be drawn grayed out. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description>The PushButton usually fills the whole cell area. Therefore the background is only visible if you programmatically force the button to be smaller. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set.  (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: true)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.pushButton" -->
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridPushButtonCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase,Syncfusion.Windows.Forms.Grid.GridCellButton)">
            <summary>
            Initializes a new GridPushButtonCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <param name="button">The button to be drawn in the cell.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.OnOutlineCurrentCell(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.OnQueryShowButtons(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether the cell buttons shall be drawn for the specific row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>
            returns boolean value to indicate the cell buttons shall be drawn for the specific row and column index. Returns true.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.OnButtonClicked(System.Int32,System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer.OnPushButtonClick(System.Int32,System.Int32)">
            <summary>
            Raises <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/> event when the user presses the PushButton.
            </summary>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo">
            <summary>
            Saves Hit-Test information for cell renderers and cell button elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.Clone">
            <summary>
            Performs a copy and returns the new object.
            </summary>
            <returns>A copy of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.ToString">
            <override/>
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.Point">
            <summary>
            Gets or sets the mouse coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.ColIndex">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.CellRenderer">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.CellBounds">
            <summary>
            Gets or sets the cell boundaries.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.CellButtonElement">
            <summary>
            Gets or sets the affected <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.CellButtonBounds">
            <summary>
            Gets or sets the boundaries of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo.CellButtonIndex">
            <summary>
            Gets or sets the index of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> objects in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> view.
            </summary>
            <remarks>
            On the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>, you access the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CellRenderers"/> property.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> uses standard <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Add(System.String,Syncfusion.Windows.Forms.Grid.GridCellRendererBase)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Remove(System.String)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
            <example>
            TODO: Show how to look up cell types.
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSubComponent">
            <summary>
            A base class for objects that are associated with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSubComponent.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridSubComponent"/> and associates it with a grid.
            </summary>
            <param name="grid">The grid control this object is associated with.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSubComponent.Grid">
            <summary>
            Gets the grid control this object is associated with.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> and 
            associates it with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.GetEnumerator">
            <summary>
              <para>Returns an enumerator that can iterate through the cell grid dictionary.</para>
            </summary>
            <returns>
              <para>An <see cref="T:System.Collections.IEnumerator"/> that can iterate through the string dictionary.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Remove(System.String)">
            <summary>
              <para>Removes the entry with the specified key from the cell grid dictionary.</para>
            </summary>
            <param name="key">The key of the entry to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridCellRendererBase[],System.Int32)">
            <summary>
              <para>Copies the cell grid dictionary values to a one-dimensional <see cref="T:System.Array"/> instance at the
            specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</param>
            <param name="index">The index in the array where copying begins.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.ContainsValue(Syncfusion.Windows.Forms.Grid.GridCellRendererBase)">
            <summary>
              <para>Determines if the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> contains a specific value.</para>
            </summary>
            <param name="cellRenderer">The value to locate in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</param>
            <returns>
              <para>
                <see langword="true"/> if the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> contains an element with the specified value;
            otherwise, <see langword="false"/>. </para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.ContainsKey(System.String)">
            <summary>
              <para>Determines if the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> contains a specific key.</para>
            </summary>
            <param name="key">The key to locate in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</param>
            <returns>
              <para>
                <see langword="true"/> if the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> contains an entry with the specified key;
            otherwise, <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Clear">
            <summary>
              <para>Removes all entries from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Add(System.String,Syncfusion.Windows.Forms.Grid.GridCellRendererBase)">
            <summary>
              <para>Adds cell grid with the specified key into the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</para>
            </summary>
            <param name="key">The key of the entry to add.</param>
            <param name="grid">The cell grid of the entry to add.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Values">
            <summary>
              <para>Gets a collection of values in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.SyncRoot">
            <summary>
              <para>Gets an object that can be used to synchronize access to
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Keys">
            <summary>
              <para>Gets a collection of keys in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Item(System.String)">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> for the given key.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.IsSynchronized">
            <summary>
            <para>Gets a value indicating whether access to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/> is synchronized (thread-safe).</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection.Count">
            <summary>
              <para>Gets the number of key-and-value pairs in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererCollection"/>.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridOleDragDropEventsTarget">
            <summary>
            Defines an interface for an object that handles Ole Drag Drop events raised by <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridOleDragDropEventsTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs when a drag-and-drop operation is completed and before <see cref="E:System.Windows.Forms.Control.DragDrop"/> event is raised.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.DragEventArgs"/> containing data related to this event</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridOleDragDropEventsTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs when an object is dragged into the control's bounds and before <see cref="E:System.Windows.Forms.Control.DragEnter"/> event is raised.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.DragEventArgs"/> containing data related to this event</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridOleDragDropEventsTarget.OnDragLeave(System.EventArgs)">
            <summary>
            Occurs when an object is dragged out of the control's bounds and before <see cref="E:System.Windows.Forms.Control.DragLeave"/> event is raised.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.DragEventArgs"/> containing data related to this event</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridOleDragDropEventsTarget.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs when an object is dragged over the control's bounds and before <see cref="E:System.Windows.Forms.Control.DragOver"/> event is raised.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.DragEventArgs"/> containing data related to this event</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget">
            <summary>
            Defines an interface for an object that handles events raised by <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellButtonClicked(Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellCancelMode(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCancelMode"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCancelMode"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellCursor(Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnQueryScrollCellInView(Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellDoubleClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellDrawn(Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDrawn"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDrawn"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellHitTest(Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellMouseDown(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseDown"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseDown"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellMouseHover(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHover"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHover"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellMouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellMouseHoverLeave(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellMouseMove(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseMove"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseMove"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCellMouseUp(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseUp"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseUp"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCheckBoxClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellAcceptedChanges(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellActivated(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellActivateFailed(Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellActivating(Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellChanging(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellCloseDropDown(Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellCloseDropDown"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellCloseDropDown"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellConfirmChangesFailed(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellConfirmChangesFailed"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellConfirmChangesFailed"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellControlDoubleClick(System.Windows.Forms.ControlEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlDoubleClick"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlDoubleClick"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellControlGotFocus(System.Windows.Forms.ControlEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlGotFocus"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlGotFocus"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellControlKeyMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlKeyMessage"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlKeyMessage"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellControlLostFocus(System.Windows.Forms.ControlEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlLostFocus"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlLostFocus"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellDeactivated(Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellDeactivateFailed(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivateFailed"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivateFailed"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellDeactivating(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellDeleting(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeleting"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeleting"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellEditingComplete(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellEditingComplete"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellEditingComplete"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellInitializeControlText(Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellErrorMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellErrorMessage"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellErrorMessage"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellKeyDown(System.Windows.Forms.KeyEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyDown"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyDown"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyPress"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyPress"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellKeyUp(System.Windows.Forms.KeyEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyUp"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyUp"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellMoved(Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellMoveFailed(Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellMoving(Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellRejectedChanges(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellShowedDropDown(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowedDropDown"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowedDropDown"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellShowingDropDown(Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowingDropDown"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowingDropDown"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellStartEditing(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellStartEditing"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellStartEditing"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellValidated(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidated"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidated"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellValidateString(Syncfusion.Windows.Forms.Grid.GridCurrentCellValidateStringEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnCurrentCellValidating(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnPushButtonClick(Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDrawCell(Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCell"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCell"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDrawCellDisplayText(Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellDisplayText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellDisplayText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDrawCellButton(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButton"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButton"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDrawCellButtonBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButtonBackground"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButtonBackground"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDrawCellFrameAppearance(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellFrameAppearance"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellFrameAppearance"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDrawCurrentCellBorder(Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCurrentCellBorder"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCurrentCellBorder"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnQueryNextCurrentCellPosition(Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnMoveCurrentCellDirection(Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MoveCurrentCellDirection"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MoveCurrentCellDirection"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnResizingColumns(Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnResizingRows(Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnWrapCellNextControlInForm(Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.WrapCellNextControlInForm"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.WrapCellNextControlInForm"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnHScrollPixelPosChanged(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnHScrollPixelPosChanging(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnLeftColChanged(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnLeftColChanging(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnMouseActivating(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MouseActivating"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MouseActivating"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnQueryCanOleDragRange(Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnScrollInfoChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollInfoChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollInfoChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnSelectionDragged(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnSelectionDragging(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnSelectionFrameChanged(Syncfusion.Drawing.GraphicsEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnSelectionFrameChanging(Syncfusion.Drawing.GraphicsEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnTopRowChanged(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnTopRowChanging(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnVScrollPixelPosChanged(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnVScrollPixelPosChanging(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnDeactivated(System.EventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDeactivated(System.EventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnEnter(System.EventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnEnter(System.EventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnLayout(System.Windows.Forms.LayoutEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnEnter(System.EventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnScrollControlMouseDown(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnScrollControlMouseDown(Syncfusion.Windows.Forms.CancelMouseEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnScrollTipFeedback(Syncfusion.Windows.Forms.ScrollTipFeedbackEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnScrollTipFeedback(Syncfusion.Windows.Forms.ScrollTipFeedbackEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnSizeChanged(System.EventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSizeChanged(System.EventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnSplitterPaneClosing(System.EventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSplitterPaneClosing(System.EventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnValidating(System.ComponentModel.CancelEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnVisibleChanged(System.EventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnVisibleChanged(System.EventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnWindowScrolled(Syncfusion.Windows.Forms.ScrollWindowEventArgs)">
            <summary>Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnWindowScrolled(Syncfusion.Windows.Forms.ScrollWindowEventArgs)"/> is called on <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnSupportsTransparentBackColorChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SupportsTransparentBackColorChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SupportsTransparentBackColorChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnPrintingModeChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingModeChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingModeChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnModelChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnGridControlMouseDown(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseDown"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseDown"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnGridControlMouseMove(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseMove"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseMove"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnGridControlMouseUp(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseUp"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseUp"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnGridValidating(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnGridValidating(System.ComponentModel.CancelEventArgs)"/>
            <summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnGridValidating(System.ComponentModel.CancelEventArgs)"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnGridBoundsChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBoundsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBoundsChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget.OnThemeChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemeChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemeChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> class for information.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridControlBase">
            <summary>
            Implements a grid control that displays a grid model.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> implements a view on a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. Several views can be opened for the same model. Changes
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> are reflected immediately among all views.<para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> provides storage for all data and settings associated with the grid. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            implements user interaction and display of the data.<para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> is a user control that is derived from <see cref="T:Syncfusion.Windows.Forms.ScrollControl"/>. It lets the user scrolls through grid data
            with mouse or keyboard. The grid displays a large number of cells where each cell can have its own unique formatting and cell type.<para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> also offers a wide range of events that let you customize the default behavior of the grid at run-time.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridModelSource">
            <summary>
            Provides functionality to an object to return a list that can <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridModelSource.Model">
            <summary>
            Gets a reference to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridWindowlessSite">
            <summary>
            Provides support for hosting a windowless grid control. Such windowless controls
            are used inside GridGroupingControl for nested tables.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridWindowlessSite.GetWindow">
            <summary>
            Returns the actual parent that has a window handle.
            </summary>
            <returns>A parent control with window handle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridWindowlessSite.GetVisibleBounds">
            <summary>
            Returns the visible bounds of the parent control.
            </summary>
            <returns>A rectangle with coordinates of the parent control.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridWindowlessObject">
            <summary>
            Adds support for using the grid control as a windowless control. Such windowless controls
            are used inside GridGroupingControl for nested tables. A windowless control
            has no window handle. It only forwards paint and other window operations
            to the parent control. The parent control will forward mouse and keyboard messages
            to the windowless control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridWindowlessObject.IsWindowless">
            <summary>
            Gets or sets a value indicating whether the control is used in windowless mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridWindowlessObject.ParentSite">
            <summary>
            Gets or sets the parent control that implements IGridWindowlessSite.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnQueryCreateCellTextBox(Syncfusion.Windows.Forms.Grid.GridQueryCreateCellTextBoxEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCreateCellTextBox"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCreateCellTextBoxEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IsRightToLeft">
            <summary>
            Checks for this.RightToLeft == RightToLeft.Yes;
            </summary>
            <returns>True if text is drawn from right to left.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnFillRectangleHook(Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs)">
            <summary>
            Raises the  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.FillRectangleHook"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCurrentHScrollPixelDelta">
            <summary>
            The current difference between the left column's pixel offset and the current scroll position.
            </summary>
            <returns>Difference between left column's pixel offset and current scroll position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCurrentHScrollPixelPos">
            <summary>
            The current scroll position for pixel scrolling
            </summary>
            <returns>Current scroll position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetCurrentHScrollPixelPos(System.Int32)">
            <summary>
            Sets the current scroll position for pixel scrolling and scrolls the grid
            </summary>
            <param name="pixelPos">The new horizontal pixel scroll position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetHScrollPixelMinimum">
            <summary>
            The left most scroll position for pixel scrolling.
            </summary>
            <returns>Left most scroll position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ColIndexToHScrollPixelPos(System.Int32)">
            <summary>
            Gets the scroll position for pixel scrolling for a column.
            </summary>
            <param name="colIndex">Column index.</param>
            <returns>Horizontal scroll position in pixel.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnHScrollPixelPosChanged(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanged"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnVScrollPixelPosChanged(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanged"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnVScrollPixelPosChanging(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanging"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnHScrollPixelPosChanging(Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanging"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetHScrollPixelWidth">
            <summary>
            Gets the total width of the grid for pixel scrolling.
            </summary>
            <returns>Total grid width.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosToColIndex(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the column and the pixel delta to the scroll position of the column for a specified scroll position.
            </summary>
            <param name="pixelPos">Scroll position.</param>
            <param name="colIndex">Column index.</param>
            <param name="pixelDelta">Pixel delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelScrollInView(System.Drawing.Rectangle)">
            <summary>
            Scrolls the left and / or right bounds of the rectangle into view.
            </summary>
            <param name="r">Bounded rectangle.</param>
            <returns>True if scrolling is successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetVScrollPixel(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCurrentVScrollPixelDelta">
            <summary>
            Gets the current offset in pixel for the top most row.
            </summary>
            <returns>The number of pixels the top most row is above the view area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCurrentVScrollPixelPos">
            <summary>
            Gets the current absolute vertical pixel position of the top most row.
            </summary>
            <returns>The vertical pixel scroll position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetCurrentVScrollPixelPos(System.Int32)">
            <summary>
            Sets the current absolute vertical pixel scroll position without
            raising events and without updating the display.
            </summary>
            <param name="pixelPos">The new vertical pixel scroll position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetCurrentHScrollPixelPos(System.Int32)">
            <summary>
            Sets the current absolute horizontal pixel position without
            raising events and without updating the display.
            </summary>
            <param name="pixelPos">The new horizontal pixel scroll position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetCurrentVScrollPixelPos(System.Int32)">
            <summary>
            Sets the current absolute vertical pixel scroll position
            raising events and scrolling the display.
            </summary>
            <param name="pixelPos">The new vertical pixel scroll position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetVScrollPixelMinimum">
            <summary>
            Gets the smallest value possible for vertical pixel scroll position (will be assigned to VScrollBar.Minimum).
            </summary>
            <returns>The smallest value possible for vertical pixel scroll position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RowIndexToVScrollPixelPos(System.Int32)">
            <summary>
            Returns the absolute vertical pixel scroll position for a specific row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The  absolute vertical pixel scroll position of the row.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetVScrollPixelHeight">
            <summary>
            Gets the total height of all rows in the grid.
            </summary>
            <returns>The total height of all rows in the grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosToRowIndex(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Determines the row index that is located at a specified vertical pixel scroll position.
            </summary>
            <param name="pixelPos">The absolute vertical pixel scroll position.</param>
            <param name="rowIndex">Returns the resulting rowIndex.</param>
            <param name="pixelDelta">Returns the number of pixels the top most row is avove the view area for the pixelPos scroll position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelScrollInView(System.Drawing.Rectangle)">
            <summary>
            Scrolls the specified rectangle into view.
            </summary>
            <param name="r">The coordinates to be scrolled into view. The rectangle coordinates are client coordinates of the window. The
            rectangle coordinates can be negative if the coordinates are above the current viewing area.</param>
            <returns>True if grid was scrolled; False if rectangle bounds were already inside visible area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this control is associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWindowStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>
            Lets you change <see cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)"/>.
            </summary>
            <param name="style">The window style.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ToString">
            <override/>
            <summary>Returns a string holding the current object details.</summary>
            <returns>String representation of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetBackgroundColor">
            <summary>
            Returns the Background color to be drawn after the last cell (default is Model.Properties.BackgroundColor)
            </summary>
            <returns>A Background Color</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetGridVisualStyles">
            <summary>
            Returns the VisualStyles (Model.Options.GridVisualStyles)
            </summary>
            <returns>Returns GridVisualStyles</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetGridVisualStylesDrawing">
            <summary>
            Returns the IVisualStyleDrawing (Model.Options.GridVisualStylesDrawing)
            </summary>
            <returns>IVisualStyleDrawing object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetBackColor(System.Drawing.Color)">
            <summary>
            Gets a back color, replaces SystemColors.Window with the <see cref="P:System.Windows.Forms.Control.BackColor"/> of this control.
            </summary>
            <param name="c">The original color.</param>
            <returns>The resulting color.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetInterior(Syncfusion.Drawing.BrushInfo)">
            <summary>
            Gets a <see cref="T:Syncfusion.Drawing.BrushInfo"/>, replaces SystemColors.Window with the <see cref="P:System.Windows.Forms.Control.BackColor"/> of this control.
            </summary>
            <param name="br">The original <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <returns>The resulting <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetForeColor(System.Drawing.Color)">
            <summary>
            Gets a forecolor, replaces SystemColors.WindowText with the <see cref="P:System.Windows.Forms.Control.ForeColor"/> of this control.
            </summary>
            <param name="c">The original color.</param>
            <returns>The resulting color.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnThemeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemeChanged"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>
            <para>The OnThemeChanged method also allows derived classes to handle the event
            without attaching a delegate. This is the preferred technique for
            handling the event in a derived class.</para>
            <para>Notes to Inheritors: When overriding OnThemeChanged in a derived
            class, be sure to call the base class's OnThemeChanged method so that
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnModelChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ResetGridBounds">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnGridBoundsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBoundsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InitPrintInfo">
            <summary>
            Method used internally by nested table control to copy LeftColIndex, TopRowIndex and Bounds
            to PrintInfo.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RestoreBoundsAfterPrint">
            <summary>
            Method used internally by nested table control to restore GridBounds after printing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnPrintingModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingModeChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldSerializeVScrollBehavior">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value to indicate Serialize VScroll Behavior</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldSerializeHScrollBehavior">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value to indicate Serialize HScroll Behavior.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSupportsTransparentBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SupportsTransparentBackColorChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ResetBackgroundImageID">
            <summary>
            Resets BackgroundImageID state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InitializeMouseControllers">
            <summary>
            Initializes all mouse controllers for this grid. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridControllerOptions"/> for
            default mouse controllers that you can enable and disable through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Options"/> property.
            </summary>
            <remarks>
            Controllers will be added and removed from <see cref="P:Syncfusion.Windows.Forms.ScrollControl.MouseControllerDispatcher"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ResetMouseControllers">
            <summary>
            Resets all mouse controllers and removes them from the <see cref="P:Syncfusion.Windows.Forms.ScrollControl.MouseControllerDispatcher"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InitializeDataObjectConsumerOptions">
            <summary>
            Initializes all data object consumers for this grid. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions"/> for
            default consumers that you can enable and disable through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptions"/> property
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Options"/> property.
            </summary>
            <remarks>
            Controllers will be registered with by <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InitLayout">
            <summary>
            Overriden. Calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Initialize"/> when the control is added to the parent forms
            <see cref="P:System.Windows.Forms.Control.Controls"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.WireModel">
            <summary>
            Sets up listeners for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> and initializes mouse controllers and data object consumers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.UnwireModel">
            <summary>
            Releases listeners for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnVisibleChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSplitterPaneClosing(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.CreateNewControl(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> and attaches it to the same <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="parent">A parent control. Can be a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <param name="row">The row in a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <param name="column">The column in a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <returns>A new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCreatedNewControl(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Int32,System.Int32)">
            <summary>
                This virtual method is called after <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.CreateNewControl(System.Windows.Forms.Control,System.Int32,System.Int32)"/> successfully created a new control
                and lets you initialize properties for the new control before it is displayed.
            </summary>
            <param name="grid">The new grid control.</param>
            <param name="row">The splitter row.</param>
            <param name="column">The splitter column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Initialize">
            <summary>
            Initializes the control after it has been added to the parent's <see cref="P:System.Windows.Forms.Control.Controls"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.CreateGridGraphics">
            <summary>
            Creates a <see cref="T:System.Drawing.Graphics"/> object for this control and raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event.
            The graphics object must be disposed after usage.
            </summary>
            <returns>A <see cref="T:System.Drawing.Graphics"/> object.</returns>
            <remarks>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollWindow(System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Scrolls the contents of the control.
            </summary>
            <param name="xAmount">Horizontal scroll offset in pixels..</param>
            <param name="yAmount">Vertical scroll offset in pixels.</param>
            <param name="rect">Scroll bounds.</param>
            <param name="clipRect">Clipping rectangle.</param>
            <param name="allowUpdate">If true, redraws the invalidated regions within its client area.</param>
            <returns>Resultant rectangle that was scrolled into view.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelRefreshRequest(System.Object,System.EventArgs)">
            <summary>
            Handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RefreshRequest"/> event from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> and
            redraws the current view.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelInvalidateRangeRequest(System.Object,Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs)">
            <summary>
            Handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRangeRequest"/> event from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> and
            invalidates the range of cells in the current view.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.MakeClientRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Converts the given range from absolute row and column indexes to client
            row and column indexes.
            </summary>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to be converted.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with client row and column indexes.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseSelectionDragging(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSelectionDragging(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseSelectionDragged(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSelectionDragged(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSelectionDragging(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSelectionDragged(Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseResizingColumns(Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnResizingColumns(Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseResizingRows(Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnResizingRows(Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnResizingColumns(Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnResizingRows(Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseQueryCanOleDragRange(Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnQueryCanOleDragRange(Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnQueryCanOleDragRange(Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDragLeave(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.NotifySelectionFrameChanging(System.Drawing.Graphics)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.NotifySelectionFrameChanged(System.Drawing.Graphics)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSelectionFrameChanging(Syncfusion.Drawing.GraphicsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Drawing.GraphicsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSelectionFrameChanged(Syncfusion.Drawing.GraphicsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Drawing.GraphicsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.UpdateScrollBars">
            <summary>
            Updates scrollbars with current scroll position and scroll range. Hides
            or enables scrollbars as specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollBehavior"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollBehavior"/>.
            </summary>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.UpdateScrollBars"/> might also scroll your grid if <see cref="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.AutoScroll"/>
            has been specified for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollBehavior"/>
            or <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollBehavior"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControlBase.m_bInvertRect">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnSizeChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControlBase.firstPaint">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaisePrepareViewStyleInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event which allows changing view-specific settings for
            the cells style object before the cell is displayed in the grid (except cell type and
            base style). These changes will not be cached and saved in the grid.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetViewStyleInfo(System.Int32,System.Int32)">
            <overload>
            Queries cell information that includes custom formatting based on
            the current view state. The custom formatting is determined by raising
             <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event.
            </overload>
            <summary>
            Queries cell information that includes custom formatting based on
            the current view state. The custom formatting is determined by raising
             the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControlBase.SupportsPrepareViewStyleInfo">
            <summary>
            By default, the grid will make a copy of any style object before painting and call the
            PrepareViewStyleInfo event. Changes made to the style object will then be discarded after
            the painting. Same with DrawCell and other events. Having a copy of the style allows you to change
            the style object just for drawing purposes. If you do not have any need for this and want to
            increase scrolling performance of the grid, try setting this property false. But be aware this is
            only experimental for now ...
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetPaintStyleInfo(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Just experimental, don't use this .... Optionally don't use GetViewStyleInfo if SupportsPrepareViewStyleInfo is not set.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the col.</param>
            <param name="forceQueryCellInfo">if set to <c>true</c> [force query cell info].</param>
            <returns>returns GridStyleInfo </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnEnsurePaintCodeJitted">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetViewStyleInfo(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Queries cell information that includes custom formatting based on
            the current view state. The custom formatting is determined by raising
             <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="forceQueryCellInfo">For the QueryCellInfo to be called and not cache style objects.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCell(Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCell"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellDisplayText(Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellDisplayText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/>.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseDrawCellDisplayText(Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellDisplayText(Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellFrameAppearance(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellFrameAppearance"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseDrawCellFrameAppearance(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellFrameAppearance(Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs)"/>.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellButton(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButton"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseDrawCellButton(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellButton(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellButtonBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButtonBackground"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseDrawCellButtonBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCellButtonBackground(Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs)"/>.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellDrawn(Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDrawn"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCurrentCellBorder(Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCurrentCellBorder"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseDrawCurrentCellBorder(Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCurrentCellBorder(Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs)"/>.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawSingleCell(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean,System.Boolean)">
            <summary>
            Call this method to draw a single cell to a graphics object at the specified rectangle. The method
            does not clip the output. <para/>
            Be aware that if
            pixel scrolling is enabled the caller needs to use clipping if this cell is at the top row or 
            left column and only partially visible.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="cellRectangle">Specifies the cell rectangle. Please note that rectItem only is the visible bounds of cell.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="forceDrawBackground">Forces the background should be drawn.</param>
            <param name="drawBorders">Specifies whether the borders should also be drawn or excluded.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            You should override <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawCell(Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs)"/> instead.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="rectItem">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawInvertCell(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Occurs when the grid drawing engine wants to invert a cell when it belongs
            to a selected range.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="rectItem">Specifies the cell rectangle. Please note that rectItem only is the visible bounds of cell.</param>
            <param name="inPaint">True if method was called from within <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)"/> for this control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IntDrawInvertCell(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawGrid(System.Drawing.Graphics)">
            <overload>
            Draws the grid to the specified <see cref="T:System.Drawing.Graphics"/> canvas and using the grid boundaries
            specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/>.
            </overload>
            <summary>
            Draws the grid to the specified <see cref="T:System.Drawing.Graphics"/> canvas and using the grid boundaries
            specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawGrid(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Draws the grid to the specified <see cref="T:System.Drawing.Graphics"/> canvas and using the grid boundaries
            specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="shouldClip">Specifies if clipping region should be saved and restored after the grid is drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the grid to the specified <see cref="T:System.Drawing.Graphics"/> canvas and using the grid boundaries
            specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="bounds">The target bounds (client coordinates of the control) where the grid should be drawn.</param>
            <param name="drawCurrentCell">Specifies whether the current cell should be drawn and outlined; if False current cell is drawn just
            like any other regular cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Draws the grid to the specified <see cref="T:System.Drawing.Graphics"/> canvas and specified boundaries.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="bounds">The target area the grid should be drawn to.</param>
            <param name="drawCurrentCell">Indicates if current cell shoud be outlined.</param>
            <param name="shouldClip">Specifies if clipping region should be saved and restored after the grid was drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawClippedGrid(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <overload>
            Draws the portion of the grid within the clipBounds to the specified <see cref="T:System.Drawing.Graphics"/> canvas.
            </overload>
            <summary>
            Draws the portion of the grid within the clipBounds to the specified <see cref="T:System.Drawing.Graphics"/> canvas. Clipping will 
            automatically occur when the grid was horizontally scrolled and the first column is only partially or when
            the grid was vertically scrolled and the first row is only partially visible.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="clipBounds">The target area the grid should be drawn to.</param>
            <remarks>
            Use this method if you want to increase performance when you have frequent Invalidate(Rectangle) and Update() calls.
            </remarks>
            <para/>
            <example>
            This sample below lets you draw changes cells directly to graphics context instead of using
            the conventional Invalidate / Update approach.
            <code lang="C#">
            bool drawDirectToDC = true;
            Graphics g = null;
            <para/>
            if (drawDirectToDC)
                g = m_syncGrid.CreateGridGraphics();
            <para/>
            // Clear our volatile cache
            m_syncGrid.ResetVolatileData();
            <para/>
            // Handle case when values is change for current cell.
            if (g1 == m_syncGrid.CurrentCell.RangeInfo)
            {
                m_syncGrid.CurrentCell.Model.ResetActiveText(row, col);
                continue;
            }
            <para/>
            // Draw direct to dc
            if (drawDirectToDC)
            {
                Rectangle bounds = m_syncGrid.RangeInfoToRectangle(g1);
                if (!bounds.IsEmpty)
                {
                // Instead of
                if (false)
                {
                        // Draw each cell individually to graphics context
            <para/>
                    GridStyleInfo style = this.m_syncGrid.Model[row, col];
                    GridCellRendererBase renderer = this.m_syncGrid.CellRenderers[style.CellType];
            <para/>
                    // Get client rectangle
                    bounds = style.CellModel.SubtractBorders(bounds, style, this.m_syncGrid.IsRightToLeft());
            <para/>
                    // Draw cell Background
                    Syncfusion.Drawing.BrushPaint.FillRectangle(g, bounds, style.Interior);
            <para/>
                    // Draw cell text
                    renderer.Draw(g, bounds, row, col, style);
                }
                else
                {
                    // DrawClippedGrid method lets you simply draw the cells at the specified bounds directly to the graphics context.
                    // less code than drawing each cell individually ....
            <para/>
                    m_syncGrid.DrawClippedGrid(g, bounds);
                }
            }
            else
            {
                // Use more conventional Invalidate / Update mechanism.
                    m_syncGrid.RefreshRange(GridRangeInfo.Cell(row, col);
            }
            <para/>
            if (g != null)
                g.Dispose();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawClippedGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the portion of the grid within the clipBounds to the specified <see cref="T:System.Drawing.Graphics"/> canvas.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="clipBounds">The target area the grid should be drawn to.</param>
            <param name="shouldClip">Whether or not the clipBounds is taken into account.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWindowlessBounds(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Switches the grid into a special mode in which you can call its <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawGrid(System.Drawing.Graphics)"/>
            method to draw its contents at a different screen location and with different size than
            the current visible grid. You must call <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ResetWindowlessBounds"/> to switch
            the grid back to normal operational mode.
            </summary>
            <param name="renderControl">The parent control with a window handle.</param>
            <param name="bounds">The new location and bounds of the grid.</param>
            <param name="drawCurrentCell">True if current cell should be outlined in a subsequent DrawGrid call;
            False if it should not be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ResetWindowlessBounds">
            <summary>
            Switches the grid back into a normal operation mode after a <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWindowlessBounds(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)"/> call.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawBorders(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Occurs when the grid drawing engine wants to draw borders for a covered cell.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rectItem">Specifies the cell rectangle.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InvertRect(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Inverts a given area on the specified <see cref="T:System.Drawing.Graphics"/> canvas.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="r">A <see cref="T:System.Drawing.Rectangle"/> to invert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OutlineCurrentCellHeader(System.Int32,System.Int32,System.Windows.Forms.ScrollBars)">
            <summary>
            Outlines the row and column header for the current cell.
            </summary>
            <param name="nEditRow">The row index of the current cell.</param>
            <param name="nEditCol">The column index of the current cell.</param>
            <param name="direction">The direction the current cell moved.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawClientRowCol(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Occurs when the grid drawing engine wants to draw the specified range of visible cells
            that need repainting.
            </summary>
            <param name="topRow">The top client row.</param>
            <param name="leftCol">The left client column.</param>
            <param name="bottomRow">The bottom client row.</param>
            <param name="rightCol">The right client column.</param>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rectClip">The client rectangle with the clipping bounds.</param>
            <remarks>
            The row and index positions are relative to the top and left column.
            <para/>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRow(System.Int32)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCol(System.Int32)"/> let you convert
            client row and column positions into absolute row and column indexes.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.UpdateScrollTips(System.Windows.Forms.ScrollEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnScrollTipFeedback(Syncfusion.Windows.Forms.ScrollTipFeedbackEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InitSplitterControl">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControlBase.m_bHitTestSelEdge">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldActivateCurrentCellInEnter">
            <summary>
            Shoulds the activate current cell in enter.
            </summary>
            <returns>returns boolean value to indicate Should ActivateCurrentCell InEnter</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IsVisibleCell(System.Int32,System.Int32)">
            <summary>
            Used internally.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the col.</param>
            <returns>
            <c>true</c> if [is visible cell] [the specified row index]; otherwise, <c>false</c>.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.FixCurrentCellGotFocus">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.FixCurrentCellGotFocus(System.Boolean)">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.FixCurrentCellLostFocus">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.FixDelayedCurrentCellActivate">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnControlGotFocus">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnControlLostFocus">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnEnter(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDeactivated(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldDeactivateCurrentCell">
            <summary>
            Shoulds the deactivate current cell.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldActivateCurrentCell">
            <summary>
            Shoulds the activate current cell.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryFocusInside">
            <override/>
            <summary>
            Indicates whether this control contains focus.
            </summary>
            <returns>True if it contains the focus.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnValidating(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnGridValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            This is called from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnValidating(System.ComponentModel.CancelEventArgs)"/> after the grid has checked that Validating events
            should be passed on and not ignored.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnWrapCellNextControlInForm(Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.WrapCellNextControlInForm"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseWrapCellNextControlInForm(Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnWrapCellNextControlInForm(Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetOtherSplitRowChildPane(System.Int32,System.Int32)">
            <summary>
            If the grid is used inside a dynamic splitter control, this method gives you
            access to the sibling grid control in another pane of the same splitter control.
            </summary>
            <param name="nSplitRow">The row of the current control in the splitter control.</param>
            <param name="nSplitCol">The column of the current control in the splitter control.</param>
            <returns>A reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> in the sibling pane.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetOtherSplitColumnChildPane(System.Int32,System.Int32)">
            <summary>
            If the grid is used inside a dynamic splitter control, this method gives you
            access to the sibling grid control in another pane of the same splitter control.
            </summary>
            <param name="nSplitRow">The row of the current control in the splitter control.</param>
            <param name="nSplitCol">The column of the current control in the splitter control.</param>
            <returns>A reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> in the sibling pane.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellDeleting">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellDeleting(System.ComponentModel.CancelEventArgs)"/>.
            </summary>
            <returns>True if the call is initiated.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellValidated">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellValidated(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellInitializeControlText(Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellInitializeControlText(Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>True if the method call is initiated.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellInitializeControlText(Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellErrorMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellErrorMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>True if the method call is initiated.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellErrorMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellErrorMessage"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellButtonClicked(System.Int32,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellButton)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellButtonClicked(Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs)"/>.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="index">The button index.</param>
            <param name="button">The button.</param>
            <returns>True if operation should continue; False if it should be canceled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellButtonClicked(Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowedDropDown(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowedDropDown"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellShowedDropDown(System.EventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowedDropDown(System.EventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellCloseDropDown(Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellCloseDropDown"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.PopupClosedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellCloseDropDown(Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellCloseDropDown(Syncfusion.Windows.Forms.PopupClosedEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowingDropDown(Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowingDropDown"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellShowingDropDown(Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowingDropDown(Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellControlKeyMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlKeyMessage"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCurrentCellControlKeyMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellControlKeyMessage(Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.NotifyCurrentCellControlPreProcessMessage(System.Windows.Forms.Message@)">
            <summary>
            Called from the PreProcessMessage method of the control associated with the current cell. Returns true
            if the message was handled and the control should not process the message any further.
            </summary>
            <param name="msg">The message.</param>
            <returns>True if the message was handled and should not be processed by the control.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.NotifyCurrentCellControlWndProc(System.Windows.Forms.Message@)">
            <summary>
            Called from the WndProc method of the control associated with the current cell. Returns true
            if the message was handled and the control should not process the message any further.
            </summary>
            <param name="msg">The message.</param>
            <returns>True if the message was handled and should not be processed by the control.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWmGetDlgCodeValue(System.Int32)">
            <summary>
            Enables support for MFC and ActiveX Containers and lets you specify the return value 
            when the grid or any of its child
            controls receive a WM_GETDLGCODE message. When using the grid in MFC
            applications or in an ActiveX host this value lets you change the
            default behavior of Tab and Arrows keys. In this scenarios it is recommended
            to set the value to be DLGC_WANTALLKEYS (= 4). Set this value to -1
            if the WM_GETDLGCODE message should not be handled. -1 is the default setting
            for this property.
            </summary>
            <param name="value">The specified return value when the grid receives a WM_GETDLGCODE message.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellHitTest(Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellHitTest(Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellHitTest(Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellCursor(Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellCursor(Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellCursor(Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellMouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseHoverEnter(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseHover(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHover"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellMouseHover(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseHover(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseHoverLeave(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellMouseHoverLeave(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseHoverLeave(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseDown(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellMouseDown(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseDown(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseMove(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellMouseMove(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseMove(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseUp(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellMouseUp(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellMouseUp(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellCancelMode(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCancelMode"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellCancelMode(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellCancelMode(Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnScrollInfoChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellMoving(Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellMoved(Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellMoveFailed(Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellActivating(Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnPushButtonClick(Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaisePushButtonClick(System.Int32,System.Int32)">
            <summary>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnPushButtonClick(Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <summary>
            Raises the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,System.Boolean)">
            <overload>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> event.
            </overload>
            <summary>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="mouseEventArgs">The MouseEventArgs for this event.</param>
            <param name="overImage">Indicates if the mouse was over an image (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>)
            in static cell when the mouse was released.</param>
            <returns>True if operation should continue with default behavior; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="mouseEventArgs">The MouseEventArgs for this event.</param>
            <returns>True if operation should continue with default behavior; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCheckBoxClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <summary>
            Raises the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCheckBoxClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCheckBoxClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="mouseEventArgs">The MouseEventArgs for this event.</param>
            <returns>True if operation should continue with default behavior; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellDoubleClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <summary>
            Raises the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,System.Boolean)">
            <overload>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellDoubleClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> event.
            </overload>
            <summary>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellDoubleClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="mouseEventArgs">The MouseEventArgs for this event.</param>
            <param name="overImage">Indicates if the mouse was over an image (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>)
            in a static cell when the mouse was released.</param>
            <returns>True if operation should continue with default behavior; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Triggers a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCellDoubleClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)"/> and
            thus raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> event.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="mouseEventArgs">The MouseEventArgs for this event.</param>
            <returns>True if operation should continue with default behavior; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellActivated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellActivateFailed(Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellDeleting(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeleting"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellStartEditing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellStartEditing"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            User pressed key down. (similar to Control.OnKeyDown)
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            User released key. (similar to Control.OnKeyUp)
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> with data of the keyboard event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            User pressed a key. (similar to Control.OnKeyPress)
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> with data of the keyboard event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellValidateString(Syncfusion.Windows.Forms.Grid.GridCurrentCellValidateStringEventArgs)">
            <summary>
            Called from OnValidate and checks whether the specified text is valid and raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString"/> event.
            </summary>
            <param name="e">The event data with text to be validated.</param>        ///
            <remarks>
             True if text if valid; False otherwise.
            This also works for limiting the keyboard input, e.g. only digits.
            Called after the user presses a key and before it is accepted.
            </remarks>
            <example>
            Don't allow "-" to be typed.
            <code lang="C#">
                    public override void OnCurrentCellValidateString(GridCurrentCellValidateStringEventArgs e)
                    {
                        TraceUtil.TraceCurrentMethodInfoIf(Switches.CellRenderer.TraceVerbose, e);
            <para/>
                        if (e.Text.IndexOf("-") != -1)
                            e.Cancel = true;
            <para/>
                        base.OnCurrentCellValidateString(e);
                    }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.NotifyCurrentCellChanged">
            <summary>
            This method is called from GridCellRendererBase.NotifyCurrentCellChanged. The
            default implementation of this virtual method raises the GridCurrentCell.CellChanged
            event indicating the contents of the current cell have been changed
            (e.g. in response to a TextBox.Changed event).
            </summary>
            <remarks>If you have implemented custom behavior which alters the content of the
            grid and current cell after a CurrentCellChanging event and you do not want a
            CurrentCellChanged event to be raised you can override this method and thereby
            avoid the event being raised.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellDeactivating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/> event.
            </summary>
            <param name="e">An <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellValidated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellAcceptedChanges(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellConfirmChangesFailed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellConfirmChangesFailed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellRejectedChanges(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellEditingComplete(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellEditingComplete"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellDeactivated(Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellDeactivateFailed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivateFailed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellControlDoubleClick(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlDoubleClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellControlGotFocus(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlGotFocus"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellControlLostFocus(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlLostFocus"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetNextCurrentCellPosition(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32@,System.Int32@)">
            <summary>
            Determines the next position for the current cell for a given direction. Normally, cells that are not
            marked as enabled with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> will be skipped but you can hook into this
            mechanism by implementing an event handler for <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/>.
            </summary>
            <param name="direction">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if an enabled cell was found; False otherwise.</returns>
            <remarks>
            This method will raise the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> event.
            In your event handler, you can call <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.QueryNextEnabledCell(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32@,System.Int32@)"/> from your QueryNextMoveCell
            event handler to find out about the next enabled cell and then decide on further criteria
            if the suggested cell is good.
            <para/>
            See the SampleGrid class in the gridpad sample for an example.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMoveCurrentCellDirection(Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs)">
            <summary>
            Raises the  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MoveCurrentCellDirection"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnQueryNextCurrentCellPosition(Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetCurrentCellObject(Syncfusion.Windows.Forms.Grid.GridCurrentCell)">
            <summary>
            Replaces the internal GridCurrentCell object. This method is used by GridGroupingControl's
            GridNestedTableControl where one grid control is shared among multiple nested tables and
            these tables need to maintain their own current cell state.
            </summary>
            <param name="c">The current cell object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IsShowCurrentRow(System.Int32)">
            <summary>
            Determines if the current cell is shown at the specified row. Cell renderers call this virtual function
            to determine if a cell button should be shown when <see cref="F:Syncfusion.Windows.Forms.Grid.GridShowButtons.ShowCurrentRow"/> is specified.
            </summary>
            <param name="rowIndex">The row index to be checked.</param>
            <returns>True if this row belongs the current row.</returns>
            <remarks>
            The GridDataBoundGrid overrides this method and checks whether the specified row
            belongs to the current record. This is not necessarily the same row since with a databound grid,
            a record can show values in several rows (Quicken-like display).
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ProcessDialogChar(System.Char)">
            <summary>
            Processes a dialog character.
            </summary>
            <param name="charCode">The character to process.</param>
            <returns>
            true if the character was processed by the control; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCurrentCell">
            <summary>
            Returns the GridCurrentCell object.
            </summary>
            <returns>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ProcessTabKeyMovingFocus(System.Boolean)">
            <summary>
            Override this method to customize the processing of a tab key to move control focus.
            </summary>
            <param name="forward">True if the next Control in the Tab Order is to get focus. 
            False if the previous Control should receive focus.</param>
            <returns>True if Tabkey has been handled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes the dialog key.
            </summary>
            <param name="key">The key code.</param>
            <returns>return boolean value</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values.</param>
            <returns>
            true if the specified key is a regular input key; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IsInputChar(System.Char)">
            <summary>
            Determines if a character is an input character that the control recognizes.
            </summary>
            <param name="charCode">The character to test.</param>
            <returns>
            true if the character should be sent directly to the control and not preprocessed; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            Processes a key message and generates the appropriate control events.
            </summary>
            <param name="m">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the window message to process.</param>
            <returns>
            true if the message was processed by the control; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldDeleteKeyClearCurrentCellContentsOnly">
            <summary>
            When the user presses Delete the current cell renderer checks this method
            whether it should handle the Delete key or if Delete key should get passed
            onto grid. Method returns true if CurrentCell Renderer should handle Delete key,
            optionally raising a CurrentCellDeleting event. It returns false if grid should
            handle the key, possibly raising a ClearingCells event
            </summary>
            <returns>True if CurrentCell Renderer should handle Delete key, optionally raising a CurrentCellDeleting event; false if grid should handle the key, possibly raising a ClearingCells event.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.PreProcessMessage(System.Windows.Forms.Message@)">
            <override/>
            <summary>
            Preprocesses keyboard or input messages within the message loop before they are dispatched.
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/> to process.</param>
            <returns>True if preprocessed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>
            Previews a keyboard message.
            </summary>
            <param name="m">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the window message to process.</param>
            <returns>
            true if the message was processed by the control; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>
            Processes a keyboard message.
            </summary>
            <param name="m">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the window message to process.</param>
            <returns>
            true if the message was processed by the control; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCellRenderer(System.Int32,System.Int32)">
            <summary>
            Gets the cell renderer at the specified row and column.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The cell renderer for that cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.BeginUpdate(Syncfusion.Windows.Forms.BeginUpdateOptions)">
            <overload>
            Suspends the painting of the control until the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.EndUpdate(System.Boolean)"/> method is called.
            </overload>
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.EndUpdate(System.Boolean)"/> method is called.
            </summary>
            <param name="options">Specifies the painting support during the BeginUpdate, EndUpdate batch.</param>
            <remarks>
            <para>When many paint are made to the appearance of a control, you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.</para>
            <para>
            Pass BeginUpdateOptions if you do not want to do a complete Refresh of the control and instead
            want to have certain regions of your control be invalidated or scroll the contents of control.</para>
            If you call BeginUpdate() and then later EndUpdate(), the control will know if a paint is pending and only
            refresh the control if a paint is pending. Either call to ShouldPrepareUpdate, Invalidate or a WM_PAINT message during
            the BeginUpdate EndUpdate block will signal the control that a paint is pending.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.ScrollControl.ShouldPrepareUpdate"/>
            <seealso cref="M:Syncfusion.Windows.Forms.ScrollControl.EndUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.BeginUpdateModel(Syncfusion.Windows.Forms.BeginUpdateOptions,System.Boolean)">
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.EndUpdate(System.Boolean)"/> method is called.
            </summary>
            <param name="options">Specifies the painting support during the BeginUpdate, EndUpdate batch.</param>
            <param name="fromModel">Specifies if this BeginUpdate call was triggered by a call to the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate"/>
            of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.EndUpdate(System.Boolean)">
            <overload>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </overload>
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
            <param name="update">True if pending paint operations should be executed immediately; False if they should be discarded.</param>
            <remarks>
            When many paint are made to the appearance of a control, you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.ScrollControl.BeginUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Update">
            <override/>
            <summary>
            Causes the control to redraw the invalidated regions within its client area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.EndUpdateModel(System.Boolean,System.Boolean)">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
            <param name="update">True if pending paint operations should be executed immediately; False if they should be discarded.</param>
            <param name="fromModel">Specified if this EndUpdate call was triggered by a call to the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/>
            of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IntUpdateSelectRange">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>
              <para>Raises the <see cref="E:System.Windows.Forms.Control.Invalidated"/> event.</para>
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.InvalidateEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControlBase.recalcScrollBars">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RectangleToRangeInfo(System.Drawing.Rectangle)">
            <overload>
            Calculates a range of cells that is displayed at the specified area.
            </overload>
            <summary>
            Calculates a range of cells that is displayed at the specified area.
            </summary>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> that specifies the area.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with cells that are displayed at the given area.
            If no cells are found, <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> is returned.</returns>
            <remarks>
            The <see cref="T:System.Drawing.Rectangle"/> is given in client coordinates.
            <para/>
            Points that fall below the last visible row or column will return the index of the last visible row or column.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RectangleToRangeInfo(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Calculates a range of cells that is displayed at the specified area.
            </summary>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> that specifies the area.</param>
            <param name="fixOutOfRange">Defines out of range behavior.
            <para/>
            </param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with cells that are displayed at the given area.
            If no cells are found, <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> is returned.</returns>
            <remarks>
            The <see cref="T:System.Drawing.Rectangle"/> is given in client coordinates.
            <para/>
            Points that fall below the last visible row or right of the last column will be adjusted as defined in the
            fixOutOfRange parameter.
            <list type="bullet">
            <item><term>Use -1 if <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> should be returned.</term></item>
            <item><term>Use 0 if the index of the last visible row or column should be used.</term></item>
            <item><term>Use 1 if the index of the last visible row or column should be used but 1 should be added.</term></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.PointToRangeInfo(System.Drawing.Point)">
            <overload>
            Calculates the cell that is displayed at a specific point.
            </overload>
            <summary>
            Calculates the cell that is displayed at a specific point.
            </summary>
            <param name="point">The <see cref="T:System.Drawing.Point"/> in client coordinates.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the cell that is displayed at the point.
            If no cell is found, <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> is returned.</returns>
            <remarks>
            The <see cref="T:System.Drawing.Point"/> is given in client coordinates.
            <para/>
            Points that fall below the last visible row or column will return the index of the last visible row or column.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.PointToRowCol(System.Drawing.Point,System.Int32@,System.Int32@)">
            <overload>
            Calculates the row and column index for a cell that is displayed at a specific point.
            </overload>
            <summary>
            Calculates the row and column index for a cell that is displayed at a specific point.
            </summary>
            <param name="point">The <see cref="T:System.Drawing.Point"/> in client coordinates.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if cell is found; False otherwise.</returns>
            <remarks>
            The <see cref="T:System.Drawing.Point"/> is given in client coordinates.
            <para/>
            Points that fall below the last visible row or column will return the index of the last visible row or column.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.PointToRowCol(System.Drawing.Point,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Calculates the row and column index for a cell that is displayed at a specific point.
            </summary>
            <param name="point">The <see cref="T:System.Drawing.Point"/> in client coordinates.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="fixOutOfRange">Defines out of range behavior.
            </param>
            <returns>True if cell is found; False otherwise.</returns>
            <remarks>
            The <see cref="T:System.Drawing.Point"/> is given in client coordinates.
            <para/>
            Points that below the last visible row or right of the last column will be adjusted as defined in the
            fixOutOfRange parameter.
            <list type="bullet">
            <item><term>Use -1 if <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> should be returned.</term></item>
            <item><term>Use 0 if the index of the last visible row or column should be used.</term></item>
            <item><term>Use 1 if the index of the last visible row or column should be used but 1 should be added.</term></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.PointToRangeInfo(System.Drawing.Point,System.Int32)">
            <summary>
            Calculates the cell that is displayed at a specific point.
            </summary>
            <param name="point">The <see cref="T:System.Drawing.Point"/> in client coordinates.</param>
            <param name="fixOutOfRange">Defines out of range behavior.
            </param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the cell that is displayed at the point.
            If no cell is found, <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> is returned.</returns>
            <remarks>
            The <see cref="T:System.Drawing.Point"/> is given in client coordinates.
            <para/>
            Points that fall below the last visible row or right of the last column will be adjusted as defined in the
            fixOutOfRange parameter.
            <list type="bullet">
            <item><term>Use -1 if <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> should be returned.</term></item>
            <item><term>Use 0 if the index of the last visible row or column should be used.</term></item>
            <item><term>Use 1 if the index of the last visible row or column should be used but 1 should be added.</term></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Calculates the display area for a given range of cells.
            </overload>
            <summary>
            Calculates the display area for a given range of cells.
            </summary>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the range of cells.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> that spans the range of visible cells. If no cells in the given range
            are visible, <see cref="F:System.Drawing.Rectangle.Empty"/> is returned.</returns>
            <remarks>
            If there are covered cells or floating cells, they will treated as regular cells. The range is not enlarged
            to fit these spanned cells.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeOptions)">
            <summary>
            Calculates the display area for a given range of cells.
            </summary>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the range of cells.</param>
            <param name="options">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeOptions"/> value specifies how to handle spanned cells and also
            how to handle ranges that are outside the current visible area.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> spans the range of visible cells. If no cells in the given range
            are visible, <see cref="F:System.Drawing.Rectangle.Empty"/> is returned.</returns>
            <remarks>
            If there are covered cells or floating cells, they will be treated as specified with the "options" parameter:
            <list type="table">
            <listheader><term>Items</term><description>Descriptions</description></listheader>
            <item><term>None </term><description>Use range as specified.</description></item>
            <item><term>MergeCoveredCells </term><description> Enlarge range with any covered cells that intersect with the original range.</description></item>
            <item><term>MergeFloatedCells </term><description>Enlarge range with any floating cells that intersect with the original range.</description></item>
            <item><term>MergeMergedCells </term><description>Enlarge range with any merged cells that intersect with the original range.</description></item>
            <item><term>MergeAllSpannedCells </term><description>Enlarge range with any merged cells (not implemented, reserved for future use) that intersect with the original range.</description></item>
            <item><term>CalculateNonClientArea </term><description> Included are outside of the current visible grid view. Otherwise <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> will ignore cells that are not visible.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetScrollOutOfViewCurrentCellState(Syncfusion.Windows.Forms.Grid.GridCellRendererBase@,System.Windows.Forms.Control@,System.Drawing.Rectangle@,System.Int32@,System.Int32@,Syncfusion.Windows.Forms.Grid.GridDirectionType)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnBeforePaint(System.EventArgs)">
            <summary>
            Called before the Paint method is painting the grid.
            </summary>
            <param name="e">Empty event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetRowHeight(System.Int32,System.Int32,System.Int32)">
            <overload>
            Sets the row height a range of rows.
            </overload>
            <summary>
            Sets the row height a range of rows.
            </summary>
            <param name="from">First row index in range.</param>
            <param name="last">Last row index in range.</param>
            <param name="value">The value to be applied.</param>
            <remarks>
            This method calls the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.SetRange(System.Int32,System.Int32,System.Int32)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetRowHeight(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Sets the row height a range of rows.
            </summary>
            <param name="from">First row index in range.</param>
            <param name="last">Last row index in range.</param>
            <param name="values">The values to be applied.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetRowHidden(System.Int32,System.Int32,System.Boolean)">
            <overload>
            Sets values indicating if rows should be hidden.
            </overload>
            <summary>
            Sets values indicating if rows should be hidden.
            </summary>
            <param name="from">First row index in range.</param>
            <param name="last">Last row index in range.</param>
            <param name="value">The value to be applied.</param>
            <remarks>
            This method calls the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.SetRange(System.Int32,System.Int32,System.Boolean)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetRowHidden(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Sets values indicating if rows should be hidden.
            </summary>
            <param name="from">First row index in range.</param>
            <param name="last">Last row index in range.</param>
            <param name="values">An array with values to be applied.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetColWidth(System.Int32,System.Int32,System.Int32)">
            <overload>
            Sets the column width for a range of columns.
            </overload>
            <summary>
            Sets the column width for a range of columns.
            </summary>
            <param name="from">First column index in range.</param>
            <param name="last">Last column index in range.</param>
            <param name="value">The value to be applied.</param>
            <remarks>
            This method calls the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.SetRange(System.Int32,System.Int32,System.Int32)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetColWidth(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Sets the column widths for a range of columns.
            </summary>
            <param name="from">First column index in range.</param>
            <param name="last">Last column index in range.</param>
            <param name="values">The values to be applied.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetColHidden(System.Int32,System.Int32,System.Boolean)">
            <overload>
            Sets values indicating if columns should be hidden.
            </overload>
            <summary>
            Sets values indicating if columns should be hidden.
            </summary>
            <param name="from">First column index in range.</param>
            <param name="last">Last column index in range.</param>
            <param name="value">The value to be applied.</param>
            <remarks>
            This method calls the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.SetRange(System.Int32,System.Int32,System.Boolean)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetColHidden(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Sets values indicating if columns should be hidden.
            </summary>
            <param name="from">First column index in range.</param>
            <param name="last">Last column index in range.</param>
            <param name="values">An array with values to be applied.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowRangeHeight(System.Int32,System.Int32)">
            <overload>
            Returns the total row height for a range of rows.
            </overload>
            <summary>
            Returns the total row height for a range of rows.
            </summary>
            <param name="rowIndex1">The first row.</param>
            <param name="rowIndex2">The last row.</param>
            <returns>The total row height in pixel.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowRangeHeight(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the total row height for a range of rows.
            </summary>
            <param name="fromRowIndex">The first row.</param>
            <param name="toRowIndex">The last row.</param>
            <param name="maxSize">Abort calculation if height is greater than this value.</param>
            <returns>The total row height in pixel.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)">
            <summary>
            Returns the row height at the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>
            or 0 if row is hidden.
            </summary>
            <param name="rowIndex">Row index.</param>
            <returns>Row height.</returns>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHidden(System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetMaximumPossibleTopRow(System.Drawing.Rectangle@)">
            <summary>
            Returns the smallest value to be used as TopRowIndex for which the last row of the grid is visible.
            </summary>
            <param name="rectMove">Returns the rectangle with scroll bounds for the grid.</param>
            <returns>The calculated row index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetMaximumPossibleLeftCol(System.Drawing.Rectangle@)">
            <summary>
            Returns the smallest value to be used as LeftColIndex for which the last column of the grid is visible.
            </summary>
            <param name="rectMove">Returns the rectangle with scroll bounds for the grid.</param>
            <returns>The calculated column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)">
            <summary>
            Returns the column widths at the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>
            or 0 if column is hidden.
            </summary>
            <param name="colIndex">Column index.</param>
            <returns>Column width.</returns>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColHidden(System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHidden(System.Int32)">
            <summary>
            Determines if a specified row is hidden in the current grid view.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>True if row should be hidden; False otherwise.</returns>
            <remarks>
            You can programmatically hide rows with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.<para/>
            Other criteria that will make a row be hidden in the current view are if this is the
            lower pane in a splitter view or if queried row is a column header row and
            the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProperties.ColHeaders"/> of <see cref="T:Syncfusion.Windows.Forms.Grid.GridProperties"/> object is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColHidden(System.Int32)">
            <summary>
            Determines if a specified column is hidden in the current grid view.
            </summary>
            <param name="colIndex">The column index.</param>
            <returns>True if column should be hidden; False otherwise.</returns>
            <remarks>
            You can programmatically hide columns with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.<para/>
            Other criteria that will make a column be hidden in the current view are if this is the
            right pane in a splitter view or if queried row is a row header column and
            the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProperties.RowHeaders"/> of <see cref="T:Syncfusion.Windows.Forms.Grid.GridProperties"/> object is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldDisplayHeaderCol">
            <summary>
            Checks if column header should be displayed (based on splitter pane row / column).
            </summary>
            <returns>True if the column header should be displayed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldDisplayHeaderRow">
            <summary>
            Checks if row header should be displayed (based on splitter pane row / column).
            </summary>
            <returns>True if the row header should be displayed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.EnableForwardCurrentCellControlKeyMessages(System.Boolean)">
            <summary>Used internally.</summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.UpdateWithCustomPaint(System.Drawing.Rectangle,System.Windows.Forms.PaintEventHandler)">
            <summary>
            Allows you to perform a quick Invalidate / Update pair on the grid without
            executing any of the grids default paint code. Instead you can provide your
            own routine to update invalidated areas in the grid.
            </summary>
            <param name="r">The Rectangle</param>
            <param name="customPaintDelegate">The customPaintDelegate</param>
            <example>The following example lets you draw a small portion of the grid
            bypassing the grids paint handler (and it trying to recalculating layout cells 
            and other precautions it takes when handling the Paint method).<para/>
            When compared to calling DrawClippedGrid this approach is a bit slower but it avoids flickering since it can 
            take advantage of the WinForms own double-buffering mechanism.<para/>
            In OnPaint the grid checks InUpdateWithCustomPaint and if it is true then the grids Paint method will only 
            call the delegate and immediately return.
            <code lang="C#">
            gridTableControl.UpdateWithCustomPaint(bounds, new PaintEventHandler(TableControl_CustomPaint));
            <para/>
            void TableControl_CustomPaint(object sender, PaintEventArgs e)
            {
                Rectangle clipBounds = Rectangle.Truncate(e.Graphics.ClipBounds);
                gridTableControl.DrawClippedGrid(e.Graphics, clipBounds, false);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.UpdateWithDrawClippedGrid(System.Drawing.Rectangle)">
            <summary>
            Allows you to perform a quick Invalidate / Update pair on the grid without
            executing any of the grids default paint code. Instead the grid will only
            call DrawClippedGrid from its Paint handler and immediately return. <para/>
            When compared to calling DrawClippedGrid using a cached graphics context 
            this method is a bit slower but it avoids flickering since it can 
            take advantage of the WinForms own double-buffering mechanism.
            </summary>
            <param name="clipBounds">Clipping rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseActivating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MouseActivating"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseMouseActivating">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseActivating(System.ComponentModel.CancelEventArgs)"/>.
            </summary>
            <returns>True if the method call is initiated.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetGridWindow">
            <summary>
            Returns the parent control with window handle and casts it to GridControlBase.
            </summary>
            <returns>The GridControlBase with a valid window handle.</returns>
            <remarks>
            When the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsWindowless"/> property is True, it will return the parent control; otherwise a reference to this object itself is returned.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow">
            <summary>
            Returns the parent control with window handle.
            </summary>
            <returns>The control with a valid window handle.</returns>
            <remarks>
            When the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsWindowless"/> property is True, it will return the parent control; otherwise a reference to this object itself is returned.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetVisibleBounds">
            <summary>
            Returns the intersection between this control's bounds and the bounds of a parent control with window handle.
            </summary>
            <returns>The rectangle for the visible area of this control.</returns>
            <remarks>
            When the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsWindowless"/> property is True, it will intersect the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> with the parent control's <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetVisibleBounds"/>;
            otherwise simply the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> are returned.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.FindParentForm">
            <summary>
            Retrieves the form that the control is on. Works also with windowless mode.
            </summary>
            <returns>The form that the control is on</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCreateControl">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GridRectangleToScreen(System.Drawing.Rectangle)">
            <summary>
            Converts a rectangle to screen coordinates.
            </summary>
            <param name="rect">The original rectangle in client coordinates.</param>
            <returns>The resulting rectangle in screen coordinates.</returns>
            <remarks>
            This method also supports <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWindowlessBounds(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)"/> mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GridRectangleToClient(System.Drawing.Rectangle)">
            <summary>
            Converts a rectangle to client coordinates.
            </summary>
            <param name="rect">The original rectangle in screen coordinates.</param>
            <returns>The resulting rectangle in client coordinates.</returns>
            <remarks>
            This method also supports <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWindowlessBounds(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)"/> mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GridPointToScreen(System.Drawing.Point)">
            <summary>
            Converts a point to screen coordinates.
            </summary>
            <param name="p">&gt;The original point in client coordinates.</param>
            <returns>The resulting point in screen coordinates.</returns>
            <remarks>
            This method also supports <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWindowlessBounds(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)"/> mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GridPointToClient(System.Drawing.Point)">
            <summary>
            Converts a point to client coordinates.
            </summary>
            <param name="p">&gt;The original point in screen coordinates.</param>
            <returns>The resulting point in client coordinates.</returns>
            <remarks>
            This method also supports <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetWindowlessBounds(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)"/> mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.PointToClient(System.Drawing.Point)">
            <summary>
            Returns the result of <see cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
            <param name="p">Screen point.</param>
            <returns>Location of specified screen point into its client co-ordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.PointToScreen(System.Drawing.Point)">
            <summary>
            Returns the result of <see cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
            <param name="p">Client point.</param>
            <returns>Point in screen co-ordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RectangleToClient(System.Drawing.Rectangle)">
            <summary>
            Returns the result of <see cref="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
            <param name="p">Rectangle to convert.</param>
            <returns>Rectangle in client co-ordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RectangleToScreen(System.Drawing.Rectangle)">
            <summary>
            Returns the result of <see cref="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
            /// <param name="p">Rectangle to convert.</param>
            <returns>Rectangle in screen co-ordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalGetFrozenRows">
            <summary>
            Returns the number of frozen rows.
            </summary>
            <returns>Number of frozen rows.</returns>
            <remarks>
            This is usually the same value as returned by <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/> object in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. <para/>
            When the grid is used as bottom pane in a splitter view, 0 is returned.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetFirstScrollableRow">
            <summary>
            Returns the first row that is visible after the frozen rows.
            </summary>
            <returns>First scrollable row index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetVisibleFrozenRows">
            <summary>
            Returns the actual number of visible frozen rows including the column header if visible. So,
            in case all rows are visible the value returned by this method will be Rows.FrozenCount + 1.
            </summary>
            <returns>Number of visible frozen rows.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalGetFrozenCols">
            <summary>
            Returns the number of frozen columns.
            </summary>
            <returns>Number of frozen columns.</returns>
            <remarks>
            This is usually the same value as returned by <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/> object in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. <para/>
            When the grid is used as right pane in a splitter view, 0 is returned.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetFirstScrollableCol">
            <summary>
            Returns the first column that is visible after the frozen columns.
            </summary>
            <returns>First scrollable column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetVisibleFrozenCols">
            <summary>
            Returns the actual number of visible frozen columns including the row header if visible. So,
            in case all columns are visible the value returned by this method will be Cols.FrozenCount + 1.
            </summary>
            <returns>Number of visible frozen columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalGetHeaderRows">
            <summary>
            Returns the number of header rows.
            </summary>
            <returns>Number of header rows.</returns>
            <remarks>
            This is usually the same value as returned by <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/> object in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalGetHeaderCols">
            <summary>
            Returns the number of header columns.
            </summary>
            <returns>Number of header columns.</returns>
            <remarks>
            This is usually the same value as returned by <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/> object in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalIsFrozenRow(System.Int32)">
            <summary>
            Determines if the specified row is a frozen row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>True if frozen; False if otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalIsFrozenCol(System.Int32)">
            <summary>
            Determines if the specified column is a frozen column.
            </summary>
            <param name="colIndex">The column index.</param>
            <returns>True if frozen; False if otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelFixedColChanged(System.Object,Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Occurs when the fixed column count in the model has changed and the view needs to be refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelFixedRowChanged(System.Object,Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Occurs when the fixed row count in the model has changed and the view needs to be refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelHeaderColChanged(System.Object,Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Occurs when the header column count in the model has changed and the view needs to be refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelHeaderRowChanged(System.Object,Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Occurs when the header row count in the model has changed and the view needs to be refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SuspendInvalidate">
            <summary>
            Prevents any subsequent calls to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate"/> to have any effect.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ResumeInvalidate">
            <summary>
            Resumes normal operation for <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate"/> calls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ShouldIgnoreInvalidate">
            <summary>
            Determines if calls to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate"/> should have any effect. If true
            any calls to Invalidate will immediately return.
            </summary>
            <returns>True if <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate"/> should not have any effect. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate">
            <overload>
            Call <see cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </overload>
            <summary>
            Call <see cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalInvalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidates the specified bounds and optionally hides the current cell renderer if it is visible inside the bounds.
            </summary>
            <param name="bounds">The area to invalidate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Call <see cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
            <param name="rc">The area to invalidate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Call <see cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
            <param name="rc">The area to invalidate.</param>
            <param name="invalidateChildren">Specified if child controls should also be invalidated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InvalidateDeactivatedCurrentCell(System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            This is called from <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> method of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/>
            after the current cell was deactivated. The default version of this methods checks Model.Options.RefreshCurrentCellBehavior
            and invalidates the grid area (either the whole row, the cell or nothing) as needed.
            </summary>
            <param name="rowIndex">The row index</param>
            <param name="colIndex">The column index</param>
            <param name="savedBounds">The current cell bounds before it was deactivated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InvalidateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Invalidates the region of the grid control specified with a range of cells and
            causes a paint message to be sent to the control.
            </overload>
            <summary>
            Invalidates the region of the grid control specified with a range of cells and
            causes a paint message to be sent to the control.
            </summary>
            <param name="range">The range that defines the region to be invalidated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InvalidateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeOptions)">
            <summary>
            Invalidates the region of the grid control specified with a range of cells and
            causes a paint message to be sent to the control.
            </summary>
            <param name="range">The range that defines the region to be invalidated.</param>
            <param name="options">Options that indicate if method should enlarge the affected range of cells to include covered and floating cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RefreshRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Invalidates the region of the grid control specified with a range of cells and
            immediately causes a paint message to be sent to the control before the function returns.
            </overload>
            <summary>
            Invalidates the region of the grid control specified with a range of cells and
            immediately causes a paint message to be sent to the control before the function returns.
            </summary>
            <param name="range">The range that defines the region to be invalidated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RefreshRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeOptions)">
            <summary>
            Invalidates the region of the grid control specified with a range of cells and
            immediately causes a paint message to be sent to the control before the function returns.
            </summary>
            <param name="range">The range that defines the region to be invalidated.</param>
            <param name="options">Options that indicate if method should enlarge the affected range of cells to include covered and floating cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RefreshRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Invalidates the region of the grid control specified with a range of cells and
            immediately causes a paint message to be sent to the control before the function returns.
            </summary>
            <param name="range">The range that defines the region to be invalidated.</param>
            <param name="forceRefreshCurrentCell">When a current cell is active and within the given
            range of cells, this option specifies if the current cell should be reinitialized
            with the underlying cell's value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RefreshRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeOptions,System.Boolean)">
            <summary>
            Invalidates the region of the grid control specified with a range of cells and
            immediately causes a paint message to be sent to the control before the function returns.
            </summary>
            <param name="range">The range that defines the region to be invalidated.</param>
            <param name="options">Options that indicate if method should enlarge the affected range of cells to include covered and floating cells.</param>
            <param name="forceRefreshCurrentCell">When a current cell is active and within the given
            range of cells, this option specifies if the current cell should be reinitialized
            with the underlying cell's value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Refresh(System.Boolean)">
            <overload>
            <summary>
            Forces the control to invalidate its client area and immediately redraw itself and any child controls.
            </summary>
            </overload>
            <param name="fromModel">True if the grid model needs to be refreshed.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Refresh">
            <override/>
            <summary>
            Forces the control to invalidate its client area and immediately redraw itself
            and any child controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollCellInView(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Scrolls the specified cell into view.
            </overload>
            <summary>
            Scrolls the specified range into view.
            </summary>
            <param name="range">The range that should be scrolled into the visible grid view area.</param>
            <returns>True if scrolling the grid was necessary; False if the range was already in the visible area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollCellInView(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason)">
            <summary>
            Scrolls the specified range into view.
            </summary>
            <param name="range">The range that should be scrolled into the visible grid view area.</param>
            <param name="reason">The reason for scrolling the current cell into view (e.g. KeyPress, GridFocus etc.)</param>
            <returns>True if scrolling the grid was necessary; False if the range was already in the visible area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollCellInView(System.Int32,System.Int32)">
            <summary>
            Scrolls the specified cell into view.
            </summary>
            <param name="rowIndex">The row index. 0 if rows should not scroll.</param>
            <param name="colIndex">The column index. 0 if columns should not scroll.</param>
            <returns>True if scrolling the grid was necessary; False if the range was already in the visible area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollCellInView(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason)">
            <summary>
            Scrolls the specified cell into view.
            </summary>
            <param name="rowIndex">The row index. 0 if rows should not scroll.</param>
            <param name="colIndex">The column index. 0 if columns should not scroll.</param>
            <param name="reason">The reason for scrolling the current cell into view (e.g. KeyPress, GridFocus etc.)</param>
            <returns>True if scrolling the grid was necessary; False if the range was already in the visible area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnQueryScrollCellInView(Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.ProcessScrollCellInView(System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason)">
            <summary>
            Called to scroll the specified cell into view.
            </summary>
            <param name="rowIndex">The row index. 0 if rows should not scroll.</param>
            <param name="colIndex">The column index. 0 if columns should not scroll.</param>
            <param name="dontScroll">Specified if top row index and left col index should be changed without raising scroll events
            and without updating the screen (calling DoScroll). Used by GridNestedTableControl grids in GridGroupingControl.
            Normally this should be false for other scenarios.</param>
            <param name="reason">The reason for scrolling the current cell into view (e.g. KeyPress, GridFocus etc.)</param>
            <returns>True if scrolling the grid was necessary; False if the range was already in the visible area.</returns>      
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetTopRow(System.Int32,System.Boolean)">
            <summary>
            Changes the top row index without raising events and without updating the grid display.
            </summary>
            <param name="rowIndex">The new top row index.</param>
            <param name="resetvScrollPixelDelta">True if top row should be aligned; false if partial visible row should stay as is</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetTopRow(System.Int32)">
            <summary>
            Changes the top row index without raising events and without updating the grid display.
            </summary>
            <param name="rowIndex">The new top row index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetLeftCol(System.Int32,System.Boolean)">
            <summary>
            Changes the left column index without raising events and without updating the grid display.
            </summary>
            <param name="colIndex">The new left column index.</param>
            <param name="resethScrollPixelDelta">True if left column should be aligned; false if partial visible column should stay as is</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.InternalSetLeftCol(System.Int32)">
            <summary>
            Changes the left column index without raising events and without updating the grid display.
            </summary>
            <param name="colIndex">The new left column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetTopRow(System.Int32)">
            <summary>
            Changes the top row index and scrolls the grid.
            </summary>
            <param name="rowIndex">The new top row index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.SetLeftCol(System.Int32)">
            <summary>
            Changes the left column index and scrolls the grid.
            </summary>
            <param name="colIndex">The new left column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetClientRow(System.Int32)">
            <summary>
            Returns the client row index for an absolute row index.
            </summary>
            <param name="rowIndex">The absolute row index.</param>
            <returns>The client row index relative to the top row index.</returns>
            <remarks>
            Client row indexes indicate the visible client rows in the current view. <para/>
            Client row indexes are numbered from 0 to the number of visible rows. <para/>
            Absolute row indexes are independent of the scroll position.<para/>
            If you have a client row index you should first convert the client row index
            to an absolute row index before querying information about the row, such as row height or
            cell contents.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetClientCol(System.Int32)">
            <summary>
            Returns the client column index for an absolute column index.
            </summary>
            <param name="colIndex">The absolute column index.</param>
            <returns>The client column index relative to the top column index.</returns>
            <remarks>
            Client column indexes indicate the visible client columns in the current view. <para/>
            Client column indexes are numbered from 0 to the number of visible columns. <para/>
            Absolute column indexes are independent of the scroll position.<para/>
            If you have a client column index, you should first convert the client column index
            to an absolute column index before querying information about the column, such as column height or
            cell contents.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRow(System.Int32)">
            <summary>
            Returns the absolute row index for a client row index.
            </summary>
            <param name="nClientRow">The client row index.</param>
            <returns>The absolute row index calculated based on the given client row index and the top row index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCol(System.Int32)">
            <summary>
            Returns the absolute column index for a client column index.
            </summary>
            <param name="nClientCol">The client column index.</param>
            <returns>The absolute column index calculated based on the given client column index and the left column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetMaximumTopRowIndex">
            <summary>
            Returns the maximum value for <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/>.
            </summary>
            <returns>Maximum value</returns>
            <example>The following example lets you scroll through all rows in a grid
            <code lang="C#">
            GridControlBase grid; // your grid
            int min = grid.GetMinimumTopRowIndex();
            int max = grid.GetMaximumTopRowIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.TopRowIndex = v;
            }
            </code>
            <code lang="VB">
            Dim grid As GridControlBase ' your grid
            int min = grid.GetMinimumTopRowIndex();
            int max = grid.GetMaximumTopRowIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.TopRowIndex = v;
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetMinimumTopRowIndex">
            <summary>
            Returns the minimum value for <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/>.
            </summary>
            <returns>Minimum value</returns>
            <example>The following example lets you scroll through all rows in a grid
            <code lang="C#">
            GridControlBase grid; // your grid
            int min = grid.GetMinimumTopRowIndex();
            int max = grid.GetMaximumTopRowIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.TopRowIndex = v;
            }
            </code>
            <code lang="VB">
            Dim grid As GridControlBase ' your grid
            int min = grid.GetMinimumTopRowIndex();
            int max = grid.GetMaximumTopRowIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.TopRowIndex = v;
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetMaximumLeftColIndex">
            <summary>
            Returns the maximum value for <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/>.
            </summary>
            <returns>Maximum value</returns>
            <example>The following example lets you scroll through all columns in a grid
            <code lang="C#">
            GridControlBase grid; // your grid
            int min = grid.GetMinimumLeftColIndex();
            int max = grid.GetMaximumLeftColIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.LeftColIndex = v;
            }
            </code>
            <code lang="VB">
            Dim grid As GridControlBase ' your grid
            int min = grid.GetMinimumLeftColIndex();
            int max = grid.GetMaximumLeftColIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.LeftColIndex = v;
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetMinimumLeftColIndex">
            <summary>
            Returns the minimum value for <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/>.
            </summary>
            <returns>Minimum value</returns>
            <example>The following example lets you scroll through all columns in a grid
            <code lang="C#">
            GridControlBase grid; // your grid
            int min = grid.GetMinimumLeftColIndex();
            int max = grid.GetMaximumLeftColIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.LeftColIndex = v;
            }
            </code>
            <code lang="VB">
            Dim grid As GridControlBase ' your grid
            int min = grid.GetMinimumLeftColIndex();
            int max = grid.GetMaximumLeftColIndex();
            for (int v = min; v &lt;= max; v++)
            {
                grid.LeftColIndex = v;
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnWindowScrolled(Syncfusion.Windows.Forms.ScrollWindowEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnTopRowChanging(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging"/> event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnTopRowChanged(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/> event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnLeftColChanging(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging"/> event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnLeftColChanged(Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/> event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnHScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
                  Listens for the horizontal scrollbar's scroll event.
            </summary>
            <param name="sender">
               A <see cref="T:System.Object"/> that contains data about the control.
            </param>
            <param name="se">
               A <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.IsDesignMode">
            <summary>
            Gets a value that indicates if the grid is in design mode.
            </summary>
            <returns>Returns <see cref="P:System.ComponentModel.Component.DesignMode"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Focus">
            <override/>
            <summary>Sets input focus to the control.</summary>
            <returns>True if the control is focused.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnGridControlMouseDown(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CancelMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnGridControlMouseMove(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CancelMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnGridControlMouseUp(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CancelMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCancelMouseEvent(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridControlBase.CancelMouseDelegate)">
            <summary>
            Raises the specified mouse event and catches any exception. If exception is 4ed NotifyCancelMode
            is called. Returns False if event should be ignored by the grid.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
            <param name="d">A delegate that handles the event.</param>
            <returns>False if CancelMouseEventArgs.Cancel is True; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCancelMode(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnAutoScrollingChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnScrollControlMouseDown(Syncfusion.Windows.Forms.CancelMouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetDefaultMaxStandardValuesSize">
            <summary>
            Returns the default maximum size for the drop-down part of a StandardValuesCell.
            </summary>
            <returns>returns the size</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCachedGraphics">
            <summary>
            Returns a <see cref="T:System.Drawing.Graphics"/> object that is instantiated on demand and cached. When
            the grid size, grid location or scroll position changes the graphics object will be 
            recreated. Use GetCachedGraphics when you want to optimize drawing speed of the grid
            and call <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawClippedGrid(System.Drawing.Graphics,System.Drawing.Rectangle)"/> to draw cells directly with this graphics object
            as shown in the TraderGridTest example.
            </summary>
            <returns>A Graphics object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetCachedGraphics(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Return (or initialise) the cached graphics object for this table
            </summary>
            <param name="gridTableControl">The Grid table control</param>
            <returns>The catched graphics object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlBase_Disposed(System.Object,System.EventArgs)">
            <summary>
            Free resources associated with this grid table and unwire delegates
            </summary>
            <param name="sender">Current object.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBase.NotifyCellHighlighted(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            When you implement a custom cell type that supports hovering or other cell highlighting
            features you should call this method to notify the grid about the temporary state of the cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">A reference to the style of the cell.</param>
            <remarks>
            By default the method has no functionality. With a GridGroupingControl however, the
            grid can save the Element associated with the rowindex and check the state again at 
            a later time when ListChanged notifications were handled and rows possibly shifted up
            or down.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.AllowViewStyleCacheBaseStyleValues">
            <summary>
            Gets or sets a value indicating whether the grid can enable caching style property values
            of GetViewStyleInfo styles when accessed the first time. This will make accessing
            the same property repeatedly faster (e.g. style.CellValue or style.ReadOnly might be 
            accessed multiple times from different routines for the same style object).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.UseOldHiddenScrollLogic">
            <summary>
            Gets or sets a value indicating whether to switch back to old logic used for hiding rows or columns
            in case of any compatibility problems (logic was changed after 4.2)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.SortIconPlacement">
            <summary>       
            Gets or sets a value to assign the placement of the SortIcon
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.UseImageListDrawing">
            <summary>
            Grid uses ImageList_DrawEx to draw cell images. Lets you switch to default ImageList_Draw instead. 
            Added for PrintColumnsToFit helper class which uses Metafile drawings internally
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ExternalMove">
            <summary>
            Gets or sets the ExternalMove. Used by GridSelectCellsMouseController.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCreateCellTextBox">
            <summary>
            Occurs before TextBox of a TextBox, OriginalTextBox or derived cell type is created.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.FillRectangleHook">
            <summary>
            Occurs before BrushPaint.FillRectangle is called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.AllowTextBoxAutoSize">
            <summary>
            Gets or sets a value indicating whether to force cell renderers to ignore the GridStyleInfo.AutoSize property and
            do not automatically resize cells while typing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.AllowRowResizeUsingCellBoundaries">
            <summary>
            Gets or sets a value indicating whether to allow resizing of rows through standard cell boundaries. No support for GridListControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.AllowColumnResizeUsingCellBoundaries">
            <summary>
            Gets or sets a value indicating whether to allow resizing of columns through standard cell boundaries. For GridListControl, it is true by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ShowMessageBoxOnDrop">
            <summary>
            Gets or sets a value indicating whether to display messagebox before dropping cell contents from source to the destination.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.OptimizeDrawBackground">
            <summary>
            Gets or sets a value indicating whether the grid's painting routines have a built-in optimization where it combines
            cells that have the same background to be drawn with one paint operation instead
            of drawing the background for each cell individually.
            </summary>
            <remarks>
            The property is true by default. The optimization causes the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/>
            event to be hit for every cell and also change the background color of a style object
            within a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/> operation to be ignored. <para/>
            You should set it False if this is an issue for you. Or you could also try setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/>
            be set to BrushInfo.Empty to force DrawCellBackground be called for cells.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.UseGdiPlusRightAlignedTextWorkaround">
            <summary>
            Gets or sets a value indicating whether UseGdiPlusRightAlignedTextWorkaround implements a work-around for a GDI+ known issue with
            right-aligned text and DrawString.
            </summary>
            <remarks>
            When you have cells with right-aligned text some words are not aligned at the right border as
            you would expect. This is because of GDI+ designed behavior, and the degree of the problem varies
            from font to font. You can see this behavior for example with regular System.Windows.Forms.Label
            controls. Since Essential Grid relies on GDI+, it exhibits the same behavior. Besides using a
            Monospaced Font, some include using either antialiased string drawing or
            explicitly measuring the string width and not relying on DrawString to draw the text right-aligned.
            <para/>
            When you enable UseGdiPlusRightAlignedTextWorkaround then the static cell renderer will
            use the measure string width workaround. However, this will slow down drawing of right-aligned text.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlBaseEventsTarget">
            <summary>
            Gets or sets the GridControlBaseEventsTarget. Redirects events defined in <see cref="T:Syncfusion.Windows.Forms.Grid.IGridControlBaseEventsTarget"/> to the specified object.
            Each event will first be called on <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlBaseEventsTarget"/> before the actual
            event handler in this control is called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixel">
            <summary>
            Gets or sets a value indicating whether it enables horizontal pixel scrolling for the grid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanged">
            <summary>
            Occurs after the horizontal pixel scroll position was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanged">
            <summary>
            Occurs after the vertical pixel scroll position was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanging">
            <summary>
            Occurs before the vertical pixel scroll position is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanging">
            <summary>
            Occurs before the horizontal pixel scroll position is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixel">
            <summary>
            Gets or sets a value indicating whether it enables vertical pixel scrolling for the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintBounds">
            <summary>
            Gets or sets the grid bounds while the grid is in printing mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.UpdateSelectRange_Range">
            <summary>
            Gets or sets UpdateSelectRange_Range. Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.UpdateSelectRange_OldRange">
            <summary>
            Gets or sets UpdateSelectRange_OldRange. Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.UnHideColsOnDblClick">
            <summary>
            Gets or sets a value indicating whether to allow resizing of hidden columns when double click. Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Model">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> that manages data to be displayed in the grid.
            </summary>
            <remarks>
            You can replace the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> at run-time. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            will release and establish links to the previous model and establish new relationship
            with the new model, then redraw itself.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Cursor">
            <override/>
            <summary>Specfies the cursor to be displayed when the mouse pointer is over the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScroll">
            <summary>
            Gets or sets a value indicating whether it enables or disables vertical scrollbar. Overriden. With <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>, use
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollBehavior"/> instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScroll">
            <summary>
            Gets or sets a value indicating whether it enables or disables horizontal scrollbar. Overriden. With <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>, use
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollBehavior"/> instead.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemeChanged">
            <summary>
            This event will be fired when the ThemesEnabled property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ModelChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Model"/> reference to <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds">
            <summary>
            Gets or sets the bounds of the grid. This is normally the <see cref="P:System.Windows.Forms.Control.ClientRectangle"/> of a control but
            you change <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> and by doing this instruct the grid that only parts of the current
            should be used to display the grid.
            </summary>
            <remarks>
            While in printing mode, <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> will return printer dimensions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HandleWMSYSCHAR">
            <summary>
            Gets or sets a value indicating whether WM_SYSCHAR need to be handled in TextBox and OriginalTextBox Cell types
            to handle universal Keyboard Mappings.
            </summary>
            <remarks>
            This property is mainly added to handle the scenario where Input characters from a universal keyBoard Mapping will be
            WM_SYSCHAR (0x104), instead of WM_CHAR (0x102), which needs the TextBox and OriginalTextBox CellTypes to be forced to read 
            the Key Messages.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ShowRowHeaderErroricon">
            <summary>
            Specifies if the error icon should be displayed in the header cell if the validation is failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HasGridBounds">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> was initialized. If not, <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> returns the same
            value as <see cref="P:System.Windows.Forms.Control.ClientRectangle"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBoundsChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> property has been changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingMode">
            <summary>
            Gets or sets a value indicating whether it toggles printing mode for the grid. While in printing mode <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/> will return
            the print rectangle of the page being printed and not the client rectangle of the control on
            the screen.
            </summary>
            <remarks>
            When printing the grid, the GridPrintDocument class will toggle the
            printing mode for the grid. At that time, all drawing related code will use the
            printing page as canvas and <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridBounds"/>.<para/>
            Also, <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/> will return values
            with top row and left column for the page that is currently being printed.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingModeChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingMode"/> has been changed for the grid object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollBehavior">
            <summary>
            Gets or sets the behavior of the horizontal scrollbar.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridScrollbarMode"/> enumeration that offers various options for the scrollbar behavior.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollBehavior">
            <summary>
            Gets or sets the behavior of the vertical scrollbar.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridScrollbarMode"/> enumeration that offers various options for the scrollbar behavior.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.DisableFormattedTextInEditMode">
            <summary>
            Gets or sets a value indicating whether the formatting of the cell text can be disabled in edit mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled">
            <summary>
            Gets or sets a value indicating whether XP Themes (visual styles) should be used for this control when
            available.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Office2007ScrollBars">
            <summary>
            Toggles between standard and Office2007 scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Office2007ScrollBarsColorScheme">
            <summary>
            Gets / sets the style of Office2007 scroll bars
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridOfficeScrollBars">
            <summary>
            Gets or sets MS Office-like scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.MetroScrollBars">
            <summary>
            Gets the ScrollControl's MetroScrollBars
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.MetroColorTable">
            <summary>
            Gets the ScrollControl's MetroColorTable
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Office2010ScrollBarsColorScheme">
            <summary>
            Gets / sets the style of Office2010 scroll bars
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.SupportsTransparentBackColor">
            <summary>
            Gets or sets a value indicating whether it toggles support for Windows 2000 and Windows XP transparency. Set this true
            if you want the grid to draw transparent over a background bitmap.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SupportsTransparentBackColorChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.SupportsTransparentBackColor"/> has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.BackgroundImageID">
            <summary>
            Gets or sets the Namespace ID that contains the grids's background image information id.
            </summary>
            <remarks>
            <para/>
            The default value for the BackgroundImageID property is "".<para/>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HasBackgroundImageID">
            <summary>
            Gets a value indicating whether BackgroundImage state has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.BackColor">
            <override/>
            <summary>Specifies the background color for the grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VerticalThumbTrack">
            <summary>
            Specifies if the control should scroll while the user is dragging a vertical scrollbar thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HorizontalThumbTrack">
            <summary>
            Specifies if the control should scroll while the user is dragging a horizontal scrollbars thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VerticalScrollTips">
            <summary>
            Specifies if the control should show Scroll Tips while the user is dragging a vertical scrollbar thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HorizontalScrollTips">
            <summary>
            Specifies if the control should show Scroll Tips while the user is dragging a horizontal scrollbar thumb.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged">
            <summary>
            Occurs when the user is about to drag or is in the process of dragging a selected range of columns or rows.
            </summary>
            <remarks>
            Raised after marker is drawn to give visual feedback about new position.
            <para/>
             See <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs"/> for further discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging">
            <summary>
            Occurs when the user is about to drag or is in the process of dragging a selected range of columns or rows.
            </summary>
            <remarks>
            Raised before new marker is drawn.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs"/> for further discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns">
            <summary>
            Occurs when the user is resizing a selected range of columns.
            </summary>
            <remarks>
             See <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs"/> for further discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows">
            <summary>
            Occurs when the user is resizing a selected range of rows.
            </summary>
            <remarks>
             See <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs"/> for further discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange">
            <summary>
            Occurs when the user hovers the mouse over the edge of a selected range.
            In your event handler, you can determine if the selected range can serve as OLE Data Source.
            </summary>
            <remarks>
            You can disallow the specified range to be used as OLE Data Source when
            you assign true to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.
            </remarks>
            Also see <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs"/>
            Also see <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.OleDragDropEventsTarget">
            <summary>
            Gets or sets the OleDragDropEventsTarget. Redirects events defined in <see cref="T:Syncfusion.Windows.Forms.Grid.IGridOleDragDropEventsTarget"/> to the specified object.
            Each event will first be called on <see cref="T:Syncfusion.Windows.Forms.Grid.IGridOleDragDropEventsTarget"/> before the actual
            event handler in this control is called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ExcelLikeFrameSelections">
            <internalonly/>
            <summary>Gets or sets ExcelLikeFrameSelections. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Selections">
            <summary>
            Gets selected ranges in the grid. Allows you to add and remove selections, determines
            selection state of a specific cell and more.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanging">
            <summary>
            Occurs before the Excel-like selection frame is changing.
            </summary>
            <remarks>
            Before internal data are changed. Grid will hide selection frame.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionFrameChanged">
            <summary>
            Occurs after the Excel-like selection frame has changed.
            </summary>
            <remarks>
            After internal data were changed. Grid will show selection frame.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo">
            <summary>
            This event is raised to allow custom formatting of
            a cell by changing its style object just before it is drawn.
            </summary>
            <remarks>
            This allows formatting based on the current view state, e.g. current cell context,
            focused control etc.<para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs"/> for further discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCell">
            <summary>
            Occurs for every cell before the grid draws the specified cell.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs"/> for more detailed discussion.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellDisplayText">
            <summary>
            Occurs for every cell before the grid draws the display text for the specified cell.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs"/> for more detailed discussion.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground">
            <summary>
            Occurs for every cell before the grid draws the background of a specified cell.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs"/> for more detailed discussion.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellFrameAppearance">
            <summary>
            Occurs for every cell before the grid draws the frame (sunken or raised) of a specified cell
            and after the cell's background was drawn.
            </summary>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <remarks>
            Set e.Cancel = True if you want to customize the drawing of the frame
            and do not want the grid with its default drawing for the cell's frame.
            <para/>
            If you want to draw custom borders around a cell, be sure to reserve space
            for the extra area occupied by your borders. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BorderMargins"/>.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButton">
            <summary>
            Occurs for every button in every cell before the grid draws a cell button.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs"/> for more detailed discussion.
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs"/> for an example.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButtonBackground">
            <summary>
            Occurs for every button in every cell before the grid draws the background of a cell button.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs"/> for more detailed discussion and also an example.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDrawn">
            <summary>
            Occurs for every cell after the grid has drawn the specified cell.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs"/> for more detailed discussion.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDrawItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ShowDisabledGridAsGray">
            <summary>
            Gets or sets whether the grid is shown as gray if it is disabled. The default value is false.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCurrentCellBorder">
            <summary>
            Occurs when the grid draws a border around the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.AllowDrawItemRaiseExceptionCatched">
            <internalonly/>
            <summary>Gets or sets a value indicating whether to AllowDrawItemRaiseExceptionCatched. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsDrawing">
            <summary>
            Gets a value indicating whether the grid is inside a <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.DropDownContainerParent">
            <summary>
            Gets or sets to allow you to specify a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownContainer"/> as parent of the
            grid when used inside a drop-down. This is necessary if nested popups are needed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HitTestSelectionEdge">
            <internalonly/>
            <summary>Gets or sets a value indicating whether HitTestSelectionEdge. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintInfo">
            <summary>
            Gets temporary information related to printing. This class will change in future versions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsInLeaveOrValidate">
            <summary>
            Gets a value indicating whether the grid is currently handling a <see cref="E:System.Windows.Forms.Control.Validating"/> event.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.WrapCellNextControlInForm">
            <summary>
            Occurs before the grid is about to be left because the user is at the top-left or bottom-right
            cell and about to tab out of the grid.
            This event is only raised if the <see cref="F:Syncfusion.Windows.Forms.Grid.GridWrapCellBehavior.NextControlInForm"/>
            has been specified for <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.WrapCell"/>. 
            </summary> 
            <remarks><see cref="T:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventHandler"/></remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.SplitRow">
            <summary>
            Gets the row in the splitter where this control is displayed, if the grid is used inside a dynamic splitter control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.SplitCol">
            <summary>
            Gets the column in the splitter where this control is displayed, if the grid is used inside a dynamic splitter control.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText">
            <summary>
            The CurrentCellInitializeControlText notifies you
            that the current cell is initialized with text to be displayed in
            the associated control, e.g. a text box control.
            </summary>
            <example>
            <code lang="C#">
                    public Form1()
                    {
                        InitializeComponent();
            <para/>
                        this.gridDataBoundGrid2.CurrentCellInitializeControlText += new GridCurrentCellInitializeControlTextEventHandler(gridDataBoundGrid2_CurrentCellInitializeControlText);
                        this.sqlDataAdapter1.Fill(this.dataSet11);
                    }
            <para/>
                    void gridDataBoundGrid2_CurrentCellInitializeControlText(object sender, GridCurrentCellInitializeControlTextEventArgs e)
                    {
                        if (e.CellValue != null)
                        {
                            e.ControlText = e.CellValue.ToString();
                        }
                    }
            </code>
            </example>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellErrorMessage">
            <summary>
            The CurrentCellErrorMessage notifies you
            that the current cell validation failed and a message is displayed. You can cancel
            the event and display your own custom messagebox.
            </summary>
            <example>
            <code lang="C#">
                    public Form1()
                    {
                        InitializeComponent();
            <para/>
                        this.gridDataBoundGrid2.CurrentCellErrorMessage += new GridCurrentCellErrorMessageEventHandler(gridDataBoundGrid2_CurrentCellErrorMessage);
                        this.sqlDataAdapter1.Fill(this.dataSet11);
                    }
            <para/>
                    void gridDataBoundGrid2_CurrentCellErrorMessage(object sender, GridCurrentCellErrorMessageEventArgs e)
                    {
                        MessageBox.Show(e.Owner, e.Text);
                        e.Cancel = true;
                    }
            </code>
            </example>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked">
            <summary>
            Occurs when the user has clicked on a child button element inside a cell renderer.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving">
            <summary>
            Occurs when the current cell is about to be moved to a new position.
            </summary>
            <remarks>
            You can disallow the activation of specific cells at run-time when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.
            <para/>
            You can modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.ColIndex"/> to activate
            a different cell.
            <para/>
            You can also modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.Options"/>.
            <para/>
            Once the current cell has been moved, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> event
            is raised or a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> if moving to the specified
            target cell failed.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved">
            <summary>
            Occurs when the current cell has been successfully moved to a new position.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed">
            <summary>
            Occurs when the current cell fails to be moved to a new position.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            <para/>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ErrorMessage"/> might hold an error message
            why the operation failed.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating">
            <summary>
            Occurs before the grid activates the specified cell as current cell.
            </summary>
            <remarks>
            You can disallow the activation of specific cells at run-time when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.ColIndex"/> to activate
            a different cell.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            Once the current cell has been activated, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event
            is raised or a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> if activating the specified
            cell failed.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated">
            <summary>
            Occurs after the grid activates the specified cell as current cell.
            </summary>
            <remarks>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed">
            <summary>
            Occurs after the grid fails to activate a specific cell as current cell.
            </summary>
            <remarks>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventArgs"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeleting">
            <summary>
            Occurs when the user presses the Delete key on an active current cell.
            </summary>
            <remarks>
            The grid will delete contents of the current cell. You can cancel the operation
            by setting <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellStartEditing">
            <summary>
            Occurs before the current cell switches into editing mode.
            </summary>
            <remarks>
            The grid will switch into editing mode when the user presses a key while the cell
            is not in editing mode or when you call <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/>.
            You can cancel the operation
            by setting <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging">
            <summary>
            Occurs when the user wants to modify contents of the current cell.
            </summary>
            <remarks>
            The grid sends this event before the changes are applied to the active cell. You can cancel the operation
            by setting <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanged">
            <summary>
            Occurs when the user changes contents of the current cell.
            </summary>
            <remarks>
            The grid sends this event whenever changes occur, similar to a <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged"/> event.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating">
            <summary>
            Occurs before the grid the deactivates the current cell.
            </summary>
            <remarks>
            You can cancel the operation
            by setting <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowedDropDown">
            <summary>
            Occurs after the drop-down part has been dropped-down and made visible.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellCloseDropDown">
            <summary>
            Occurs when the drop-down part of the current cell was / is closed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowingDropDown">
            <summary>
            Occurs when the drop-down part is about to be shown.
            </summary>
            <remarks>
            The event will provide you with a suggested size of the drop-down control. You can change
            the default size in your event handler by changing the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs.Size"/>
            property.
            <para/>
            Please note however that some drop-down controls might override the suggested height with their own
            preferred height. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart"/> and <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxPart"/>
            methods both provide a <see cref="P:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxPart.DropDownRows"/> property that defines the
            number of visible rows.
            <para/>
            To abort the drop-down operation, you should set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            If you need to get access to the cell renderer, you can use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Renderer"/>
            property of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object. The <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            also holds style information and row and column index. See the cell renderer for properties to access
            the drop-down container and drop-down part.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating">
            <summary>
            Occurs when the grid validates contents of the active current cell.
            </summary>
            <remarks>
            You can mark the contents as invalid by by setting <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.<para/>
            The grid raises this event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Validate"/>
            method is called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> calls this method when the current cell was in editing mode
            and its contents were modified.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidated">
            <summary>
            Occurs when the grid has successfully validated the contents of the active current cell.
            </summary>
            <remarks>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges">
            <summary>
            Occurs when the grid accepts changes made to the active current cell.
            </summary>
            <remarks>
            The grid raises this cancelable event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges"/>
            method is called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.EndEdit"/> call this method when the current cell was in editing mode
            and its contents were modified and validated.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            If you assign true to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>, the grid will not deactivate the current
            cell.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            <para/>
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellConfirmChangesFailed">
            <summary>
            Occurs when the grid could not save changes made to the active current cell.
            </summary>
            <remarks>
            The grid raises this event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges"/>
            method is called and its contents were modified and could not be successfully validated
            or saved back to the data source.
            <para/>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Exception"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ErrorMessage"/>
            properties provide details why the operation failed. If you want to display a message box
            be sure to reset the the error state with <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ResetError"/>.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            <para/>
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges">
            <summary>
            Occurs when the grid rejects changes made to the active current cell.
            </summary>
            <remarks>
            The grid raises this event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RejectChanges"/>
            method is called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.CancelEdit"/> call this method when the current cell was in editing mode
            and its contents were modified.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            <para/>
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellEditingComplete">
            <summary>
            Occurs when the grid completes editing mode for the active current cell.
            </summary>
            <remarks>
            The grid raises this event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.EndEdit"/>
            or <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.CancelEdit"/> method is called. The event occurs after <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/> were raised.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated">
            <summary>
            Occurs after the grid deactivates current cell.
            </summary>
            <remarks>
            The grid raises this event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            method is called. The event occurs after any <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/>,
             <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/>, or
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/> are raised.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivateFailed">
            <summary>
            Occurs after the grid fails to deactivate the current cell.
            </summary>
            <remarks>
            The grid raises this event when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            method is called and can not deactivate the current cell. The reason deactivation may fail could be
            that the cell's contents were invalid or any of the event handlers associated with deactivating the current cell
            signaled to abort this operation.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlGotFocus">
            <summary>
            Occurs when the current cell has switched to in-place editing and the control
            associated with the current cell has received the focus.
            </summary>
            <remarks>
            Check the associated <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Renderer"/> for state of the cell renderer.<para/>
            Raising this event is only optional for the cell renderer that manages the active cell.<para/>
            A text box will usually send this event when the associated <see cref="T:System.Windows.Forms.TextBox"/> control has received
            the focus after the cell was switched into edit mode with <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/>. Other cell renderers
            may or may not send this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlKeyMessage">
            <summary>
            This is called from the current cell control's ProcessKeyMessage method and gives
            you a chance to modify the default behavior of this method. Be aware that this
            is a very implementation-specific method and you should only handle this event
            if KeyDown, KeyUp, CurrentCellKeyDown, or CurrentCellKeyUp events are
            not good enough.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlDoubleClick">
            <summary>
            Occurs when the current cell
            is in-place editing mode and the user double-clicks inside the control
            associated with the current cell.
            </summary>
            <remarks>
            GridCurrentCell.ControlDoubleClick lets you detect a double click inside
            a cell for any CurrentCellActivateBehavior. If for example the focus is set
            to the renderer's control after the first click, the grid will listen for a
            MouseDown on the newly focused control and raise this event on a second click.
            <para/>
            Check the associated <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Renderer"/> for state of the cell renderer.<para/>
            <para/>
            Raising this event is only optional for the cell renderer that manages the active cell.<para/>
            <para/>
            A text box will usually send this event when the associated <see cref="T:System.Windows.Forms.TextBox"/> control has received
            the focus after the cell is switched into edit mode and the user double-clicks. Other cell renderers
            may or may not send this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlLostFocus">
            <summary>
            Occurs when the current cell is in in-place editing mode and the control
            associated with the current cell has lost the focus.
            </summary>
            <remarks>
            Check the associated <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Renderer"/> for state of the cell renderer.<para/>
            Raising this event is only optional for the cell renderer that manages the active cell.<para/>
            A text box will usually send this event when the associated <see cref="T:System.Windows.Forms.TextBox"/> control has lost
            the focus after the cell is switched into edit mode with <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/>. Other cell renderers
            may or may not send this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick">
            <summary>
            Occurs when the user clicks a push button.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick">
            <summary>
            The user clicks inside the checker box of a check box.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick">
            <summary>
            The user clicks inside a cell.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick">
            <summary>
            The user double-clicks inside a cell.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest">
            <summary>
            Grid performs hit-test for a cell.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor">
            <summary>
            Grid queries for the cursor to display for a specific cell when the cell indicated
            previously with a non-zero hit-test value that it wants the mouse operation.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter">
            <summary>
            Occurs before the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHoverEnter(System.Int32,System.Int32)"/> method of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> is called.
            </summary>
            <remarks>
            Event is raised both when the cell's HitTest method indicated
            previously with a non-zero hit-test value that it wants the mouse operation or when
            the user is hovering the mouse over cells and the "SelectCells" mouse controller
            is about to handle the mouse operation.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHover">
            <summary>
            Occurs before the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHover(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> is called.
            </summary>
            <remarks>
            Event is raised both when the cell's HitTest method indicated
            previously with a non-zero hit-test value that it wants the mouse operation or when
            the user is hovering the mouse over cells and the "SelectCells" mouse controller
            is about to handle the mouse operation.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave">
            <summary>
            Occurs before the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseHoverLeave(System.Int32,System.Int32,System.EventArgs)"/> method of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> is called.
            </summary>
            <remarks>
            Event is raised both when the cell's HitTest method indicated
            previously with a non-zero hit-test value that it wants the mouse operation or when
            the user is hovering the mouse over cells and the "SelectCells" mouse controller
            is about to handle the mouse operation.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseDown">
            <summary>
            Occurs before the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseDown(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> is called.
            </summary>
            <remarks>
            Event is raised only when the cell's HitTest method indicated
            previously with a non-zero hit-test value that it wants the mouse operation.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseMove">
            <summary>
            Occurs before the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseMove(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> is called.
            </summary>
            <remarks>
            Event is raised only when the cell's HitTest method indicated
            previously with a non-zero hit-test value that it wants the mouse operation.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseUp">
            <summary>
            Occurs before the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnMouseUp(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/> method of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> is called.
            </summary>
            <remarks>
            Event is raised only when the cell's HitTest method indicated
            previously with a non-zero hit-test value that it wants the mouse operation.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCancelMode">
            <summary>
            Occurs before the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnCancelMode(System.Int32,System.Int32)"/> method of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> is called.
            </summary>
            <remarks>
            Event is raised only when the cell's HitTest method indicated
            previously with a non-zero hit-test value that it wants the mouse operation.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollInfoChanged">
            <summary>
            Indicates that scrollbar information such as Minimum or Maximum has changed.
            </summary>
            <remarks>
            If you want to be updated about changes in the Minimum or Maximum scroll position or page size,
            you should handle this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ForceCurrentCellMoveTo">
            <summary>
            Gets or sets a value indicating whether False, any calls to <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> will be deferred
            until the grid sets the active control inside a parent container
            and its <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)"/> method is called.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString">
            <summary>
            Occurs after the user presses a key in the current cell and before it is accepted. Allows you to limit
            the keys that are accepted for the current cell while the user is typing text.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyPress">
            <summary>
            Occurs before <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)"/> is called.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyDown">
            <summary>
            Occurs before <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)"/> is called.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellKeyUp">
            <summary>
            Occurs before <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)"/> is called.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MoveCurrentCellDirection">
            <summary>
            Occurs before the current cell is moved when the user navigates through the grid with arrow keys.
            </summary>
            <remarks>
            If you want to customize the behavior, you should manually call CurrentCell.MoveTo from within the
            event handler and set e.Handled = True.
            </remarks>
            <example>The following example implements wrapping the current cell to the next row at the end of a row.
            <code lang="C#">
            <para/>
                    private void gridControl1_MoveCurrentCellDirection(object sender, GridMoveCurrentCellDirectionEventArgs e)
                    {
                        GridControlBase grid = sender as GridControlBase;
                        GridModel gridModel = grid.Model;
                        int row = e.RowIndex;
                        int col = e.ColIndex;
                        switch (e.Direction)
                        {
                            case GridDirectionType.Right:
                            {
                                col++;
                                if (col > gridModel.ColCount)
                                {
                                    row++;
                                    col = grid.LeftColIndex;
                                }
            <para/>
                                while (row &lt; gridModel.RowCount)
                                {
                                    using (GridStyleInfo style = grid.GetViewStyleInfo(row, col))
                                    {
                                        if (style.Enabled)
                                        {
                                            e.Result = grid.CurrentCell.MoveTo(row, col);
                                            e.Handled = true;
                                            return;
                                        }
            <para/>
                                        col++;
                                        if (col > gridModel.ColCount)
                                        {
                                            row++;
                                            col = grid.LeftColIndex;
                                        }
                                    }
                                }
                                e.Handled = true;
                                e.Result = false;
                                break;
                            }
                            case GridDirectionType.Left:
                            {
                                col--;
                                if (col == gridModel.Cols.HeaderCount)
                                {
                                    row--;
                                    col = gridModel.ColCount;
                                }
            <para/>
                                while (row > gridModel.Rows.HeaderCount)
                                {
                                    using (GridStyleInfo style = grid.GetViewStyleInfo(row, col))
                                    {
                                        if (style.Enabled)
                                        {
                                            e.Result = grid.CurrentCell.MoveTo(row, col);
                                            e.Handled = true;
                                            return;
                                        }
            <para/>
                                        col--;
                                        if (col == gridModel.Cols.HeaderCount)
                                        {
                                            row--;
                                            col = gridModel.ColCount;
                                        }
                                    }
                                }
                                e.Handled = true;
                                e.Result = false;
                                break;
                            }
                        }
            <para/>
                    }
                }
            <para/>
            </code>
            </example>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition">
            <summary>
            Occurs before the the current cell is moved into a specific direction. Normally, cells that are not
            marked as enabled with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> will be skipped but you can hook into this
            mechanism by implementing an event handler for <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/>. You should set
            <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True if you handled this event.
            </summary>
            <remarks>
            See the SampleGrid class in the gridpad sample for an example.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCell"/> object that provides storage for current cell information
            and manages all current cell operation such as activating, deactivating, saving, editing,
            and moving the current cell.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> gives you a one stop interface for all current cell related operations. This is
            useful for an Intelli-sense-based programming environment since you do not have to dig through many unrelated
            functions.<para/>
            Events for the current cell will be raised by the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> itself. The grid offers many
            events for the current cell that let you customize the current cell's behavior at any stage of operation.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. The <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/> property tells you
            if the grid has an active current cell. The <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCellAt(System.Int32)"/> method lets you
            find out if the current cell is at a specific row and column index.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <example>
            The following example shows how you can customize the behavior of the current cell
            and highlight the whole row of the current cell instead of just the current cell itself.
            <code lang="C#">
                    /// Current cell will be moving from one position to another.
                    protected override void OnCurrentCellMoving(GridCurrentCellMovingEventArgs e)
                    {
                        e.Options |= GridSetCurrentCellOptions.BeginEndUpdate;
                        // Instead of GridSetCurrentCellOptions.BeginEndUpdate we could also
                        // sandwich the call in a Begin/EndUpdate pair ourselves ...
                        //BeginUpdate(BeginUpdateOptions.InvalidateAndScroll);
                    }
            <para/>
                    /// Completes a current cell's MoveTo operation indicating success.
                    protected override void OnCurrentCellMoved(GridCurrentCellMovedEventArgs e)
                    {
                        base.OnCurrentCellMoved(e);
                        //EndUpdate();
                    }
            <para/>
                    /// Completes a current cell's MoveTo operation indicating failure.
                    protected override void OnCurrentCellMoveFailed(GridCurrentCellMoveFailedEventArgs e)
                    {
                        base.OnCurrentCellMoveFailed(e);
                        //EndUpdate();
                    }
            <para/>
                    /// Highlight the current row.
                    protected override void OnPrepareViewStyleInfo(GridPrepareViewStyleInfoEventArgs e)
                    {
                        if (e.RowIndex &gt; this.Model.Rows.HeaderCount &amp;&amp; e.ColIndex &gt; this.Model.Cols.HeaderCount
                            &amp;&amp; CurrentCell.HasCurrentCellAt(e.RowIndex))
                        {
                            e.Style.Interior = new BrushInfo(SystemColors.Highlight);
                            e.Style.TextColor = SystemColors.HighlightText;
                            e.Style.Font.Bold = true;
                        }
                        base.OnPrepareViewStyleInfo(e);
                    }
            <para/>
                    /// Refresh the whole row for the old position of the current cell when it is moved to
                    /// a new row or when current cell is deactivated stand-alone.
                    protected override void OnCurrentCellDeactivated(GridCurrentCellDeactivatedEventArgs e)
                    {
                        // Check if Deactivate is called stand-alone or called from MoveTo and row is moving.
                        if (!CurrentCell.IsInMoveTo || CurrentCell.MoveToRowIndex != CurrentCell.MoveFromRowIndex)
                        {
                            RefreshRange(GridRangeInfo.Row(e.RowIndex), GridRangeOptions.MergeAllSpannedCells);
                        }
                        base.OnCurrentCellDeactivated(e);
                    }
            <para/>
                    /// Refresh the whole row for the new current cell position when the current cell is moved
                    /// to a new row or when current cell is activated stand-alone (and there was no activated current cell).
                    protected override void OnCurrentCellActivated(EventArgs e)
                    {
                        // Check if Activate is called stand-alone or called from MoveTo and row is moving
                        base.OnCurrentCellActivated(e);
                        if (!CurrentCell.IsInMoveTo || CurrentCell.MoveToRowIndex != CurrentCell.MoveFromRowIndex
                            || !CurrentCell.MoveFromActiveState)
                        {
                            RefreshRange(GridRangeInfo.Row(CurrentCell.RowIndex), GridRangeOptions.MergeAllSpannedCells);
                        }
                    }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.WantKeys">
            <summary>
            Gets or sets a value indicating whether if false if you want to suppress key events for the grid. This is useful if you want to
            implement your own keyboard handling and not have any default key handlers in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.FocusOnMouseDown">
            <summary>
            Gets or sets a value indicating whether if set to False if you want to suppress setting focus during a MouseDown event.
            This is useful if you have a MouseController that does not need focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.WantTabKey">
            <summary>
            Gets or sets a value indicating whether the grid control should handle tab keys to move between cells. Set this to False if focus
            should move to the next control in the form instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.WantTabKeyInPreProcessMessage">
            <summary>
            Gets or sets a value indicating whether the grid control should handle tab keys to move between cells right away in the 
            PreProcessMessage method to make sure no other control on a form can override the tab key behavior 
            of this control. This is useful when the grid is hosted in an ActiveX host and the ActiveX 
            container does not honor the grids ProcessDialogKey override. The default value for this property is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.WantEnterKey">
            <summary>
            Gets or sets a value indicating whether the grid control should handle Enter key to move between cells. Set this to False if Enter
            should be ignored instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.WantEscapeKey">
            <summary>
            Gets or sets a value indicating whether the grid control should handle Escape to reset cell contents or reset
            cell selections. Set this to False if the Escape key should be ignored instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.AllowSelectNextControlinProcessDialogKey">
            <summary>Gets or sets a value indicating whether AllowSelectNextControlinProcessDialogKey. Used internally.</summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CellRenderers">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> objects for the current grid view
            method.
            </summary>
            <remarks>
            Cell renderers will be created on demand by calling the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)"/>.
            Each renderer is associated with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> object that holds its data and has
            knowledge how to instantiate a renderer and associates it with a grid view.
            <para/>
            A renderer is created for each grid view but
            renderers (of the same cell type) share the same <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> instance even though they belong
            to different grid views.
            </remarks>
            <example>
            The following examples show how to get a reference to the renderer for a specific cell.
            <code lang="C#">
                        GridStyleInfo style = Model[rowIndex, colIndex];
                        GridCellRendererBase renderer = CellRenderers[style.CellType];
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.InvalidBounds">
            <summary>
            Gets or sets the outer rectangle after a batch of Invalid calls after a BeginUpdate call. This
            is for internal use only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PaintSelectCells">
            <internalonly/>
            <summary>Gets PaintSelectCells. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ViewLayout">
            <summary>
            Gets layout information about the grid such as cell positions, number of visible rows,
            and more. Provides functions that let you find a cell under a given point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.MarkColHeader">
            <summary>
            Gets or sets a value indicating whether the column header for the current cell should be highlighted.
            </summary>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.MarkRowHeader">
            <summary>
            Gets or sets a value indicating whether the row header for the current cell should be highlighted.
            </summary>       
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.DefaultRowHeight">
            <summary>
            Gets or sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/> for the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.DefaultColWidth">
            <summary>
            Gets or sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/> for the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/> object in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.InImeComposition">
            <summary>
            Gets a value indicating whether true after WM_IME_STARTCOMPOSITION is sent and False once WM_IME_ENDCOMPOSITION is handled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.InUpdateWithCustomPaint">
            <summary>
            Gets a value indicating whether true when UpdateWithCustomPaint was called.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MouseActivating">
            <summary>
            Occurs when the user is in the process of activating the control with a mouse click.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsWindowless">
            <summary>
            Gets or sets a value indicating whether the control is used in windowless mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ParentSite">
            <summary>
            Gets or sets the parent control that implements IGridWindowlessSite.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridCapture">
            <summary>
            Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.Control.Capture"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Capture">
            <summary>
            Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.Control.Capture"/> of the parent control with window handle (see <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetWindow"/>).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsMousePressed">
            <summary>
            Gets or sets a value indicating whether the the control is handling a <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsValidating">
            <summary>
            Gets a value indicating whether the <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)"/> method has been called. <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)"/> and <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)"/> reset this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsValidated">
            <summary>
            Gets a value indicating whether the <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)"/> method has been called. <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)"/> and <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)"/> reset this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsActiveControl">
            <summary>
            Gets a value indicating whether the <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)"/> has been called. <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)"/> resets this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IsDeactivated">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnDeactivated(System.EventArgs)"/> has been called. <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)"/> resets this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HasControlFocus">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnControlGotFocus"/> has been called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnControlLostFocus"/> resets this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.OptimizeInsertRemoveCells">
            <summary>
            Gets or sets a value indicating whether inserting and removing cells should be optimized by scrolling window contents
            and only invalidating new cells. Otherwise the whole area is repainted (this is the default).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.IgnoreCurrentCellInvalidate">
            <summary>
            Gets or sets a value indicating whether it prevents any calls to <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.Invalidate"/> to have any effect when current cell is being moved
            or current cell is activated or deactivated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView">
            <summary>
            Occurs before a cell is scrolled into view by a ScrollCellInView call. Normally, the current
            cell is checked if it is inside the visible grid area when certain user events occur such as when a key is pressed or when the grid got focus.
            The event is called to check whether the specified cell is in view. If the cell is not in view, the grid will scroll the cell into view.
            You can hook into this
            mechanism by implementing an event handler for this event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex">
            <summary>
            Gets or sets the column index of the left column. Scrolls the grid when changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex">
            <summary>
            Gets or sets the column index of the left column. Scrolls the grid when changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging">
            <summary>
            Occurs before the grid is scrolled when the top row index is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging">
            <summary>
            Occurs before the grid is scrolled when the left column index is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged">
            <summary>
            Occurs after the grid has been scrolled when the top row index is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged">
            <summary>
            Occurs after the grid has been scrolled when the left column index is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridCellsRange">
            <summary>
            Gets the current range of the grid excluding header rows and columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ScrollableGridRangeInfo">
            <summary>
            Gets the current range of cells that are scrollable (all rows and columns excluding frozen rows and columns).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PaneDesc">
            <override/>
            <summary>Returns the pane information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollIncrement">
            <override/>
            <summary>Gets or sets the multiplier for mouse wheel scrolling.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollIncrement">
            <override/>
            <summary>Gets or sets the multiplier for the mouse wheel scrolling.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Focused">
            <override/>
            <summary>Gets a value indicating whether the control has input focus.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBase.AllowFixFocusWhenCurrentCellIsEditingInMouseUp">
            <summary>
            Gets or sets a value indicating whether if you press the mouse button inside the grid and release the mouse the grid checks whether 
            the current cell is in editing mode. If that is the case it will make sure that focus is moved
            to the current cell control. This ensures the grid will properly return focus to the current
            cell if a message box is shown and closed in a custom event handler. <para/>
            If this behavior causes problems you should set this property false.
            One known issue we found is when you open another MDI form within a CellDoubleClick event, in which
            case the focus would be set back to the original form. If you run into such a situation set this
            property false.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseDown">
            <summary>
            Occurs before a <see cref="E:System.Windows.Forms.Control.MouseDown"/> is raised and allows you to cancel the mouse event.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseMove">
            <summary>
            Occurs before a <see cref="E:System.Windows.Forms.Control.MouseMove"/> is raised and allows you to cancel the mouse event.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBase.GridControlMouseUp">
            <summary>
            Occurs before a <see cref="E:System.Windows.Forms.Control.MouseUp"/> is raised and allows you to cancel the mouse event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridControlBase.CancelMouseDelegate">
            <summary>
            Delegate for OnBeforeMouseDown, OnBeforeMouseMove, and OnBeforeMouseUp methods.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridUpdater">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.WrapCellNextControlInForm"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.WrapCellNextControlInForm"/> event.
            </summary>
            <remarks>
            GridWrapCellNextControlInFormEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.WrapCellNextControlInForm"/> event to notify you 
            when the grid is about to be left because the user is at the top-left or bottom-right
            cell and about to tab out of the grid.
            <para/>
            This event is only raised if the <see cref="F:Syncfusion.Windows.Forms.Grid.GridWrapCellBehavior.NextControlInForm"/>
            has been specified for <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.WrapCell"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventHandler"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GridWrapCellNextControlInFormEventArgs class.
            </summary>
            <param name="forward">Indicates if next or previous control in form should be selected.</param>
            <param name="moveTopLeft">When moving to the next control indicates if grid should move current cell
            to the top-left position.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs.Forward">
            <summary>
            Gets a value indicating whether next or previous control in form should be selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridWrapCellNextControlInFormEventArgs.MoveTopLeft">
            <summary>
            Gets or sets a value indicating whether if grid should move current cell when moving to the next control. 
            to the top-left position.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCell"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCell"/> event.
            </summary>
            <remarks>
            GridDrawCellEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCell"/> event to allow custom drawing of
            a cell. Set the Cancel property true if you have drawn the cell contents and
            do not want the grid to proceed with default drawing of the cell.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellEventHandler"/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellCancelEventArgs">
            <summary>
            Holds row and column coordinates for cancelable events associated with a specific cell.
            </summary>
            <remarks>
            No events use this class directly but it is used 
            as a base class for several other events related to a specific cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellCancelEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCancelEventArgs"/> object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellCancelEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellCancelEventArgs.ColIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs.#ctor(System.Drawing.Graphics,Syncfusion.Windows.Forms.Grid.GridCellRendererBase,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the GridDrawCellEventArgs class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="renderer">The cell renderer.</param>
            <param name="bounds">Cell boundaries.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="isBackgroundErased">True if the cell background has already been drawn with the interior
            as specified in the style object.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs.Graphics">
            <summary>
            Gets Graphics context.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs.Bounds">
            <summary>
            Gets Cell boundaries including borders and margins.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.PerformLayout(System.Int32,System.Int32)"/> in order to calculate client
            and text rectangles without borders and margins.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs.Renderer">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> that is associated with that cell.
            </summary>
            <remarks>
            If you do not set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True, this renderer's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>
            will get called.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs.Style">
            <summary>
            Gets  the style object associated with that cell.
            </summary>
            <remarks>
            Changes to the style object are allowed. However, these changes
            will not be saved back in the grid or cached. But, you can make some
            adjustments to the style object just before the cell is drawn.
            You cannot change Base Style, Interior, or Cell Type at this time.
            See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> for changing
            interior or other style formattings.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs.IsBackgroundErased">
            <summary>
            Gets a value indicating whether the cell background has already been drawn with the interior
            as specified in the style object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButton"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButton"/> event.
            </summary>
            <remarks>
            GridDrawCellButtonEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButton"/> event to allow custom drawing of
            a cell button elements. Set the Cancel property true if you have drawn the cell button elements
            and do not want the grid to proceed with default drawing of the cell button elements.
            <para/>
            The event will automatically be called for every button inside a cell.
            <para/>
            You should handle this event if you want to provide your own drawing of the button. The difference
            to DrawCellButtonBackground event is that this event is called to draw the whole button, not just
            its background. 
            <para/>
            Be sure to set e.Cancel to True if you did your own drawing.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventHandler"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridCellButton,System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs"/> object.
            </summary>
            <param name="button">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to be drawn.</param>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="isActive">True if this is the active current cell; False otherwise.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs.Button">
            <summary>Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to be drawn.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs.Graphics">
            <summary>Gets the <see cref="T:System.Drawing.Graphics"/> context of the canvas.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs.RowIndex">
            <summary>Gets  the row index.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs.ColIndex">
            <summary>Gets the column index.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs.IsActive">
            <summary>Gets a value indicating whether to active current cell. True if this is the active current cell; False otherwise.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonEventArgs.Style">
            <summary>Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButtonBackground"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButtonBackground"/> event.
            </summary>
            <remarks>
            GridDrawCellButtonBackgroundEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellButtonBackground"/> event to allow custom drawing of
            a cell button elements background. Set the Cancel property true if you have drawn the cell button element's
            background and do not want the grid to proceed with default drawing.
            <para/>
            The event will automatically be called for every button inside a cell.
            <para/>
            You should handle this event if you want to change for example the background color of pushbuttons
            and do not want the grid to proceed with its default drawing routine calling ControlPaint.DrawButton.
            This event supplies you with the current button state that should be drawn.
            After the background has been drawn, any foreground text will be drawn by the grid.
            <para/>
            Be sure to set e.Cancel to true if you did your own drawing.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventHandler"/>
            <example>
            The following sample demonstrates drawing a custom cell button element background:
            <code lang="C#">
                    public static void Draw3dFrame(Graphics g, int x0, int y0, int x1, int y1, int w, Color rgbTopLeft, Color rgbBottomRight)
                    {
                        Rectangle rc;
            <para/>
                        for (int i = 0; i != w; i++)
                        {
                            // Top
                            Brush brTL = new SolidBrush(rgbTopLeft);
                            rc = Rectangle.FromLTRB(x0, y0, x1, y0+1);
                            g.FillRectangle(brTL, rc);
             <para/>
                            // Left
                            rc = Rectangle.FromLTRB(x0, y0, x0+1, y1);
                            g.FillRectangle(brTL, rc);
                            brTL.Dispose();
             <para/>
                            Brush brBR = new SolidBrush(rgbBottomRight);
             <para/>
                            // Bottom
                            rc = Rectangle.FromLTRB(x0, y1, x1+1, y1+1);
                            g.FillRectangle(brBR, rc);
             <para/>
                            // Right
                            rc = Rectangle.FromLTRB(x1, y0, x1+1, y1);
                            g.FillRectangle(brBR, rc);
                            brBR.Dispose();
            <para/> 
                            if (i != w-1)
                            {
                                x0++;
                                y0++;
                                x1--;
                                y1--;
                            }
                        }
                    }
             <para/>
                    protected override void OnDrawCellButtonBackground(GridDrawCellButtonBackgroundEventArgs e)
                    {
                        bool drawPressed = (e.ButtonState &amp; ButtonState.Pushed) != 0;
                        Rectangle rect = e.Bounds;
                        Graphics g = e.Graphics;
                        Color hilight = SystemColors.ControlLightLight;
                        Color shadow = SystemColors.ControlDarkDark;
                        if (!drawPressed)
                        {
                            Draw3dFrame(e.Graphics, rect.Left, rect.Top, rect.Right-1, rect.Bottom-1, 1,
                                hilight, shadow);
                        }
                        else
                        {
                            Brush br = new SolidBrush(shadow);
                            g.FillRectangle(br, Rectangle.FromLTRB(rect.Left, rect.Bottom-1, rect.Right-1, rect.Bottom));
                            g.FillRectangle(br, Rectangle.FromLTRB(rect.Right-1, rect.Top, rect.Right, rect.Bottom));
                            br.Dispose();
                        }
                        e.Cancel = true;
                    }
            </code>
            <code lang="VB">
             <para/>
             <para/>
            Public Shared Sub Draw3dFrame(g As Graphics, x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer, w As Integer, rgbTopLeft As Color, rgbBottomRight As Color)
                Dim rc As Rectangle
             <para/>
                Dim i As Integer
                For i = 0 To w - 1
                    ' Top
                    Dim brTL = New SolidBrush(rgbTopLeft)
                    rc = Rectangle.FromLTRB(x0, y0, x1, y0 + 1)
                    g.FillRectangle(brTL, rc)
             <para/>
                    ' Left
                    rc = Rectangle.FromLTRB(x0, y0, x0 + 1, y1)
                    g.FillRectangle(brTL, rc)
                    brTL.Dispose()
             <para/>
                    Dim brBR = New SolidBrush(rgbBottomRight)
             <para/>
                    ' Bottom
                    rc = Rectangle.FromLTRB(x0, y1, x1 + 1, y1 + 1)
                    g.FillRectangle(brBR, rc)
             <para/>
                    ' Right
                    rc = Rectangle.FromLTRB(x1, y0, x1 + 1, y1)
                    g.FillRectangle(brBR, rc)
                    brBR.Dispose()
             <para/>
                    If i &lt; w - 1 Then
                        x0 += 1
                        y0 += 1
                        x1 -= 1
                        y1 -= 1
                    End If
                Next i
            End Sub 'Draw3dFrame
            <para/> 
             <para/>
            Protected Overrides Sub OnDrawCellButtonBackground(e As GridDrawCellButtonBackgroundEventArgs)
                Dim drawPressed As Boolean = (e.ButtonState And ButtonState.Pushed) &lt;&gt; 0
                Dim rect As Rectangle = e.Bounds
                Dim g As Graphics = e.Graphics
                Dim hilight As Color = SystemColors.ControlLightLight
                Dim shadow As Color = SystemColors.ControlDarkDark
                If Not drawPressed Then
                    Draw3dFrame(e.Graphics, rect.Left, rect.Top, rect.Right - 1, rect.Bottom - 1, 1, hilight, shadow)
                Else
                    Dim br = New SolidBrush(shadow)
                    g.FillRectangle(br, Rectangle.FromLTRB(rect.Left, rect.Bottom - 1, rect.Right - 1, rect.Bottom))
                    g.FillRectangle(br, Rectangle.FromLTRB(rect.Right - 1, rect.Top, rect.Right, rect.Bottom))
                    br.Dispose()
                End If
                e.Cancel = True
            End Sub 'OnDrawCellButtonBackground
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridCellButton,System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs"/> object.
            </summary>
            <param name="button">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to be drawn.</param>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="buttonState">A <see cref="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.ButtonState"/> that specifies the current state.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.Button">
            <summary>Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> to be drawn.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.Graphics">
            <summary>Gets the <see cref="T:System.Drawing.Graphics"/> context of the canvas.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.Bounds">
            <summary>Gets the <see cref="T:System.Drawing.Rectangle"/> with the bounds.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.ButtonState">
            <summary>Gets a <see cref="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.ButtonState"/> that specifies the current state.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellButtonBackgroundEventArgs.Style">
            <summary>Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/> event.
            </summary>
            <remarks>
            GridDrawCellBackgroundEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellBackground"/> event to allow custom drawing of
            a cell's background. Set the Cancel property true if you have drawn the cell's background and
            do not want the grid to proceed with default drawing of the cell's background.
            <para/>
            The event will automatically be called for covered cells and bannered cells. For regular
            cells, you can force this event by assigning BrushInfo.Empty 
            to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>. 
            <para/>
            Otherwise this event will not be called
            for regular cells because of internal drawing optimizations within the grid. By default
            the grid optimizes drawing such that the background of neighboring cells with the same
            color are drawn in one operation.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventHandler"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.#ctor(System.Drawing.Graphics,Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Initializes a new instance of the GridDrawCellEventArgs class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="range">The cell's range. Can be several rows or columns if cell is a covered, floated, merged, or bannered cell.</param>
            <param name="isBannered">Indicates if this is a bannered cell.</param>
            <param name="isColored">Indicates if colored background should be drawn or black and white (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridProperties.BlackWhite"/>.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="targetBounds">Cell boundaries.</param>
            <param name="clipBounds">The visible Cell area excluding cell parts that are scrolled out of view.</param>
            <param name="isClipped">Indicates if the graphics canvas already clips the drawing contents.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.Graphics">
            <summary>
            Gets Graphics context.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.Range">
            <summary>
            Gets the cell's range. Can be several rows or columns if cell is a covered, floated, merged, or bannered cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.IsBannered">
            <summary>
            Gets a value indicating whether this is a bannered cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.IsColored">
            <summary>
            Gets a value indicating whether colored background should be drawn or black and white (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridProperties.BlackWhite"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.Style">
            <summary>
            Gets the style object associated with that cell.
            </summary>
            <remarks>
            Changes to the style object are allowed. However, these changes
            will not be saved back in the grid or cached. But, you can make some
            adjustments to the style object just before the cell is drawn.
            You cannot change Base Style, Interior, or Cell Type at this time however.
            See <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> for changing
            interior or other style formattings.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.TargetBounds">
            <summary>
            Gets Cell boundaries including borders and margins.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.PerformLayout(System.Int32,System.Int32)"/> in order to calculate client
            and text rectangles without borders and margins.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.ClipBounds">
            <summary>
            Gets the visible cell area excluding cell parts that are scrolled out of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellBackgroundEventArgs.IsClipped">
            <summary>
            Gets a value indicating whether the graphics canvas already clips the drawing contents.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event.
            </summary>
            <remarks>
            GridPrepareViewStyleInfoEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event to allow custom formatting of
            a cell by changing its style object. Set the Cancel property true if you want to avoid calling
            the associated cell renderer's object <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)"/>
            method.<para/>
            Changes made to the style object will not be saved in the grid nor cached. This event
            is called every time a portion of the grid is repainted and the specified cell belongs
            to the invalidated region of the window that needs to be redrawn.<para/>
            Changes to the style object done at this time will also not be reflected when accessing
            cells though the models indexer. See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>.<para/>
            <note type="note">Do not change base style or cell type at this time.</note>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetViewStyleInfo(System.Int32,System.Int32)"/>
            <example>
            The following example shows how you can customize the behavior of the current cell
            and highlight the whole row instead of just the current cell itself.
            <code lang="C#">
                    /// Current cell will be moving from one position to another.
                    protected override void OnCurrentCellMoving(GridCurrentCellMovingEventArgs e)
                    {
                        e.Options |= GridSetCurrentCellOptions.BeginEndUpdate;
                    }
             <para/>
                    /// Highlight the current row.
                    protected override void OnPrepareViewStyleInfo(GridPrepareViewStyleInfoEventArgs e)
                    {
                        if (e.RowIndex &gt; this.Model.Rows.HeaderCount &amp;&amp; e.ColIndex &gt; this.Model.Cols.HeaderCount
                            &amp;&amp; CurrentCell.HasCurrentCellAt(e.RowIndex))
                        {
                            e.Style.Interior = new BrushInfo(SystemColors.Highlight);
                            e.Style.TextColor = SystemColors.HighlightText;
                            e.Style.Font.Bold = true;
                        }
                        base.OnPrepareViewStyleInfo(e);
                    }
             <para/>
                    /// Refresh the whole row for the old position of the current cell when it is moved to
                    /// a new row or when current cell is deactivated stand-alone.
                    protected override void OnCurrentCellDeactivated(GridCurrentCellDeactivatedEventArgs e)
                    {
                        // Check if Deactivate is called stand-alone or called from MoveTo and row is moving
                        if (!CurrentCell.IsInMoveTo || CurrentCell.MoveToRowIndex != CurrentCell.MoveFromRowIndex)
                        {
                            RefreshRange(GridRangeInfo.Row(e.RowIndex), GridRangeOptions.MergeAllSpannedCells);
                        }
                        base.OnCurrentCellDeactivated(e);
                    }
             <para/>
                    /// Refresh the whole row for the new current cell position when the current cell is moved
                    /// to a new row or when current cell is activated stand-alone (and there was no activated current cell).
                    protected override void OnCurrentCellActivated(EventArgs e)
                    {
                        // Check if Activate is called stand-alone or called from MoveTo and row is moving
                        base.OnCurrentCellActivated(e);
                        if (!CurrentCell.IsInMoveTo || CurrentCell.MoveToRowIndex != CurrentCell.MoveFromRowIndex
                            || !CurrentCell.MoveFromActiveState)
                        {
                            RefreshRange(GridRangeInfo.Row(CurrentCell.RowIndex), GridRangeOptions.MergeAllSpannedCells);
                        }
                    }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The style object that contains all formatting information of the cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs.Style">
            <summary>
            Gets the style object that contains all formatting information of the cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/> event.
            </summary>
            <remarks>
            GridQueryCanOleDragRangeEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/> event to determine whether
            a specified range can serve as an OLE drag source. The event is fired when the user
            hovers the mouse over the edge of a selected range.
            <para/>
            You can disallow the specified range to be used as OLE Data Source when
            you assign true to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="range">The range to be used as OLE data source.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCanOleDragRangeEventArgs.Range">
            <summary>
            Gets the range to be used as OLE data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> event.
            </summary>
            <remarks>
            GridResizingRowsEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> event when the user is about to resize
            a row or is in the process of resizing a row. 
            <para/>
            You can disallow the resizing of specific rows at run-time when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can also limit resizing rows to a given maximum value by changing the <see cref="P:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.Height"/>
            value.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32,Syncfusion.Windows.Forms.Grid.GridResizeCellsReason,Syncfusion.Windows.Forms.Grid.GridBorder,Syncfusion.Windows.Forms.Grid.GridBorder,System.Drawing.Point)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rows">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with rows affected by the current user action.</param>
            <param name="height">The new height of the rows.</param>
            <param name="reason">The originating reason for this event.</param>
            <param name="sizeIndicatorBorder">The appearance of the line that indicates the new size.</param>
            <param name="boundsIndicatorBorder">The appearance of the line that indicates the old boundaries.</param>
            <param name="point">The mouse location.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.Rows">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with rows affected by the current user action.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.Height">
            <summary>
            Gets or sets the new height of the rows.  
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.Reason">
            <summary>
            Gets the originating reason for this event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.SizeIndicatorBorder">
            <summary>
            Gets or sets the appearance of the line that indicates the new size.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.BoundsIndicatorBorder">
            <summary>
            Gets or sets the appearance of the line that indicates the old boundaries.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingRowsEventArgs.Point">
            <summary>
            Gets the mouse location.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/> event.
            </summary>
            <remarks>
            GridResizingColumnsEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/> event when the user is about to resize
            a column or is in the process of resizing a column. 
            <para/>
            You can disallow the resizing of specific columns at run-time when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can also limit resizing columns to a given maximum value by changing the <see cref="P:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.Width"/>
            value.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32,Syncfusion.Windows.Forms.Grid.GridResizeCellsReason,Syncfusion.Windows.Forms.Grid.GridBorder,Syncfusion.Windows.Forms.Grid.GridBorder,System.Drawing.Point)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="columns">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with rows affected by the current user action.</param>
            <param name="width">The new width of the columns.</param>
            <param name="reason">The originating reason for this event.</param>
            <param name="sizeIndicatorBorder">The appearance of the line that indicates the new size.</param>
            <param name="boundsIndicatorBorder">The appearance of the line that indicates the old boundaries.</param>
            <param name="point">The mouse location.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.Columns">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with rows affected by the current user action.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.Width">
            <summary>
            Gets or sets the new width of the columns.  
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.Reason">
            <summary>
            Gets the originating reason for this event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.SizeIndicatorBorder">
            <summary>
            Gets or sets the appearance of the line that indicates the new size.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.BoundsIndicatorBorder">
            <summary>
            Gets or sets the appearance of the line that indicates the old boundaries.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs.Point">
            <summary>
            Gets the mouse location.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/> or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventHandler"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/> or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> event.
            </summary>
            <remarks>
            GridSelectionDragEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> event 
            when the user is about to drag
            or is in the process of dragging a selected range of columns or rows. 
            <para/>
            You can disallow the dragging of specific columns or rows at run-time when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can also modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs.Destination"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridDragSelectionReason)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="range">The range of columns or rows to be dragged.</param>
            <param name="destination">The suggested new position of the dragged rows and columns.</param>
            <param name="reason">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason"/> that describes the current state of the user action.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs.Range">
            <summary>
            Gets the range of columns or rows to be dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs.Destination">
            <summary>
            Gets or sets the suggested new position of the dragged rows and columns.
            </summary>
            <remarks>
            This value is only set when <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason"/> is <see cref="F:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason.MouseMove"/>
            or <see cref="F:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason.MouseUp"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs.Reason">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason"/> that describes the current state of the user action.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventHandler">
            <summary>
            Represents a method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/> event
            when the user clicks a pushbutton cell.
            </summary>
            <remarks>
            GridCellPushButtonClickEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/> event 
            when the user is clicks a pushbutton cell using a mouse click
            or keyboard.
            <para/>
            You can disallow the dragging of specific columns or rows at run-time when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can also modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs.Destination"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PushButtonClick"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaisePushButtonClick(System.Int32,System.Int32)"/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs">
            <summary>
            Holds row and column coordinates for events associated with a specific cell.
            </summary>
            <remarks>
            Directly used by <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ActiveTextChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.Clicked"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.HoveringChanged"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.MouseDownChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.PushedChanged"/>.
            <para/>
            Used also as base class for several other events related to a specific cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellEventArgs.ColIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellPushButtonClickEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest"/> event.
            </summary>
            <remarks>
            GridCellHitTestEventArgs is a custom event argument class used by the 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest"/> event
            when the grid performs hit testing of a mouse point inside a cell.
            <para/>
            The event method is called before the cell renderer does its own hit-testing. If you want to 
            provide your own hit-test value for the cell, you should assign the resulting value to <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs.Result"/>
            and set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellHitTest"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs.#ctor(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController,Syncfusion.Windows.Forms.Grid.GridCellButton,System.Int32)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="mouseEventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> originating
            this event.</param>
            <param name="controller">The current controller that requested to handle this mouse event.</param>
            <param name="cellButton">The cell button that is the target of the current mouse operation or NULL if the cell itself 
            is the target.</param>
            <param name="result">Non-zero hit context value if you request to handle the mouse event; zero if you vote 
            not to handle the mouse event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs.MouseEventArgs">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.MouseEventArgs"/> originating
            this event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs.Controller">
            <summary>
            Gets the current controller that requested to handle this mouse event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs.CellButton">
            <summary>
            Gets the cell button that is the target of the current mouse operation or NULL if the cell itself 
            is the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHitTestEventArgs.Result">
            <summary>
            Gets or sets the non-zero hit context value if you request to handle the mouse event; zero if you vote 
            not to handle the mouse event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventHandler">
            <summary>
            Represents a method that handles cell-related mouse events such as <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter"/> and
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs">
            <summary>
            Provides data about cancelable cell-related mouse events such as <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter"/> and
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave"/>.
            </summary>
            <remarks>
            GridCellMouseEventArgs is a custom event argument class used by the 
            cell-related mouse events such as <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter"/> and
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverLeave"/>
            when the grid performs mouse operation for a specific cell.
            <para/>
            The event method is called before the cell renderer processes the mouse event. If you want to 
            customize the mouse operation and suppress the cell's default mouse processing, you should set 
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellMouseEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellMouseHoverEnter"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellButton,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="cellButton">The cell button that is the target of the current mouse operation or NULL if the cell itself 
            is the target.</param>
            <param name="mouseEventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> originating
            this event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs.CellButton">
            <summary>
            Gets the cell button that is the target of the current mouse operation or NULL if the cell itself 
            is the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellMouseEventArgs.MouseEventArgs">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.MouseEventArgs"/> originating
            this event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellCursorEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor"/> event.
            </summary>
            <remarks>
            GridCellCursorEventArgs is a custom event argument class used by the 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor"/> event
            when the grid queries which cursor to be displayed for a cell.
            <para/>
            The event method is called before the cell renderer returns its cursor. If you want to 
            provide your own cursor for the cell, you should assign the cursor object to <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs.Cursor"/>
            and set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellCursorEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellCursor"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellButton,System.Windows.Forms.Cursor)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="cellButton">The cell button that is the target of the current mouse operation or NULL if the cell itself 
            is the target.</param>
            <param name="cursor">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs.Cursor"/> to be displayed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs.CellButton">
            <summary>
            Gets the cell button that is the target of the current mouse operation or null if the cell itself 
            is the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs.Cursor">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellCursorEventArgs.Cursor"/> to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellClickEventHandler">
            <summary>
            Represents a method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> events.
            </summary>
            <remarks>
            GridQueryCellModelEventArgs is a custom event argument class used by the 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CheckBoxClick"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellClick"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellDoubleClick"/> events
            when the user clicks inside a cell.
            <para/>
            The event method is called before the cell renderer processes the event (and toggles
            the check box or positions the caret, sets the current cell, etc.). If you want to 
            abort the current operation at run-time you should assign True to 
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.
            <para/>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellClickEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCheckBoxClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaiseCellClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,System.Boolean)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RaisePushButtonClick(System.Int32,System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs.#ctor(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,System.Boolean)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> originating
            this event.</param>
            <param name="overImage">Indicates if the mouse was over a image (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>) 
            in static cell when the mouse was released.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs.MouseEventArgs">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.MouseEventArgs"/> originating
            this event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs.IsOverImage">
            <summary>
            Gets a value indicating whether the mouse was over an image (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>) 
            in a static cell when the mouse was released. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked"/>
            event that is raised when the user clicks on a cell button element inside a cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked"/> event
            when the user clicks on a cell button element inside a cell.
            </summary>
            <remarks>
            GridCellButtonClickedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked"/> event
            when the user clicks on a cell button element inside a cell.
            <para/>
            The event method is called before the cell renderer processes the event (and 
            moves the current cell, drops down a list box, etc.). If you want to
            abort the current operation at run-time you should assign True to
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.
            <para/>
            Otherwise the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnButtonClicked(System.Int32,System.Int32,System.Int32)"/> method of the
            associated cell renderer is called which will then trigger any actions related
            to the button.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CellButtonClicked"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnButtonClicked(System.Int32,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellButton)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="buttonIndex">The index of the clicked cell button element.</param>
            <param name="button">A reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> for the clicked button.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs.ButtonIndex">
            <summary>
            Gets the index of the clicked cell button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs.Button">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> for the clicked button.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs">
            <summary>
            Used by <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/> events.
            </summary>
            <summary>
            Provides data about the  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/> events.
            </summary>
            <remarks>
            GridRowColIndexChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/> events.
            <para/>
            These events are raised after the grid is scrolled. 
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if the grid control
            was successfully scrolled to the new position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="savedRowColIndex">The saved <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/> value.</param>
            <param name="success">Indicates if operation was ended successfully or was aborted.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangedEventArgs.SavedValue">
            <summary>
            Gets the saved <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/> value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanged"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs">
            <summary>
            Used by <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging"/> events.
            </summary>
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging"/> events.
            </summary>
            <remarks>
            GridRowColIndexChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging"/> events.
            <para/>
            These events are raised just before the grid is scrolled. 
            <para/>
            You can disallow the scrolling of the grid at run-time when
            you assign true to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowColIndex">The new <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/> value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs.Value">
            <summary>
            Gets the new <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowIndex"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/> value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventHandler">
            <summary>
            This is called from the current cell control's ProcessKeyMessage method and gives
            you a chance to modify the default behavior of this method. Be aware that this 
            is a very implementation-specific method and you should only handle this event
            if KeyDown, KeyUp, CurrentCellKeyDown, or CurrentCellKeyUp events are 
            not good enough. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs">
            <summary>
            This is called from the current cell control's ProcessKeyMessage method and gives
            you a chance to modify the default behavior of this method. Be aware that this 
            is a very implementation-specific method and you should only handle this event
            if KeyDown, KeyUp, CurrentCellKeyDown, or CurrentCellKeyUp events are 
            not good enough. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Message,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructs a GridCurrentCellControlKeyMessageEventArgs.
            </summary>
            <param name="control">The active control with focus.</param>
            <param name="msg">The original windows message.</param>
            <param name="scrollInView">Indicates if cell should be scrolled into view.</param>
            <param name="callProcessKeyPreview">Indicates if ProcessKeyPreview should be called.
            This will trigger Grid.OnKeyDown and Grid.OnKeyUp events. CurrentCellKeyDown and CurrentCellKeyPress events might also 
            be triggered from Grid's ProcessKeyPreview method. </param>
            <param name="callBaseProcessKeyMessage">Indicates if base class version of ProcessKeyMessage should be called. This flag will be ignored if callProcessKeyPreview is True.</param>
            <param name="result">Returns value for ProcessKeyMessage when you set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True.
            Otherwise this value is ignored.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs.Control">
            <summary>
            Gets the active control with focus (Read-only).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs.Msg">
            <summary>
            Gets the original windows message (Read-only).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs.ScrollInView">
            <summary>
            Gets or sets a value indicating whether cell should be scrolled into view.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs.CallProcessKeyPreview">
            <summary>
            Gets or sets a value indicating whether the flag that indicates if ProcessKeyPreview should be called.
            This will trigger Grid.OnKeyDown and Grid.OnKeyUp events. CurrentCellKeyDown, and CurrentCellKeyPress events might also 
            be triggered from Grid's ProcessKeyPreview method. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs.CallBaseProcessKeyMessage">
            <summary>
            Gets or sets a value indicating whether the flag that indicates if base class version of ProcessKeyMessage should be called.
            This flag will be ignored if callProcessKeyPreview is True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellControlKeyMessageEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether return value for ProcessKeyMessage when you set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to true.
            Otherwise this value is ignored.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MoveCurrentCellDirection"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs">
            <summary>
            Holds data for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.MoveCurrentCellDirection"/> which lets you customize
            how the current cell is moved when the user navigates through the grid with arrow keys.
            </summary>
            <remarks>
            Used by <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/>.
            <para/>
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> occurs before the the current cell is moved into a specific direction. Normally, cells that are not
            marked as enabled with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> will be skipped but you can hook into this
            mechanism by implementing a event handler for this event.
            <para/>
            If you want to customize the behavior, manually call CurrentCell.MoveTo from within the
            event handler and set e.Handled = True;
            </remarks>
             <para/>
            <example>The following example implements wrapping the current cell to the next row at the end of a row:
            <code lang="C#">
             <para/>
                    private void gridControl1_MoveCurrentCellDirection(object sender, GridMoveCurrentCellDirectionEventArgs e)
                    {
                        GridControlBase grid = sender as GridControlBase;
                        GridModel gridModel = grid.Model;
                        int row = e.RowIndex;
                        int col = e.ColIndex;
                        switch (e.Direction)
                        {
                            case GridDirectionType.Right:
                            {
                                col++;
                                if (col &gt; gridModel.ColCount)
                                {
                                    row++;
                                    col = grid.LeftColIndex;
                                }
             <para/>
                                while (row &lt; gridModel.RowCount)
                                {
                                    using (GridStyleInfo style = grid.GetViewStyleInfo(row, col))
                                    {
                                        if (style.Enabled)
                                        {
                                            e.Result = grid.CurrentCell.MoveTo(row, col);
                                            e.Handled = true;
                                            return;
                                        }
             <para/>
                                        col++;
                                        if (col &gt; gridModel.ColCount)
                                        {
                                            row++;
                                            col = grid.LeftColIndex;
                                        }
                                    }
                                }
                                e.Handled = true;
                                e.Result = false;
                                break;
                            }
                            case GridDirectionType.Left:
                            {
                                col--;
                                if (col == gridModel.Cols.HeaderCount)
                                {
                                    row--;
                                    col = gridModel.ColCount;
                                }
             <para/>
                                while (row &gt; gridModel.Rows.HeaderCount)
                                {
                                    using (GridStyleInfo style = grid.GetViewStyleInfo(row, col))
                                    {
                                        if (style.Enabled)
                                        {
                                            e.Result = grid.CurrentCell.MoveTo(row, col);
                                            e.Handled = true;
                                            return;
                                        }
             <para/>
                                        col--;
                                        if (col == gridModel.Cols.HeaderCount)
                                        {
                                            row--;
                                            col = gridModel.ColCount;
                                        }
                                    }
                                }
                                e.Handled = true;
                                e.Result = false;
                                break;
                            }
                        }
             <para/>
                    }
                }
             <para/>
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs">
            <summary>
            Holds and lets you customize row and column coordinates for 
            the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> event.
            </summary>
            <remarks>
            Used by <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/>.
            <para/>
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> occurs before the the current cell is moved into a specific direction. Normally, cells that are not
            marked as enabled with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> will be skipped but you can hook into this
            mechanism by implementing a event handler for this event.
            <para/>
            See the SampleGrid class in the gridpad sample for an example.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32,System.Int32)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="direction">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs.Direction">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs.ColIndex">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether if current cell can be moved in a specified direction. The resulting value. Set this to True if current cell can be moved in a specified direction;
            False if not. Don't forget to also set Handled to True.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes the object.
            </summary>
            <param name="direction">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.</param>
            <param name="numCells">The number of cells to move.</param>
            <param name="extendSelection">Extends the current selection.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs.NumCells">
            <summary>
            Gets the number of cells to move.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMoveCurrentCellDirectionEventArgs.ExtendSelection">
            <summary>
            Gets a value indicating whether to extend the current selection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryNextCurrentCellPositionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanging"/> 
            and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanging"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs">
            <summary>
            Holds the event args for the
             <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanging"/> 
            and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanging"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes the object.
            </summary>
            <param name="scrollPosition">The new scroll position.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangingEventArgs.ScrollPosition">
            <summary>
            Gets or sets the new scroll position.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanged"/> 
            and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventArgs">
            <summary>
            Holds the event args for the
             <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollPixelPosChanged"/> 
            and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollPixelPosChanged"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollPositionChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes the object.
            </summary>
            <param name="success">Indicates if operation was successful.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.ActivateToolTip"/> 
             event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs">
            <summary>
            Holds the event args for the
            and lets you customize row and column coordinates for <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.ActivateToolTip"/> 
            event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes the object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs.ColIndex">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs.Style">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellDisplayText"/> 
             event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs">
            <summary>
            Holds the event args for the
             <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellDisplayText"/> 
            event
            which occurs for every cell before the grid draws the display text for the specified cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.#ctor(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Constructor for GridDrawCellDisplayTextEventArgs.
            </summary>
            <param name="g">Points to the device context.</param>
            <param name="displayText">The display text.</param>
            <param name="textRectangle">Specifies the text rectangle. It is the cell rectangle without buttons, borders, or text margins.</param>
            <param name="style">A reference to the style object of the cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.Graphics">
            <summary>
            Gets or sets points to the device context.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.DisplayText">
            <summary>
            Gets or sets the display text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.TextRectangle">
            <summary>
            Gets or sets the text rectangle. It is the cell rectangle without buttons, borders, or text margins.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.Style">
            <summary>
            Gets or sets a reference to the style object of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.RowIndex">
            <summary>
            Gets the row index 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.ColIndex">
            <summary>
            Gets the column index 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.ClipBounds">
            <summary>
            Gets the clipping bounds
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCellDisplayTextEventArgs.UseTextRenderer">
            <summary>
            Gets or sets a value indicating whether to use TextRenderer for header rendering or use default graphics for renderering.
            set "True" to use TextRenderer, else default rendering will take place. TextRenderer can be used to avoid TextSpacing issue if you face any 
            in the header text.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.FillRectangleHook"/> 
             event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs">
            <summary>
            Holds the event args for the
             <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.FillRectangleHook"/> 
            event
            which occurs before BrushPaint.FillRectangle is called to
            fill the interior of a rectangle using <see cref="T:Syncfusion.Drawing.BrushInfo"/> information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Initializes the object
            </summary>
            <param name="graphics">A <see cref="P:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs.Graphics"/> context.</param>
            <param name="bounds"><see cref="T:System.Drawing.RectangleF"/> structure that represents the rectangle to fill. </param>
            <param name="brush"><see cref="T:Syncfusion.Drawing.BrushInfo"/> object that determines the characteristics of the fill.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs.Graphics">
            <summary>
            Gets or sets a <see cref="P:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs.Graphics"/> context.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs.Bounds">
            <summary>
            Gets or sets <see cref="T:System.Drawing.RectangleF"/> structure that represents the rectangle to fill. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs.Brush">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Drawing.BrushInfo"/> object that determines the characteristics of the fill.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFillRectangleHookEventArgs.ClipBounds">
            <summary>
            Gets the clipping bounds
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs">
            <summary>
            Holds and lets you customize row and column coordinates for 
            the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/> event.
            </summary>
            <remarks>
            Used by <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/>.
            <para/>
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/> occurs before a cell is scrolled into view by a ScrollCellInView call. Normally, the current
            cell is checked if it is inside the visible grid area when certain user events occur such as when a key is pressed or when the grid got focus.
            The event is called to check whether the specified cell is in view. If the cell is not in view, the grid will scroll it into view.
            You can hook into this
            mechanism by implementing a event handler for this event.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="reason">The reason for scrolling cell into view.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs.Reason">
            <summary>
            Gets or sets the reason for scrolling cell into view.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs.ColIndex">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryScrollCellInViewEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether the cell needs to be scrolled into view.  The resulting value. Set this to True if cell needs to be scrolled into view;
            False if not. Don't forget to also set Handled to true.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCreateCellTextBoxEventHandler">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCreateCellTextBoxEventArgs">
            <internalonly/>
            <summary>
            Provides event data for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCreateCellTextBox"/> event which
            controls the kind of textbox control that is created for TextBox cells. 
            In general the original text box behaves better than the richtext box with Hebrew and arabic languages.
            By default the grid uses the RichTextBox control for cell editing, but if you set
            GridModelOptions.UseRightToLeftCompatibleTextBox or if you handle this event you can plugin a 
            different textbox.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryCreateCellTextBoxEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCreateCellTextBoxEventArgs.Renderer">
            <internalonly/>
            <summary>Gets or sets the TextBoxCellRenderer. Internal only.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCreateCellTextBoxEventArgs.TextBox">
            <internalonly/>
            <summary>Gets or sets the Textbox. Internal only.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellErrorMessage"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs">
            <summary>
            Provides event data for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellErrorMessage"/> event which
            notifies you
            that the current cell validation failed and a message is displayed. You can set e.Cancel = true
            for the event and display your own custom messagebox.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs.#ctor(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Constructor for GridCurrentCellErrorMessageEventArgs.
            </summary>
            <param name="owner">Parent window.</param>
            <param name="text">Error message.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs.Owner">
            <summary>
            Gets or sets TextBoxCellRenderer the owner that should be passed as argument to the MessageBox.Show call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellErrorMessageEventArgs.Text">
            <summary>
            Gets or sets TextBoxCellRenderer the suggested error text to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveDelegateHandler">
            <summary>
            Used by GridSelectCellsMouseController.
            </summary>
            <returns>returns boolean value</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCell">
            <summary>
            Manages the current cell for a grid. Provides methods for activating, deactivating, and
            moving the current cell.
            </summary>
            <remarks>
            Use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            class to get access to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCell"/> instance associated with a grid.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCell"/> class raises events in the associated grid to give you
            a chance to adjust the current cell's behavior at any stage.
            </remarks>
            <example>
            The following example shows how you can customize the behavior of the current cell
            and highlight the whole row of the current cell instead of just the current cell itself:
            <code lang="C#">
                    /// Current cell will be moving from one position to another.
                    protected override void OnCurrentCellMoving(GridCurrentCellMovingEventArgs e)
                    {
                        e.Options |= GridSetCurrentCellOptions.BeginEndUpdate;
                        // Instead of GridSetCurrentCellOptions.BeginEndUpdate we could also
                        // sandwich the call in a Begin/EndUpdate pair ourselves ...
                        //BeginUpdate(BeginUpdateOptions.InvalidateAndScroll);
                    }
            <para/>
                    /// Completes a current cell's MoveTo operation indicating success.
                    protected override void OnCurrentCellMoved(GridCurrentCellMovedEventArgs e)
                    {
                        base.OnCurrentCellMoved(e);
                        //EndUpdate();
                    }
            <para/>
                    /// Completes a current cell's MoveTo operation indicating failure.
                    protected override void OnCurrentCellMoveFailed(GridCurrentCellMoveFailedEventArgs e)
                    {
                        base.OnCurrentCellMoveFailed(e);
                        //EndUpdate();
                    }
            <para/>
                    /// Highlight the current row.
                    protected override void OnPrepareViewStyleInfo(GridPrepareViewStyleInfoEventArgs e)
                    {
                        if (e.RowIndex &gt; this.Model.Rows.HeaderCount &amp;&amp; e.ColIndex &gt; this.Model.Cols.HeaderCount
                            &amp;&amp; CurrentCell.HasCurrentCellAt(e.RowIndex))
                        {
                            e.Style.Interior = new BrushInfo(SystemColors.Highlight);
                            e.Style.TextColor = SystemColors.HighlightText;
                            e.Style.Font.Bold = true;
                        }
                        base.OnPrepareViewStyleInfo(e);
                    }
            <para/>
                    /// Refresh the whole row for the old position of the current cell when it is moved to
                    /// a new row or when current cell is deactivated stand-alone.
                    protected override void OnCurrentCellDeactivated(GridCurrentCellDeactivatedEventArgs e)
                    {
                        // Check if Deactivate is called stand-alone or called from MoveTo and row is moving.
                        if (!CurrentCell.IsInMoveTo || CurrentCell.MoveToRowIndex != CurrentCell.MoveFromRowIndex)
                        {
                            RefreshRange(GridRangeInfo.Row(e.RowIndex), GridRangeOptions.MergeAllSpannedCells);
                        }
                        base.OnCurrentCellDeactivated(e);
                    }
            <para/>
                    /// Refresh the whole row for the new current cell position when the current cell is moved
                    /// to a new row or when current cell is activated stand-alone (and there was no activate current cell).
                    protected override void OnCurrentCellActivated(EventArgs e)
                    {
                        // Check if Activate is called stand-alone or called from MoveTo and row is moving
                        base.OnCurrentCellActivated(e);
                        if (!CurrentCell.IsInMoveTo || CurrentCell.MoveToRowIndex != CurrentCell.MoveFromRowIndex
                            || !CurrentCell.MoveFromActiveState)
                        {
                            RefreshRange(GridRangeInfo.Row(CurrentCell.RowIndex), GridRangeOptions.MergeAllSpannedCells);
                        }
                    }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentCell.defaultUpdateFlag">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes the object, attaches it to a grid, and subscribes to events.
            </summary>
            <param name="grid">The parent grid for this object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Lock">
            <summary>
            Lets you temporarily "lock" the current cell. While a current cell
            is locked, any attempts to move, deactivate, save, or activate the current
            cell will fail.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Unlock">
            <summary>
            Unlocks a temporarily "locked" current cell with <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Lock"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Invalidate">
            <summary>
            Invalidates the grid window area where the current cell is positioned.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveDown">
            <overload>
            Moves the current cell down and optionally selects cells.
            </overload>
            <summary>
            Moves the current cell down to the next enabled row.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveDown(System.Int32)">
            <summary>
            Moves the current cell down to the next enabled row after skipping a specified number of rows.
            </summary>
            <param name="num">The number of rows to move.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveDown(System.Int32,System.Boolean)">
            <summary>
            Moves the current cell down to the next enabled row after skipping a specified number of rows and selects the
            cells.
            </summary>
            <param name="num">The number of rows to move.</param>
            <param name="extendSelection">Extends the current selection.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveUp">
            <overload>
            Moves the current cell up and optionally selects cells.
            </overload>
            <summary>
            Moves the current cell up to the next enabled row.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveUp(System.Int32)">
            <summary>
            Moves the current cell up to the next enabled row after skipping a specified number of rows.
            </summary>
            <param name="num">The number of rows to move.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveUp(System.Int32,System.Boolean)">
            <summary>
            Moves the current cell up to the next enabled row after skipping a specified number of rows and selects the
            cells.
            </summary>
            <param name="num">The number of rows to move.</param>
            <param name="extendSelection">Extends the current selection.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveLeft">
            <overload>
            Moves the current cell left and optionally selects cells.
            </overload>
            <summary>
            Moves the current cell left to the next enabled column.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveLeft(System.Int32)">
            <summary>
            Moves the current cell left to the next enabled column after skipping a specified number of columns.
            </summary>
            <param name="num">The number of columns to move.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveLeft(System.Int32,System.Boolean)">
            <summary>
            Moves the current cell left to the next enabled column after skipping a specified number of columns and selects the
            cells.
            </summary>
            <param name="num">The number of columns to move.</param>
            <param name="extendSelection">Extends the current selection.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveRight">
            <overload>
            Moves the current cell right and optionally selects cells.
            </overload>
            <summary>
            Moves the current cell right to the next enabled column.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveRight(System.Int32)">
            <summary>
            Moves the current cell right to the next enabled column after skipping a specified number of columns.
            </summary>
            <param name="num">The number of columns to move.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveRight(System.Int32,System.Boolean)">
            <summary>
            Moves the current cell right to the next enabled column after skipping a specified number of columns and selects the
            cells.
            </summary>
            <param name="num">The number of columns to move.</param>
            <param name="extendSelection">Extends the current selection.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MovePageUp">
            <overload>
            Moves the current cell up one page and optionally selects cells.
            </overload>
            <summary>
            Moves the current cell up one page to the next enabled row.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MovePageUp(System.Boolean)">
            <summary>
            Moves the current cell up one page to the next enabled row.
            </summary>
            <param name="extendSelection">Extends the current selection.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MovePageDown">
            <overload>
            Moves the current cell down one page and optionally selects cells.
            </overload>
            <summary>
            Moves the current cell down one page to the next enabled row.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MovePageDown(System.Boolean)">
            <summary>
            Moves the current cell down one page to the next enabled row.
            </summary>
            <param name="extendSelection">Extends the current selection.</param>
            <genoverload/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentCell.isWrapCell">
            <overload>
            Moves the current cell in a given direction skipping a specified number of cells and
            optionally selecting the cells.
            </overload>
            <summary>
            Moves the current cell in a given direction skipping a specified number of cells and
            optionally selecting the cells.
            </summary>
            <param name="direction">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.</param>
            <param name="num">The number of cells to move.</param>
            <param name="extendSelection">Extends the current selection.</param>
            <param name="wrapCell">Indicates if grid should move to beginning of next row when at end of row or vice versa.</param>
            <returns>True if the current cell was moved to a new position; False otherwise (e.g. if current cell is at first row
            and you tried to move up).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Move(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32,System.Boolean)">
            <summary>
            Moves the current cell in a given direction skipping a specified number of cells and
            optionally selecting the cells.
            </summary>
            <param name="direction">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.</param>
            <param name="num">The number of cells to move.</param>
            <param name="extendSelection">Extends the current selection.</param>
            <returns>True if the current cell was moved to a new position; False otherwise (e.g. if current cell is at first row
            and you tried to move up).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.InternalMove(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Moves the current cell in a given direction skipping a specified number of cells and
            without selecting the cells. <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Move(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32,System.Boolean,System.Boolean)"/> for a method that
            also selects cells.
            </summary>
            <param name="direction">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.</param>
            <param name="num">The number of cells to move.</param>
            <param name="options">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions"/> that specifies the options for current cell movement.</param>
            <returns>True if this operation successfully completes.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.AdjustRowColIfCoveredCell(System.Int32@,System.Int32@)">
            <summary>
            Adjusts the row index and column index if the cell belongs to a covered range. In that case, the top
            left cell coordinates are returned.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)">
            <summary>
            Deactivates the current cell and confirms or rejects changes made to the current cell.
            </summary>
            <param name="discardChanges">True if changes can be discarded; False otherwise.</param>
            <returns>True if current cell can be deactivated; False otherwise.</returns>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> raises a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating"/> event. If the
            event handler set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> flag of the <see cref="T:System.ComponentModel.CancelEventArgs"/>
            object, the method will return.
            <para/>
            Next, it checks if the cell is modified and depending on the value of the discardChanges parameter, it tries to
            confirm changes by calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges"/> or discarding changes by calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RejectChanges"/>.
            Also, any open drop-down windows will be closed at this time.
            <para/>
            Above method calls will raise <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/> then
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidated"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/> events followed by a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellEditingComplete"/> event
            if the cell was in editing mode.
            <para/>
            After the changes have been saved or canceled, the cell area is invalidated and
            a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/> event is raised which completes this operation.<para/>
            If an exception occurred or if a event handler requested to cancel the operation, <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> will instead
            close the operation with a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivateFailed"/> event.
            <para/>
            This ensures that you will get guaranteed either a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivateFailed"/> event after a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating"/> event.
            <para/>
            When current cell has been deactivated, the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/> property will be false indicating the
            grid has no active current cell at this time.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.SetError(System.String)">
            <summary>
            Get or set the error message in the current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.EndEdit">
            <summary>
            Finished up editing mode for the current cell.
            </summary>
            <remarks>
            Close any open drop-down windows. <para/>
            If the current cell was modified, the method tries to
            confirm changes by calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges"/>. If the changes can not be confirmed
            an exception is shown with <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ErrorMessage"/> as exception text.
            <para/>
            If changes are confirmed, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellEditingComplete"/> event is raised.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges">
            <overload>
            Confirms any pending changes for the current cell.
            </overload>
            <summary>
            Confirms any pending changes for the current cell and closes any open drop-down windows.
            </summary>
            <returns>True if changes could be saved or if current cell was not modified; False if saving the changes
            failed.</returns>
            <remarks>
            If the current cell was modified, the method raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/> event
            and if the contents are valid the cell renderers <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnSaveChanges"/> are called to
            save the changes.<para/>
            After changes have been successfully confirmed to the grid, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellAcceptedChanges"/>
            event is raised.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges(System.Boolean)">
            <summary>
            Confirms any pending changes for the current cell.
            </summary>
            <param name="closeDropDown">Specifies where any open drop-down windows should be closed.</param>
            <returns>True if changes could be saved or if current cell was not modified; False if saving the changes
            failed.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.CancelEdit">
            <summary>
            Cancels editing for the current cell and discards any changes.
            </summary>
            <remarks>
            Close any open drop-down windows. <para/>
            If the current cell was modified, the method calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RejectChanges"/> which triggers a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/> event.
            <para/>
            After the cell renderer has been asked to stop editing, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellEditingComplete"/> event is raised.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RejectChanges">
            <summary>
            Discards any changes for the current cell.
            </summary>
            <remarks>
            Close any open drop-down windows. <para/>
            Calls the cell renderer's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnRejectChanges"/> method and resets
            the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsModified"/> flag. <para/>
            <para/>
            After the cell renderer has been asked to discard changes, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/>
            event is raised.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)">
            <overload>
            Activates the current cell at the specified position.
            </overload>
            <summary>
            Activates the current cell at the specified position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if activating the current cell was successful; False otherwise.</returns>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> raises a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> event. If the
            event handler set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> flag of the <see cref="T:System.ComponentModel.CancelEventArgs"/>
            object, the method will return. <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> gives you also the chance
            to modify the parameters of the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> function call. You can modify the row and column index and the
            options.<para/>
            <para/>
            Next, it calls the cell renderer's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnActivating(System.Int32,System.Int32)"/> before it stores internally
            the new row and column index and marks the cell as activated.<para/>
            Then it invalidates the screen area for the specified cell and calls the cell renderer's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnInitialize(System.Int32,System.Int32)"/>
            method.<para/>
            At last, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event is raised which completes this operation.<para/>
            If an exception occurred or if a event handler requested to cancel the operation, <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> will instead
            close up the operation with a  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> event.
            <para/>
            This ensures that you will get guaranteed either a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> event after a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> event.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Activates the current cell at the specified position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions"/> value that details options how to
            activate the current cell. You can specify if the associated control should get focus, if range
            selection should be ignored and more.</param>
            <returns>True if activating the current cell was successful; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit">
            <summary>
            Starts editing mode for the current cell.
            </summary>
            <remarks>
            You check <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsEditing"/> to query if the current cell is in editing mode.
            <para/>
            The method calls the cell renderer's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnBeginEdit"/> method and thereby
            requests that current cell sets shows and focus to an associated <see cref="T:System.Windows.Forms.Control"/>. The text box
            cell for example, will make its <see cref="T:System.Windows.Forms.TextBox"/> visible and set the focus.<para/>
            Also, the current cell will be scrolled into view.
            </remarks>
            <returns>
            True if current cell supports editing; False otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit(System.Boolean)">
            <overload>
            Starts editing mode for the current cell.
            </overload>
            <summary>
            Starts editing mode for the current cell and allows setting the focus to the cell editor.
            </summary>
            <param name="focusRenderer">Specifies if focus can be set to the cell editor.</param>
            <returns>True ifediting can proceed; False if it is aborted.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)">
            <overload>
            Moves the current cell to the specified position.
            </overload>
            <summary>
            Moves the current cell to the specified position and gives instruction about activation of the current cell. Changes may be discarded in the previous current cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions"/> value that details options how to
            activate the current cell. You can specify if the associated control should get focus, if range
            selection should be ignored and more.</param>
            <param name="discardChanges">True if changes can be discarded; False otherwise.</param>
            <returns>True if the current cell could be moved; False otherwise.</returns>
            <remarks>
            Moving the current cell is a two step process. In the first step, the grid deactivates the existing current cell, in
            the second step the grid activates the new current cell.
            <para/>
            All parameters that were specified in this method call will be saved. This allows event handler to have better
            background knowledge why certain events were raised.<para/>
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            You can find out about the current cell's position by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> properties of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            <para/>
            After saving parameter information <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> raises a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event.
            If the event handler set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> flag of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs"/>
            object, the method will return immediately. <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> gives you the chance
            to modify the parameters of the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> function call. You can modify the row and column index and the
            options.<para/>
            The next step is to deactivate the current cell. See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> for a detailed overview what events will
            get raised from <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>. <para/>
            After the cell has been deactivated, the current cell will be activated
            at the new position. See the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> method for information which events are raised. If the
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.NoActivate"/> option is specified no current cell will be activated.<para/>
            You can sandwich the deactivation and activation process with a BeginUpdate, EndUpdate call pair if you
            specify the <see cref="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.BeginEndUpdate"/> option.<para/>
            <para/>
            At last, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> event is raised which completes this operation.<para/>
            If an exception occurred or if an event handler requested to cancel the operation, <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> will instead
            close up the operation with a  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> event.
            <para/>
            This ensures that you will be guaranteed either a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> event after a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Moves the current cell to the specified position.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that holds new row and column index for the current cell; if it is <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/>
            only the current cell will be deactivated.</param>
            <returns>True if the current cell could be moved; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Moves the current cell to the specified area and gives instruction about activation of the current cell.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that holds new row and column index for the current cell; if it is <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/>
            only the current cell will be deactivated.</param>
            <param name="options">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions"/> value that details options how to
            activate the current cell. You can specify if the associated control should get focus, if range
            selection should be ignored and more.</param>
            <returns>True if the current cell could be moved; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)">
            <summary>
            Moves the current cell to the specified area and gives instruction about activation of the current cell. Changes may be discarded in the previous current cell.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that holds new row and column index for the current cell; if it is <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/>
            only the current cell will be deactivated.</param>
            <param name="options">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions"/> value that details options how to
            activate the current cell. You can specify if the associated control should get focus, if range
            selection should be ignored and more.</param>
            <param name="discardChanges">True if changes can be discarded; False otherwise.</param>
            <returns>True if the current cell could be moved; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.SetPositionNoActivate(System.Int32,System.Int32)">
            <summary>
            Sets internally the new position of a current cell, but does not activate it.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <remarks>
            Sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/> but <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/>
            will be False.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ResetCurrentCellWithoutDeactivate">
            <summary>
            Resets internally the current cell, but does not deactivate it.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/>
            will be False.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.SetCurrentCellNoActivate(System.Int32,System.Int32)">
            <summary>
            Sets internally the new position of a current cell, but does not activate it.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <remarks>
            Sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/>/. <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/>
            will be True afterwards.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32)">
            <summary>
            Moves the current cell to the specified position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if the current cell could be moved; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Moves the current cell to the specified area and gives instruction about activation of the current cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions"/> value that details options how to
            activate the current cell. You can specify if the associated control should get focus, if range
            selection should be ignored and more.</param>
            <returns>True if the current cell could be moved; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Refresh">
            <summary>
            Refreshes the current cell and forces it to repaint. If the current cell is not modified, this method will deactivate and reactivate current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Reactivate">
            <summary>
            Deactivates and reactivates the current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Validate">
            <summary>
            Validates the contents of the current cell. If contents are invalid or if an exception is thrown,
            a message is stored in <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ErrorMessage"/>.
            </summary>
            <remarks>
            Raises the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/> event and calls the renderer's
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnValidate"/> method. If contents are valid, <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidated"/>
            will be raised afterwards.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ResetError">
            <summary>
            Resets error information for the current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ToggleDropDown">
            <summary>
            Hides or shows the drop-down window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ShowDropDown">
            <summary>
            Shows the drop-down window.
            </summary>
            <remarks>
            Calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/> and afterwards the renderer's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnShowDropDown"/> method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.CloseDropDown(Syncfusion.Windows.Forms.PopupCloseType)">
            <summary>
            Closes the drop-down window.
            </summary>
            <param name="reason">The reason lets you specify if the popup is closed because your application
            is being deactivated or because the user clicked in the grid and changes in the current cell should be confirmed.</param>
            <remarks>
            Calls the renderer's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnCloseDropDown(Syncfusion.Windows.Forms.PopupCloseType)"/> method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ScrollInView">
            <summary>
            Scrolls the current cell into view.
            </summary>
            <returns>true if operation could be completed; false if there is no active current cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ScrollInView(Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason)">
            <summary>
            Scrolls the current cell into view.
            </summary>
            <returns>True if operation could be completed; False if there is no active current cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.DisplayWarningText(System.String)">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.SetIgnoreFocus(System.Boolean)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.SuspendEvents">
            <summary>
            Suspends raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ResumeEvents">
            <summary>
            Resumes raising events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.NotifyControlDoubleClick(System.Windows.Forms.Control)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.NotifyControlGotFocus(System.Windows.Forms.Control)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.NotifyControlLostFocus(System.Windows.Forms.Control)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.NotifyChanged">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.NotifyChanging">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value NotifyChanging</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.QueryNextEnabledCell(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32@,System.Int32@)">
            <summary>
            Determines the next enabled cell when current cell wants to move into a given direction. Cells that are not
            marked as enabled with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> will be skipped.
            </summary>
            <param name="direction">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> that specifies the direction of the current cell movement.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if an enabled cell was found; False otherwise.</returns>
            <remarks>
            This method will not raise the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> event. Instead
            you can call this method from your QueryNextMoveCell event handler to find out about the next
            enabled cell and then decide on further criteria if the suggested cell is good.
            <para/>
            You should call <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetNextCurrentCellPosition(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32@,System.Int32@)"/> instead if you want
            the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryNextCurrentCellPosition"/> event to be raised.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.GetCurrentCell(System.Int32@,System.Int32@)">
            <overload>
            Returns position of the current cell together with a boolean if the current cell is active or not.
            </overload>
            <summary>
            Returns position of the current cell together with a boolean if the current cell is active or not.
            </summary>
            <param name="rowIndex">The row index of the current cell.</param>
            <param name="colIndex">The column index of the current cell.</param>
            <returns>True if grid has active current cell; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.GetCurrentCell(System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Returns position of the current cell together with a boolean if the current cell is active or not.
            </summary>
            <param name="rowIndex">The row index of the current cell.</param>
            <param name="colIndex">The column index of the current cell.</param>
            <param name="bIgnorePrint">True if current cell should also be returned when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingMode"/> is True.</param>
            <returns>True if grid has active current cell; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCellAt(System.Int32)">
            <overload>
            Checks if the current cell is active at a specified position in the grid.
            </overload>
            <summary>
            Checks if the current cell is active and at the specific row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>True if current cell was found at row index; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCellAt(System.Int32,System.Int32)">
            <summary>
            Checks if the current cell is active and at the specific row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if current cell was found at row and column index; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCellAt(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Checks if the current cell is active and at the specific row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="bIgnorePrint">True if current cell should also be returned when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.PrintingMode"/> is True.</param>        
            <returns>True if current cell was found at row and column index; False otherwise.</returns>
            <genoverload/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.StaticDrawing">
            <internalonly/>
            <summary>Gets or sets a value indicating whether StaticDrawing. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.StaticRenderControl">
            <internalonly/>
            <summary>Gets or sets StaticRenderControl. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.InternalHide">
            <internalonly/>
            <summary>Gets or sets a value indicating whether InternalHide. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Info">
            <summary>
            Gets a string with debug information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ExternalMove">
            <summary>
            Gets or sets ExternalMove. Used by GridSelectCellsMouseController.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsLocked">
            <summary>
            Gets a value indicating whether the current cell's state is "locked". If the current cell
            is locked, any attempts to move, deactivate, save, or activate the current
            cell will fail.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RangeInfo">
            <summary>
            Gets or sets the row and column index of the current cell as a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.
            </summary>
            <remarks>
            Changing this property will trigger a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>. When the
            value is <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/>, the current cell will be deactivated.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsVisible">
            <summary>
            Gets a value indicating whether the current cell is shown in the current view. True if scrolled into view; False if outside current view.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RaiseExceptionIfNestedActiveOrDeactivate">
            <internalonly/>
            <summary>Gets or sets a value indicating whether RaiseException IfNested Active Or Deactivate. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ValidationErrorText">
            <summary>
            Gets or sets the custom error message to replace the default error message.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsError">
            <summary>
            Gets or sets the custom SetError message for validation of current cell.
            </summary>
            
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ErrorMessage">
            <summary>
            Gets or sets the error message with reason why deactivation or validation of current cell failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ShowErrorMessageBox">
            <summary>
            Shows or hides the Message box with the error message
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ShowErrorIcon">
            <summary>
            Shows or hides the error Icon in the current cell if the validation is failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Exception">
            <summary>
            Gets or sets the exception that causes failure of deactivation or validation of current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInBeginEdit">
            <summary>
            Gets a value indicating whether true when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/> was called; False after method returned.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveToDone">
            <summary>
            Gets a value indicating whether this will be set true when MoveTo is finishing and when CurrentCellMoved event is raise. IsInMoveTo is still true
            at that time, but you can check MoveToDone whether the operation has ended.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveFromActiveState">
            <summary>
            Gets a value indicating whether there was an activated current cell
            at the time that <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveToRowIndex">
            <summary>
            Gets the target row index of the current <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveToColIndex">
            <summary>
            Gets the target column index of the current <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveToOptions">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions"/> of the current <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveFromRowIndex">
            <summary>
            Gets the saved row index information about the previous position of the current cell
            at the time that <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveFromColIndex">
            <summary>
            Gets the saved column index information about the previous position of the current cell
            at the time that <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> is in progress. MoveTo saves information
            about the current cell state and its target cell so that events can more easily compare
            previous and new states of the current cell during <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> calls.
            </summary>
            <remarks>
            If stand-alone Activate and Deactivate calls were made (if these calls where initiated
            outside from MoveTo) you can't use any of these properties. But in that case,
            the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating"/>
            events supply sufficient information about the intended action and you can query
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/>, <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/>, and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/>
            for the current state.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell">
            <summary>
            Gets a value indicating whether the grid has an active current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ActivateOnGotFocus">
            <summary>
            Gets or sets a value indicating whether the current cell should be activated when the grid gets the focus. The grid
            will set this property when it loses focus so that it later knows if a current cell should
            be activated when it gets focus again.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsActive">
            <summary>
            Gets a value indicating whether the grid has an active current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsEditing">
            <summary>
            Gets a value indicating whether the current cell is in editing mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsValid">
            <summary>
            Gets or sets a value indicating whether success of the latest <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Validate"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsDroppedDown">
            <summary>
            Gets a value indicating whether the drop-down window of a current cell is dropped-down.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasControlFocus">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:System.Windows.Forms.Control"/> is displayed in the current cell and if it is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsModified">
            <summary>
            Gets or sets a value indicating whether there are pending changes in the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsChanging">
            <summary>
            Gets or sets a value indicating whether the current cell's <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanging"/> event
            is being handled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsSuspendEvents">
            <summary>
            Gets a value indicating whether raising events is temporarily disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Renderer">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInActivate">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> is in progress.
            </summary>
            <remarks>
            The <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> event gives information
            about the intended action and you can query
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/>
            for the current state. <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/> will be false
            at the time when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> is called.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInActivated">
            <internalonly/>
            <summary>Gets a value indicating whether IsInActivated. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInDeactivate">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> is in progress.
            </summary>
            <remarks>
            The <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivating"/> event gives information
            about the intended action and you can query
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.RowIndex"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ColIndex"/>
            for the current state. <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.HasCurrentCell"/> will be true
            at the time when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> is called.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInConfirmChanges">
            <internalonly/>
            <summary>Gets a value indicating whether IsInConfirmChanges. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInAcceptedChanges">
            <internalonly/>
            <summary>Gets a value indicating whether IsInAcceptedChanges. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInEndEdit">
            <internalonly/>
            <summary>Gets a value indicating whether IsInEndEdit. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInActiveOrDeactivate">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            is in progress.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellValidateStringEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellValidateStringEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellValidateStringEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString"/> event.
            </summary>
            <remarks>
            The GridCurrentCellValidateStringEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString"/> event that notifies you
            when the user types text into the current cell.<para/>
            To restrict user input into the current cell while entering text, you can set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            to True.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellValidateStringEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="text">The text that will be entered into the current cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellValidateStringEventArgs.Text">
            <summary>
            Gets the text that will be entered into the current cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText"/> event.
            </summary>
            <remarks>
            The GridCellInitializeControlTextEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellInitializeControlText"/> event that notifies you
            that the current cell is initialized with text to be displayed in the associated control, e.g. a text box control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.String)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="rowIndex"> The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style"> Style information.</param>
            <param name="cellValue">The cell value that is assigned to the cell renderer.</param>
            <param name="controlText">The text that should be displayed in the active cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs.ColIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs.Style">
            <summary>
            Gets Style information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs.CellValue">
            <summary>
            Gets the cell value that is assigned to the cell renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInitializeControlTextEventArgs.ControlText">
            <summary>
            Gets or sets the text that should be displayed in the active cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/> event.
            </summary>
            <remarks>
            The GridCurrentCellDeactivatedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/> event that notifies you
            that the current cell has been deactivated at the specified cell position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> event.
            </summary>
            <remarks>
            The GridCurrentCellActivateFailedEventArgs is a custom event argument class used by the
            GridCurrentCell.CurrentCellActivateFailed"/&gt; event that notifies you
            that the current cell could not be activated at the specified cell position.
            <para/>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ErrorMessage"/> may hold an error message
            why the operation failed.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivateFailedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventHandler">
            <summary>
            Represents a method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> event
            before the grid activates the specified cell as current cell.
            </summary>
            <remarks>
            You can disallow the activation of specific cells at run-time when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.ColIndex"/> to activate
            a different cell.
            <para/>
            You can determine if <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            was called stand-alone or as result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            call by checking the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/> property.
            <para/>
            Once the current cell has been activated, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event
            is raised or a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivateFailed"/> if activating the specified
            cell failed.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.IsInMoveTo"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.rowIndex">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.colIndex">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.options">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">The options specified for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            operation.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.Options">
            <summary>
            Gets or sets the options specified for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.ColIndex">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventHandler">
            <summary>
            Represents a method that handles the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event
            before the current cell is moved to a new position as a result from a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            method call.
            </summary>
            <remarks>
            The GridCurrentCellMovingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event when the current cell
            is about to be moved to a new position.
            You can disallow the activation of specific cells at run-time when
            you assign true to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.
            <para/>
            You can modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.RowIndex"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.ColIndex"/> to activate
            a different cell.
            <para/>
            You can also modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs.Options"/>.
            <para/>
            Once the current cell has been moved, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> event
            is raised or a <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> if moving to the specified
            target cell failed.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">The options specified for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            operation.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> event
            after the current cell was successfully moved to a new position.
            </summary>
            <remarks>
            GridCurrentCellMovedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/> event when the current cell
            has been successfully moved to a new position.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoved"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="options">The options specified for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            operation.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovedEventArgs.Options">
            <summary>
            Gets the options specified for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> event
            when the current cell fails to be moved to a new position.
            </summary>
            <remarks>
            GridCurrentCellMoveFailedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/> event when the current cell 
            fails to be moved to a new position.
            <para/>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> for a discussion about the
            order of events that you receive when the current cell is moved.
            <para/>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ErrorMessage"/> may hold an error message
            why the operation failed.
            </remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoveFailed"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="options">The options specified for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            operation.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs.Options">
            <summary>
            Gets or sets the options specified for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/>
            operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs.ColIndex">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCurrentCellBorder"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCurrentCellBorder"/> event when
            the grid draws a border around the current cell.
            </summary>
            <remarks>
            By default, the grid will draw a black rectangle around the current cell. If the grid does not
            have focus, <see cref="P:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs.GridFocused"/> is False and the grid will draw a dashed border.
            <para/>
            If you handle this event and implement your own drawing for the current cell border, you should
            set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs.#ctor(System.Int32,System.Int32,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridShowCurrentCellBorder)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="g"> The graphics context.</param>
            <param name="bounds">The bounds of the cell rectangle.</param>
            <param name="gridFocused">Indicates if grid has focus.</param>
            <param name="style">The style information for the current cell.</param>
            <param name="showBorder">The settings how and when the current cell border should be drawn.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs.Graphics">
            <summary>
            Gets the graphics context.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs.Bounds">
            <summary>
            Gets the bounds of the cell rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs.GridFocused">
            <summary>
            Gets a value indicating whether grid has focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs.Style">
            <summary>
            Gets the style information for the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDrawCurrentCellBorderEventArgs.ShowBorder">
            <summary>
            Gets the settings how and when the current cell border should be drawn.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowingDropDown"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellShowingDropDown"/> event when
            the grid drops-down the drop-down portion of the current cell.
            </summary>
            <remarks>
            The event will provide a suggested size of the drop-down control. You can change
            the default size in your event handler by changing the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs.Size"/>
            property.
            <para/>
            Please note however that some drop-down controls might override the suggested height with their own
            preferred height. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart"/> and <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxPart"/>
            methods both provide a <see cref="P:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxPart.DropDownRows"/> property that defines the
            number of visible rows. 
            <para/>
            To abort the drop-down operation, set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            If you need to get access to the cell renderer, you can use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Renderer"/>
            property of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object. The <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCell"/> object
            also holds style information and row and column index. See the cell renderer for properties to access
            the drop-down container and drop-down part.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs.#ctor(System.Drawing.Size)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="size">The suggested size for the drop-down control. You can change this
            size in your event handler.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs.Size">
            <summary>
            Gets or sets the suggested size for the drop-down control. You can change this
            size in your event handler.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPaintSelectCells">
            <internalonly/>
            <summary>
            Redraws the selected range of grid cells.    
            </summary>  
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridPaintSelectCells">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridPaintSelectCells.UpdateSelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridPaintSelectCells.PrepareClearSelection">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridPaintSelectCells.PrepareChangeSelection(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintSelectCells.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <internalonly/>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridPaintSelectCells"/> and associates it with a grid.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintSelectCells.UpdateSelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintSelectCells.PrepareClearSelection">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintSelectCells.PrepareChangeSelection(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPrintInfo">
            <summary>
            Holds temporary information related to printing. This class will change in future versions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_nPrintTopRow">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_nPrintLeftCol">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_awPageFirstCol">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_awPageFirstRow">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_nCurrentPageColIndex">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_nCurrentPageRowIndex">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_nPrintHandleRecordCount">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_bPrintPaintMsg">
            <summary>
            OnGridPrint will check m_bPrintPaintMsg and redraw the whole grid later.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridPrintInfo.m_bPrintCurSelOnly">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrintInfo.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScroll">
            <summary>
            GridScroll implements scrollbar logic for GridControlBase. See GridControlBase.HScrollBehavior and GridControlBase.VScrollBehavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridScroll.Info">
            <summary>
            Gets results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper">
            <summary>
            Use this class if you have an array of rows or column elements 
            and you want to be able to hide a range of rows or columns. The
            class uses binary trees to map from original to visible position
            and vice versa.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.#ctor">
            <summary>
            Constructs the class and initializes the internal tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.HideRange(System.Int32,System.Int32)">
            <summary>
            Hides a specified range of rows or columns
            </summary>
            <param name="from">The raw index for the first element></param>
            <param name="to">The raw index for the last element</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.ShowRange(System.Int32,System.Int32)">
            <summary>
            Shows a specified range of rows or columns
            </summary>
            <param name="from">The raw index for the first element></param>
            <param name="to">The raw index for the last element</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.GetOriginalPositionAtVisiblePosition(System.Int32)">
            <summary>
            Gets the raw index for a visible position
            </summary>
            <param name="pos">The visible position of the element.</param>
            <returns>The raw index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.GetVisiblePositionForOriginalPosition(System.Int32)">
            <summary>
            Gets the visible position for an element
            </summary>
            <param name="pos">The raw index of the element.</param>
            <returns>The visible position. If the element at the specified raw index is hidden, 
            the method returns the visible position of the previous element.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.IsColumnHidden(System.Int32)">
            <summary>
            Checks whether the column at the specified raw index is hidden.
            </summary>
            <param name="pos">The raw index of the element.</param>
            <returns>true if hidden; false otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.Count">
            <summary>
            Gets or sets the raw number of rows or columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.VisibleCount">
            <summary>
            Gets the actual visible number of rows or columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridScrollVisibleElementsMapper.Item(System.Int32)">
            <summary>
            Gets or sets whether the specified element is visible.
            </summary>
            <param name="pos">The raw index for the element</param>
            <returns>true if visible; false if hidden.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellSizeKind">
            <summary>
            Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellSizeKind.ActualSize">
            <summary>
            Get the whole rectangle of the cell including the parts that are
            above the visible scroll area when pixel scrolling is enabled and cells 
            are only partially visible.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellSizeKind.VisibleSize">
            <summary>
            Get only the visible rectangle of the cell excluding the parts that are
            above the visible scroll area when pixel scrolling is enabled and cells 
            are only partially visible.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridViewLayout">
            <summary>
            This class caches layout information about a grid control view. Whenever changes are made to the view
            or the grid is scrolled, all information in this class is refreshed.
            </summary>
            <remarks>
            You get access to this class with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ViewLayout"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridViewLayout"/> and associates it with a grid.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Lock">
            <summary>
            Prevent subsequent calls to <see cref="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Reset"/> method from clearing the layout information. Use this if
            you want to optimize Invalidate / Update calls.
            </summary>
            <example>
            Updates a single cell and avoids ViewLayout being reinitialized.
            <code lang="C#">
            this.gridControl1.ViewLayout.Lock();
            GridRangeInfo cell = GridRangeInfo.Cell(row, col);
            Rectangle bounds = gridControl1.RangeInfoToRectangle(cell);
            this.gridControl1.Invalidate(bounds);
            this.gridControl1.Update();
            this.gridControl1.ViewLayout.Unlock();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Unlock">
            <summary>
            Restores correct <see cref="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Reset"/> method behavior after a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Lock"/> was made. See <see cref="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Lock"/>
            for a C# example.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.Reset">
            <summary>
            Call this method when layout information needs to be refreshed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.InternalSetTopRow(System.Int32)">
            <exclude/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientCol(System.Drawing.Point,System.Boolean,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns a client column index for a given point.
            </overload>
            <summary>
            Returns a client column index for a given point.
            </summary>
            <param name="pt">The point in client coordinates.</param>
            <param name="fixBackHidden">True if you want to get the latest visible column and not the index of a hidden column.</param>\
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The client column index for the column under the specified point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientCol(System.Drawing.Point,System.Boolean)">
            <summary>
            Returns a client column index for a given point.
            </summary>
            <param name="pt">The point.</param>
            <param name="fixBackHidden">if set to <c>true</c> [fix back hidden].</param>
            <returns>Returns a client column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientCol(System.Drawing.Point,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns a client column index for a given point.
            </overload>
            <summary>
            Returns a client column index for a given point.
            </summary>
            <param name="pt">The point in client coordinates.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The client column index for the column under the specified point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientCol(System.Drawing.Point)">
            <summary>
            Returns a client column index for a given point.
            </summary>
            <param name="pt">The point.</param>
            <returns>returns a client column index for a given point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientRow(System.Drawing.Point,System.Boolean,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns a client row index for a given point.
            </overload>
            <summary>
            Returns a client row index for a given point.
            </summary>
            <param name="pt">The point in client coordinates.</param>
            <param name="fixBackHidden">True if you want to get the latest visible row and not the index of a hidden row.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The client row index for the row under the specified point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientRow(System.Drawing.Point,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns a client row index for a given point.
            </overload>
            <summary>
            Returns a client row index for a given point.
            </summary>
            <param name="pt">The point in client coordinates.</param>
            <returns>The client row index for the row under the specified point.</returns>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientRow(System.Drawing.Point,System.Boolean)">
            <summary>
            Returns a client row index for a given point.
            </summary>
            <param name="pt">The point.</param>
            <param name="fixBackHidden">if set to <c>true</c> [fix back hidden].</param>
            <returns>Returns a client row index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientRow(System.Drawing.Point)">
            <summary>
            Gets a client row index for a given point.
            </summary>
            <param name="pt">The point.</param>
            <returns>Returns client row index for a given point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RectangleToClientRowCol(System.Drawing.Rectangle,System.Int32@,System.Int32@,System.Int32@,System.Int32@,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns client row and column indexes under a window rectangle.
            </overload>
            <summary>
            Returns client row and column indexes under a window rectangle.
            </summary>
            <param name="rect">The window region for which your client row and columns should be determined.</param>
            <param name="topRow">A place holder where the upper client row index is returned.</param>
            <param name="leftCol">A place holder where the left (RTL: right) client column index is returned.</param>
            <param name="bottomRow">A place holder where the bottom client row index is returned.</param>
            <param name="rightCol">A place holder where the right (RTL: left) client column index is returned.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RectangleToClientRowCol(System.Drawing.Rectangle,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns client row and column indexes under a window rectangle.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientRowCol(System.Drawing.Point,System.Int32@,System.Int32@,System.Boolean,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns client row and column indexes under a window point.
            </overload>
            <summary>
            Returns client row and column indexes under a window point.
            </summary>
            <param name="point">The window point for which your client row and columns should be determined.</param>
            <param name="row">A place holder where the client row index is returned.</param>
            <param name="col">A place holder where the client column index is returned.</param>
            <param name="fixBackHidden">True if you want to get the latest visible row and not the index of a hidden row.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>     
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.PointToClientRowCol(System.Drawing.Point,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Returns client row and column indexes under a window point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RowIndexToVisibleClient(System.Int32)">
            <overload>
            Returns a visible client row index for a given absolute row index. If the row is above the
            top row, the client row index for the top row index is returned.
            </overload>
            <summary>
            Returns a visible client row index for a given absolute row index. If the row is above the
            top row, the client row index for the top row index is returned.
            </summary>
            <param name="row">The absolute row index.</param>
            <returns>The client row index in the current visible grid view area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.ColIndexToVisibleClient(System.Int32)">
            <summary>
            Returns a visible client column index for a given absolute column index. If the column is left of the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/>, the client column index for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/> is returned.
            </summary>
            <param name="col">The absolute column index.</param>
            <returns>The client column index in the current visible grid view area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RowIndexToVisibleClient(System.Int32,System.Boolean@)">
            <summary>
            Returns a visible client row index for a given absolute row index. If the row is above the
            top row, the client row index for the top row index is returned. If the row is below the
            last visible row, the client row index the last visible row index is returned.
            </summary>
            <param name="row">The absolute row index.</param>
            <param name="hidden">A place holder that is set to True if the row index is above the top row
            and not a frozen row.</param>
            <returns>The client row index in the current visible grid view area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.ColIndexToVisibleClient(System.Int32,System.Boolean@)">
            <summary>
            Returns a visible client column index for a given absolute column index. If the column is left of the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColIndex"/>, the client column index for the left column index is returned.
            If the column is to the right of the
            last visible column, the client column index the last visible column index is returned.
            </summary>
            <param name="col">The absolute column index.</param>
            <param name="hidden">A place holder that is set to True if the column index is left of the left column index
            and not a frozen column.</param>
            <returns>The client column index in the current visible grid view area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RectangleRightOfCol(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the control region right (RTL: left) of a absolute column index. The passed-in column is included in the rectangle.
            </overload>
            <summary>
            Returns the control region right (RTL: left) of a absolute column index. The passed-in column is included in the rectangle.
            </summary>
            <param name="col">The absolute column index.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The window region that is right of the specified column.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RectangleRightOfCol(System.Int32)">
            <summary>
            Returns the control region right (RTL: left) of an absolute column index.
            </summary>
            <param name="col">The col index.</param>
            <returns>returns the control region right (RTL: left) of an absolute column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RectangleBottomOfRow(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the control region below an absolute row index. The passed-in row is included in the rectangle.
            </overload>
            <summary>
            Returns the control region below an absolute row index. The passed-in row is included in the rectangle.
            </summary>
            <param name="row">The absolute row index.</param>
            <returns>The window region that is below the specified row.</returns>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RectangleBottomOfRow(System.Int32)">
            <summary>
            Returns the control region below an absolute row index.
            </summary>
            <param name="row">Row index.</param>
            <returns>Rectanlge region below the specified row index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RowColToPoint(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the location of a cell specified with absolute row and column index.
            </overload>
            <summary>
            Returns the location of a cell specified with absolute row and column index.
            </summary>
            <param name="row">The absolute row index of the cell.</param>
            <param name="col">The absolute column index of the cell.</param>
            <param name="sizeKind">Specifies how to handle the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The window point for the location (top-left corner) of the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RowColToPoint(System.Int32,System.Int32)">
            <summary>
            Returns the location of a cell specified with absolute row and column index.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The col index.</param>
            <returns>Returns the location of a cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.ClientRowColToPoint(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the location of a cell specified with client row and column index.
            </overload>
            <summary>
            Returns the location of a cell specified with client row and column index.
            </summary>
            <param name="row">The client row index of the cell.</param>
            <param name="col">The client column index of the cell.</param>
            <param name="sizeKind">Specifies how to handle the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The window point for the location (top-left corner) of the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.ClientRowColToPoint(System.Int32,System.Int32)">
            <summary>
            Returns the location of a cell specified with client row and column index.
            </summary>
            <param name="row">Row index.</param>
            <param name="col">Column index.</param>
            <returns>Returns the location of a cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RowColToPoint(System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the location of a cell specified with absolute row and column index.
            </overload>
            <summary>
            Returns the location of a cell specified with absolute row and column index.
            </summary>
            <param name="row">The absolute row index of the cell.</param>
            <param name="col">The absolute column index of the cell.</param>
            <param name="ignoreOutsideClientRectangle">Set this True if the grid should only return points within the grid area; 
            False if the method should calculate cells that are below or right of the visible area.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The window point for the location (top-left corner / RTL: top-right) of the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RowColToPoint(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the location of a cell specified with absolute row and column index.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The col index.</param>
            <param name="ignoreOutsideClientRectangle">if set to <c>true</c> [ignore outside client rectangle].</param>
            <returns>Returns the location of a cell specified with absolute row and column index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Calculates the display area for a given range of cells with cell coordinates specified in absolute row and column indexes.
            </overload>
            <summary>
            Calculates the display area for a given range of cells with cell coordinates specified in absolute row and column indexes.
            </summary>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the range of cells.</param>
            <param name="sizeKind">Specifies how to handle the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> that spans the range of visible cells. If no cells in the given range
            are visible, <see cref="F:System.Drawing.Rectangle.Empty"/> is returned.</returns>
            <remarks>
            If there are covered cells or floating cells, they will treated as regular cells. The range is not enlarged
            to fit these spanned cells.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Calculates the display area for a given range of cells with cell coordinates specified in absolute row and column indexes.
            </summary>
            <param name="range">The range.</param>
            <returns>Returns the display area for a given range of cells with cell coordinates specified in absolute row and column indexes.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColWidth(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the column width of the column, reducing it by hScrollPixelDelta if is the 
            column at LeftColIndex. When horizontal pixel scrolling is enabled, hScrollPixelDelta
            will be between 0 and the width of the column at LeftColIndex.
            </overload>
            <summary>
            Returns the column width of the column, reducing it by hScrollPixelDelta if is the 
            column at LeftColIndex. When horizontal pixel scrolling is enabled, hScrollPixelDelta
            will be between 0 and the width of the column at LeftColIndex.
            </summary>
            <param name="absoluteColIndex">The absolute column index.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>Column width.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColWidth(System.Int32)">
            <summary>
            Returns the column width of the column, reducing it by hScrollPixelDelta if is the
            column at LeftColIndex. When horizontal pixel scrolling is enabled hScrollPixelDelta
            will be between 0 and the width of the column at LeftColIndex.
            </summary>
            <param name="absoluteColIndex">Index of the absolute col.</param>
            <returns>Returns the column width of the column</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientColWidth(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the column width of the column, reducing it by hScrollPixelDelta if is the 
            column at LeftColIndex. When horizontal pixel scrolling is enabled, hScrollPixelDelta
            will be between 0 and the width of the column at LeftColIndex.
            </overload>
            <summary>
            Returns the column width of the column, reducing it by hScrollPixelDelta if is the 
            column at LeftColIndex. When horizontal pixel scrolling is enabled, hScrollPixelDelta
            will be between 0 and the width of the column at LeftColIndex.
            </summary>
            <param name="clientColIndex">The client column index.</param>
            <param name="sizeKind">Specifies how to handle the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>Client column width.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientColWidth(System.Int32)">
            <summary>
            Returns the column width of the column, reducing it by hScrollPixelDelta if is the
            column at LeftColIndex. When horizontal pixel scrolling is enabled, hScrollPixelDelta
            will be between 0 and the width of the column at LeftColIndex.
            </summary>
            <param name="clientColIndex">Index of the client col.</param>
            <returns>Returns the column width of the column</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowHeight(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the row height of the row, reducing it by vScrollPixelDelta if is the 
            row at TopRowIndex. When horizontal pixel scrolling is enabled, vScrollPixelDelta
            will be between 0 and the height of the row at TopRowIndex.
            </overload>
            <summary>
            Returns the row height of the row, reducing it by vScrollPixelDelta if is the 
            row at TopRowIndex. When horizontal pixel scrolling is enabled, vScrollPixelDelta
            will be between 0 and the height of the row at TopRowIndex.
            </summary>
            <param name="absoluteRowIndex">The absolute row index.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>Row height.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowHeight(System.Int32)">
            <summary>
            Returns the row height of the row, reducing it by vScrollPixelDelta if is the
            row at TopRowIndex. When horizontal pixel scrolling is enabled, vScrollPixelDelta
            will be between 0 and the height of the row at TopRowIndex.
            </summary>
            <param name="absoluteRowIndex">Index of the absolute row.</param>
            <returns>Returns the row height of the row</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientRowHeight(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the row height of the row, reducing it by vScrollPixelDelta if is the 
            row at TopRowIndex. When horizontal pixel scrolling is enabled, vScrollPixelDelta
            will be between 0 and the height of the row at TopRowIndex.
            </overload>
            <summary>
            Returns the row height of the row, reducing it by vScrollPixelDelta if is the 
            row at TopRowIndex. When horizontal pixel scrolling is enabled, vScrollPixelDelta
            will be between 0 and the height of the row at TopRowIndex.
            </summary>
            <param name="clientRowIndex">The client row index</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>Client row height.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientRowHeight(System.Int32)">
            <summary>
            Returns the row height of the row, reducing it by vScrollPixelDelta if is the
            row at TopRowIndex. When horizontal pixel scrolling is enabled, vScrollPixelDelta
            will be between 0 and the height of the row at TopRowIndex.
            </summary>
            <param name="clientRowIndex">Index of the client row.</param>
            <returns>Returns the row height of the row</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Calculates the display area for a given range of cells with cell coordinates specified in absolute row and column indexes.
            </overload>
            <summary>
            Calculates the display area for a given range of cells with cell coordinates specified in absolute row and column indexes.
            </summary>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the range of cells.</param>
            <param name="ignoreOutsideClientRectangle">Set this True if the grid should only return points within the grid area; 
            False if the method should calculate cells that are below or right of the visible area.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> that spans the range of visible cells. If no cells in the given range
            are visible, <see cref="F:System.Drawing.Rectangle.Empty"/> is returned.</returns>    
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Calculates the display area for a given range of cells with cell coordinates specified in absolute row and column indexes.
            </summary>
            <param name="range">The range.</param>
            <param name="ignoreOutsideClientRectangle">if set to <c>true</c> [ignore outside client rectangle].</param>
            <returns>Returns the display area for a given range of cells</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.IsRowVisible(System.Int32)">
            <summary>
            Check if the row specified with an absolute row index is visible.
            </summary>
            <param name="row">The absolute row index specifying the row to be tested.</param>
            <returns>True if visible; False if outside visible area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.IsColVisible(System.Int32)">
            <summary>
            Check if the column specified with an absolute column index is visible.
            </summary>
            <param name="col">The absolute column index specifying the column to be tested.</param>
            <returns>true if visible; false if outside visible area</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.IsRangeVisible(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Check if parts of the range specified with an absolute row and column indexes are visible.
            </summary>
            <param name="range">The range to be tested.</param>
            <returns>True if visible; False if outside visible area.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.CombineSpannedRanges(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Enlarges the specified range with any floating or covered ranges that intersect with the range.
            </summary>
            <param name="range">The original range.</param>
            <returns>The enlarged range that contains the original range and any covered or floating cells ranges within the range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.VisitVisibleCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRowColRangeInfoHandler[])">
            <summary>
            Executes a delegate for every cell in the specified range that is visible in the current grid view.
            </summary>
            <param name="range">The range that specifies the cells to visit.</param>
            <param name="handler">This delegate represents the method to execute for every visible cell in the specified range.</param>
            <returns>The outer range that contains all ranges returned by executing <paramref name="handler"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowHeights(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns a one-dimensional array with ints filled with values determined from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)"/>.
            </overload>
            <summary>
            Returns a one-dimensional array with ints filled with values determined from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)"/>.
            </summary>
            <param name="fromRowIndex">The first row index.</param>
            <param name="toRowIndex">The last row index.</param>
            <param name="sizeKind">Specifies how to handle the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The array with row heights.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowHeights(System.Int32,System.Int32)">
            <summary>
            Returns a one-dimensional array with ints filled with values determined from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)"/>.
            </summary>
            <param name="fromRowIndex">Index of from row.</param>
            <param name="toRowIndex">Index of to row.</param>
            <returns>Returns a one-dimensional array with ints from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColWidths(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns a one-dimensional array with ints filled with values determined from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)"/>.
            </overload>
            <summary>
            Returns a one-dimensional array with ints filled with values determined from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)"/>.
            </summary>
            <param name="fromColIndex">The first column index.</param>
            <param name="toColIndex">The last column index.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The array with column widths.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColWidths(System.Int32,System.Int32)">
            <summary>
            Returns a one-dimensional array with ints filled with values determined from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)"/>.
            </summary>
            <param name="fromColIndex">Index of from col.</param>
            <param name="toColIndex">Index of to col.</param>
            <returns>Returns a one-dimensional array with ints from <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowRangeHeight(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total height of a range of rows.
            </overload>
            <summary>
            Returns the total height of a range of rows.
            </summary>
            <param name="fromRowIndex">The first row index.</param>
            <param name="toRowIndex">The last row index.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total height of the specified range of rows.</returns>
            <remarks>
            Row heights are determined with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowRangeHeight(System.Int32,System.Int32)">
            <summary>
            Returns the total height of a range of rows.
            </summary>
            <param name="fromRowIndex">Index of from row.</param>
            <param name="toRowIndex">Index of to row.</param>
            <returns>Returns the total height of a range of rows</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowRangeHeight(System.Int32,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total height of a range of rows and aborts calculation if it is greater than a specified maximum value.
            </overload>
            <summary>
            Returns the total height of a range of rows and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromRowIndex">The first row index.</param>
            <param name="toRowIndex">The last row index.</param>
            <param name="maxSize">Aborts calculation if total height is greater than this specified maximum value.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total height of the specified range of rows.</returns>
            <remarks>
            Row heights are determined with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetRowRangeHeight(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the total height of a range of rows and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromRowIndex">Index of from row.</param>
            <param name="toRowIndex">Index of to row.</param>
            <param name="maxSize">Size of the max.</param>
            <returns>Returns the total height of a range of rows</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColRangeWidth(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total width of a range of columns.
            </overload>
            <summary>
            Returns the total width of a range of columns.
            </summary>
            <param name="fromColIndex">The first column index.</param>
            <param name="toColIndex">The last column index.</param>
            <param name="sizeKind">Specifies how to handle the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total width of the specified range of columns.</returns>
            <remarks>
            Column widths are determined with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColRangeWidth(System.Int32,System.Int32)">
            <summary>
            Returns the total width of a range of columns.
            </summary>
            <param name="fromColIndex">Index of from col.</param>
            <param name="toColIndex">Index of to col.</param>
            <returns>Returns the total width of a range of columns</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColRangeWidth(System.Int32,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total width of a range of columns and aborts calculation if it is greater than a specified maximum value.
            </overload>
            <summary>
            Returns the total width of a range of columns and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromColIndex">The first column index.</param>
            <param name="toColIndex">The last column index.</param>
            <param name="maxSize">Aborts calculation if total width is greater than this specified maximum value.</param>
            <param name="sizeKind">Specifies how to handle the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total width of the specified range of columns.</returns>
            <remarks>
            Column widths are determined with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetColRangeWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the total width of a range of columns and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromColIndex">Index of from col.</param>
            <param name="toColIndex">Index of to col.</param>
            <param name="maxSize">Size of the max.</param>
            <returns>Returns the total width of a range of columns</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientRowRangeHeight(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total height of a range of rows specified in client row indexes.
            </overload>
            <summary>
            Returns the total height of a range of rows specified in client row indexes.
            </summary>
            <param name="fromRowIndex">The first client row index.</param>
            <param name="toRowIndex">The last client row index.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total height of the specified range of rows.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientRowRangeHeight(System.Int32,System.Int32)">
            <summary>
            Returns the total height of a range of rows specified in client row indexes.
            </summary>
            <param name="fromRowIndex">Index of from row.</param>
            <param name="toRowIndex">Index of to row.</param>
            <returns>Returns the total height of a range of rows</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientRowRangeHeight(System.Int32,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total height of a range of rows specified in client row indexes and aborts calculation if it is greater than a specified maximum value.
            </overload>
            <summary>
            Returns the total height of a range of rows specified in client row indexes and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromRowIndex">The first client row index.</param>
            <param name="toRowIndex">The last client row index.</param>
            <param name="maxSize">Aborts calculation if total height is greater than this specified maximum value.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total height of the specified range of rows.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientRowRangeHeight(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the total height of a range of rows specified in client row indexes and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromRowIndex">Index of from row.</param>
            <param name="toRowIndex">Index of to row.</param>
            <param name="maxSize">Size of the max.</param>
            <returns>Returns the total height of a range of rows</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientColRangeWidth(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total width of a range of columns specified in client row indexes.
            </overload>
            <summary>
            Returns the total width of a range of columns specified in client row indexes.
            </summary>
            <param name="fromColIndex">The first client column index.</param>
            <param name="toColIndex">The last client column index.</param>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total width of the specified range of columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientColRangeWidth(System.Int32,System.Int32)">
            <summary>
            Returns the total width of a range of columns specified in client row indexes.
            </summary>
            <param name="fromColIndex">Start column index.</param>
            <param name="toColIndex">End column index.</param>
            <returns>Returns the total width of a range of columns</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientColRangeWidth(System.Int32,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridCellSizeKind)">
            <overload>
            Returns the total width of a range of columns specified in client row indexes and aborts calculation if it is greater than a specified maximum value.
            </overload>
            <summary>
            Returns the total width of a range of columns specified in client row indexes and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromColIndex">The first client column index.</param>
            <param name="toColIndex">The last client column index.</param>
            <param name="maxSize">Aborts calculation if total width is greater than this specified maximum value.</param>
            <returns>The total width of the specified range of columns.</returns>
            <param name="sizeKind">Specifies how to handle the the top-most row or left-most (RTL: right-most) column when
            pixel scrolling is enabled and cells are only partially visible.</param>
            <returns>The total width of the specified range of columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.GetClientColRangeWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the total width of a range of columns specified in client row indexes and aborts calculation if it is greater than a specified maximum value.
            </summary>
            <param name="fromColIndex">Index of from col.</param>
            <param name="toColIndex">Index of to col.</param>
            <param name="maxSize">Size of the max.</param>
            <returns>Returns the total width of a range of columns</returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridViewLayout.LayoutChanged">
            <summary>
            Occurs when layout information has been changed or reinitialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.VisibleRowsList">
            <summary>
            Gets a hashtable where each entry consists of the absolute row index as key and
            relative row index as value. You can use this dictionary to quickly look up if a
            row is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.VisibleColumnsList">
            <summary>
            Gets a hashtable where each entry consists of the absolute column index as key and
            relative column index as value. You can use this dictionary to quickly look up if a
            column is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.VisibleCellsRange">
            <summary>
            Gets the current visible range of cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.ScrollCellsRange">
            <summary>
            Gets the current range of cells that is scrollable (all rows and columns excluding frozen rows and columns).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.ScrollAreaBounds">
            <summary>
            Gets the scrollable area in client coordinates (excluding both column and row headers).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.HscrollAreaBounds">
            <summary>
            Gets the horizontal scrollable area in client coordinates (including column headers).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.VscrollAreaBounds">
            <summary>
            Gets the vertical scrollable area in client coordinates (including row headers).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.InternalVscrollAreaBounds">
            <summary>
            Gets the InternalVscrollAreaBounds. Internal only.
            </summary>
            <value>The internal vscroll area bounds.</value>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.LastVisibleCol">
            <summary>
            Gets the last visible column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.InternalLastVisibleRow">
            <summary>
            Gets the InternalLastVisibleRow. Internal only.
            </summary>
            <value>The internal last visible row.</value>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.LastVisibleRow">
            <summary>
            Gets the last visible row.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.HasPartialVisibleRows">
            <summary>
            Gets a value indicating whether True if there are more rows to scroll down; False if at bottom of grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.HasPartialVisibleCols">
            <summary>
            Gets a value indicating whether True if there are more columns to scroll right; False if at right edge of grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.Corner">
            <summary>
            Gets the bottom-right corner point in client coordinates of the visible grid. To the right and
            to the bottom of this grid is a non-grid background area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.VisibleRows">
            <summary>
            Gets the number of visible rows in the current view.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridViewLayout.VisibleCols">
            <summary>
            Gets the number of visible columns in the current view.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownContainer">
            <summary>
            A version of the <see cref="T:Syncfusion.Windows.Forms.PopupControlContainer"/> class that implements the 
            <see cref="T:Syncfusion.Windows.Forms.IPopupParent"/> interface specific for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownContainer.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownContainer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownContainer.Syncfusion#Windows#Forms#IPopupParent#ChildClosing(Syncfusion.Windows.Forms.IPopupChild,Syncfusion.Windows.Forms.PopupCloseType)">
            <summary>
            Will be called to indicate that the popup child was closed in the specified mode.
            </summary>
            <param name="childUI">The child that was closed. </param>
            <param name="popupCloseType">A <see cref="T:Syncfusion.Windows.Forms.PopupCloseType"/> value. </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp">
            <summary>
            A helper class for drop-down cell functionality.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.#ctor(Syncfusion.Windows.Forms.Grid.GridCellRendererBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp"/> object.
            </summary>
            <param name="renderer">The cell renderer that you want to enable for drop-down functionality.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.QueryFocusInside">
            <summary>
            Determines if this control contains focus. Override this method if you
            want to show drop-down windows and indicate the control has not lost focus when 
            the drop-down is shown.
            </summary>
            <returns>True if the control or any child control has focus; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.Dispose">
            <summary>
            Unwires any events subscribed from <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownContainer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.CreateDropDownContainer">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownContainer"/> and associates it with 
            the cell's parent grid.
            </summary>
            <returns>The container where you can insert child controls to be displayed as drop-down part for your cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.InternalCreateDropDownContainer">
            <summary>
            Just creates and returns the GridDropDownContainer. Good method to override and return a custom container.
            </summary>
            <returns>Returns a IGridDropDownContainer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.EnsureDropDownContainer">
            <summary>
            Ensures the container is valid and initialized. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.InitializeDropDownContainer">
            <summary>
            Called to initialize contents of the drop-down container for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.OnInitialize(System.Int32,System.Int32)">
            <summary>
            This method gets called from the cell renderer's Initialize method. Override this method if you need to any initialization
            for the current cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.OnHasFocusControlChanged">
            <summary>
            Override this method if your cell renderer supports in-place editing and you want
            to do any custom initialization at this point before cell gets redrawn.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.ChildClosing(Syncfusion.Windows.Forms.IPopupChild,Syncfusion.Windows.Forms.PopupCloseType)">
            <summary>
            Will be called to indicate that the popup child was closed in the specified mode.
            </summary>
            <param name="childUI">The child that was closed. </param>
            <param name="popupCloseType">A <see cref="T:Syncfusion.Windows.Forms.PopupCloseType"/> value. </param>
            <seealso cref="T:Syncfusion.Windows.Forms.IPopupItem"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.DropDownContainerCloseDropDown(System.Object,Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <summary>
            Will be called to indicate that the popup child was closed.
            </summary>
            <param name="sender">The child that was closed. </param>
            <param name="e">The event data with a <see cref="P:Syncfusion.Windows.Forms.PopupClosedEventArgs.PopupCloseType"/> value. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <summary>
            Occurs after the popup has been dropped-down and made visible.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs when the drop-down container is about to be shown.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.NotifyShowingDropDown(System.Drawing.Size@)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowingDropDown(Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)"/> for the parent grid.
            </summary>
            <param name="size">The suggested size of the drop-down</param>
            <returns>True if drop-down should be shown; False if operation should be canceled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.NotifyShowedDropDown">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnCurrentCellShowedDropDown(System.EventArgs)"/> for the parent grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.IsRelatedControl(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Called to find out whether a specified control is part of the popup hierarchy.
            </summary>
            <param name="control">A Control instance. </param>
            <param name="askPopupParent">True indicates this query should be passed to the IPopupParent, if any; False indicates you should not query the popup parent.</param>
            <returns>True if the control is part of the popup hierarchy; False if not.</returns>
            <seealso cref="T:Syncfusion.Windows.Forms.IPopupItem"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.OnShowDropDown">
            <summary>
            This is called from GridCurrentCell.ShowDropDown after BeginEdit has been called.
            </summary>
            <remarks>
            If your renderer supports dropped-down state, the drop-down window should be made
            visible at this time.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.OnCloseDropDown(Syncfusion.Windows.Forms.PopupCloseType)">
            <summary>
            This is called from GridCurrentCell.CloseDropDown.
            </summary>
            <remarks>
            If your renderer supports dropped-down state, the drop-down window should be
            closed at this time.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.OnButtonClicked(System.Int32,System.Int32,System.Int32)">
            <summary>
            This method is called when the user clicks a cell button inside cell. 
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="button">The button</param>
            <remarks>In your overriden version
            of this method, you can activate the current cell for the given row and column index and then
            drop-down a list.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            User pressed key down. (similar to Control.OnKeyDown)
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.FixTopMostWindow">
            <summary>
            Ensures that the drop-down part is the top-most window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.InitFocusEditPart">
            <summary>
            Gets or sets a value indicating whether the focus should remain with the grid or active text box when dropped-down. True if focus
            should remain with grid; False if drop-down should get focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.IgnoreDoubleClickTicks">
            <summary>
            Gets or sets the Environment.TickCount value until a second click should be considered a double click.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.IgnoreFocus">
            <summary>
            Gets or sets a value indicating whether grid focus notification should be temporarily ignored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.Grid">
            <summary>
            Gets a reference to the parent grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.CurrentCell">
            <summary>
            Gets a reference to GridCurrentCell implementation
            of the GridControlBase this cell renderer is associated with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.DropDownButton">
            <summary>
            Gets or sets the drop-down button.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.IsDroppedDown">
            <summary>
            Gets a value indicating whether the drop-down is currently dropped-down and visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.EditPart">
            <summary>
            Gets the text box that is displayed in the user input field for 
            a combo box. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.PopupControlContainer">
            <summary>
            Gets the container where you can insert child controls to be displayed as drop-down part for your cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.DropDownContainer">
            <summary>
            Gets DropDownContainer. For convenience only. Same as <see cref="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellImp.PopupControlContainer"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl">
            <summary>
            Implements the text box that is displayed in the user input field for 
            a combo box. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl.#ctor(Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>.
            </summary>
            <param name="parent">The parent for this text box part.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton">
            <summary>
            Defines a cell button element that looks like a combo box button. Typically used with <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>.
            </summary>
            <remarks>
            The combo box button is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is True.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton.#ctor(Syncfusion.Windows.Forms.Grid.GridCellRendererBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> that draws this cell button element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draws a button using <see cref="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)"/> or if XP Themes
            are enabled, button will be drawn themed.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rect">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="buttonState">A <see cref="T:System.Windows.Forms.ButtonState"/> that specifies the current state.</param>
            <param name="style">The style information for the cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton.DrawEllipsis">
            <summary>
            Gets or sets a value indicating whether ellipsis (...) should be drawn instead of the default combo box button.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel">
            <summary>
            Implements the data / model part for a combo box cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel">
            <summary>
            Implements the data / model part for a drop-down cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the cell model.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the cell model.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Throws NotImplemented exception.</summary>
            <param name="control">The grid control.</param>
            <returns>NotImplemented exception.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel.SupportsChoiceList">
            <summary>
            Gets or sets a value indicating whether cells with this cell type should fill
            the drop-down list with items from the choice list or datasource in GridStyleInfo.
            </summary>
            <remarks>
            If you implement a custom combo box or drop-down list and you do want the item list
            to be independent from cell settings (and share the same item list among all cells
            with this cell type) you should set SupportsChoiceList to be False.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/> for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/> specific for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.GetDataSource(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            This is called to initialize data source on demand. This lets you calculate the datasource
            only when it is needed and not every time in QueryStyleInfo. Default behavior is to return
            style.ChoiceList if not empty. If style.ChoiceList is empty, style.DataSource is returned.
            </summary>
            <param name="style">The style object with binding information.</param>
            <returns>Data source.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.FillWithChoices(System.Windows.Forms.ListBox,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean@)">
            <summary>
            Initializes a <see cref="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.ListBox"/> with data binding information from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            object.
            </summary>
            <param name="listBox">The list box to be initialized with data binding information</param>
            <param name="style">The style object with binding information.</param>
            <param name="exclusive">A place holder that returns whether the list box is filled with an exclusive
            list of possible choices or if non-standard values are allowed.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.GetInternalListBox">
            <summary>
            For internal use.
            </summary>
            <returns>returns GridComboBoxListBoxHelper.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)">
            <summary>
            Parses the display text and converts it into a cell value to be stored in the style object.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="text">The input text to be parsed.</param>
            <param name="textInfo">textInfo is a hint who is calling, default is GridCellBaseTextInfo.DisplayText</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.FindValue(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object)">
            <summary>
            Returns the index in the drop-down list box for the specified cell value / key.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value (same as ValueMember).</param>
            <returns>The index in the drop-down list box or -1 if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.GetItemValue(System.Object,System.String,System.Object)">
            <summary>
            Returns the value for the ValueMember of the specified item.
            </summary>        
            <param name="dataSource">The datasource list</param>
            <param name="valueMember">The name of the value member</param>
            <param name="item">The row item.</param>
            <returns>The value of the ValueMember.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <summary>
            This is called from GridStyleInfo.GetFormattedText.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">textInfo is a hint who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>The formatted text for the given value.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.ListBox">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.AllowDoubleClickChangeSelectedIndex">
            <summary>
            Gets or sets a value indicating whether to enable or turn off selecting the next index when user double clicks inside cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel.CacheDataSource">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper">
            <internalonly/>
            <summary>For internal use.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.OnDataSourceChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.OnCreateControl">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.SetItemsCore(System.Collections.IList)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.SetItemCore(System.Int32,System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.GetItemText(System.Object)">
            <summary>
            Returns the text representation of the specified item.
            </summary>
            <param name="item">The object from which to get the contents to display.</param>
            <returns>
            If the <see cref="P:System.Windows.Forms.ListControl.DisplayMember"/> property is not specified, the value returned by <see cref="M:System.Windows.Forms.ListControl.GetItemText(System.Object)"/> is the value of the item's ToString method. Otherwise, the method returns the string value of the member specified in the <see cref="P:System.Windows.Forms.ListControl.DisplayMember"/> property for the object specified in the <paramref name="item"/> parameter.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.GetItemValue(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="item">The object instance.</param>
            <returns>returns the ItemValue</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.GetItemValue(System.Int32)">
            <summary>
            For internal use.
            </summary>
            <param name="index">The index.</param>
            <returns>returns the ItemValue</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.GetItemText(System.Int32)">
            <summary>
            For internal use.
            </summary>
            <param name="index">The index.</param>
            <returns>returns the ItemText</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.GetItemCount">
            <summary>
            For internal use.
            </summary>
            <returns>returns the ItemCount.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.FindValue(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="value">The value.</param>
            <returns>returns the value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.FindStringExact(System.String)">
            <summary>
            For internal use.
            </summary>
            <param name="s">The text to search for.</param>
            <returns>
            The zero-based index of the first item found; returns ListBox.NoMatches if no match is found.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.OnHandleDestroyed(System.EventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.SelectedIndex">
            <override/>
            <summary>
            Gets or sets the zero-based index of the currently selected item in a list box.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxHelper.BindingContext">
            <override/>
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.BindingContext" /> for the
            control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer">
            <summary>
            Implements the renderer part of a combo box cell.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/> can be customized with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/>,
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/> properties of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> instance.
            <para/>
            If you do not have a datasource object, you can also fill the drop-down list contents
            with a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> and optionally specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList"/>.
            <para/>
            The combo box cell is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is True.
            <para/>
            There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            Use "ComboBox" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> of a cells <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell. sa
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges should be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>Combo Box (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> (<see cref="T:System.Collections.Specialized.StringCollection"/>)</term>
                    <description>Specifies items to be displayed in the drop-down list. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the combo box button can be clicked. If set to False, the button will be drawn grayed out. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> for information on how to disable activating the combo box cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> (<see cref="T:System.Object"/>)</term>
                    <description>Specifies a data source that holds items to be displayed in a drop-down list. A datasource can be specified instead of manually filling the choicelist with string entries. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/> (<see cref="T:System.String"/>)</term>
                    <description>Names the property in the datasource that holds the text to be displayed in a cell that depends on a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStyle"/>)</term>
                    <description>Specifies if user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>. (Default: GridDropDownStyle.Editable)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the combo box button can still be clicked but no drop-down list is displayed. You should also disable <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> if you do not want the user to click the combo box button. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value can not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if user input is restricted to items from choice list or datasource. It is recommended to use <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/> instead. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. This does not affect the position of the combo box button. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for a image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. The image is currently only shown in the text field, not in the drop-down list. You have to add custom programming logic in order to set the ImageIndex based on a selection in the drop-down list. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. The user can still drop-down the combo box but changes will not be saved back into the text field. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the combo box button. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for combo boxes). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the borders of the client rectangle of the cell. The client rectangle is the cell rectangle without buttons and borders. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cell's style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/> (<see cref="T:System.String"/>)</term>
                    <description>Names the property in the datasource that holds the key to be saved in a cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer">
            <summary>
            Defines a base class for the renderer parts of cells that support being dropped-down like a combo box.
            </summary>
            <remarks>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel"/> if several views display the same.
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            <para/>
            The following table lists some characteristics about the drop-down cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Cell Button</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton"/></description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input or DropDown</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl"/></description>
                </item>
                <item>
                    <term>Drop-Down Control</term>
                    <description>Custom</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the drop-down button can be clicked. If set to false, the button will be drawn grayed out. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> for more information on how to disable activating the drop-down cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cells value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the drop-down button can still be clicked. You should also disable <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> if you do not want the user to click the drop-down button. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. This does not affect the position of the drop=down button. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable a hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the drop-down button. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for combo boxes). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the borders of the client rectangle of the cell. The client rectangle is the cell rectangle without buttons and borders. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cell's style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text and the drop-down button in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
             <para/>
             <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridDropDownCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase, 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer.CreateTextBox">
            <summary>
            Creates the text box that is shown in-place in the cell when the
            user starts editing the cell.
            </summary>
            <returns>
            Returns the new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/>.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer.TextBoxGotFocus(System.Object,System.EventArgs)">
            <override/>
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event of the text box and raises a
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellControlGotFocus"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer.ProcessMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            Lets you customize and redirect the mouse wheel behavior to a cell renderer.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>True if the parent grid should not be scrolled; False if the parent grid should scroll.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer.EditPart">
            <summary>
            Gets the text box that is displayed in the user input field for 
            a combo box. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer.PopupControlContainer">
            <summary>
            Gets the container where you can insert child controls to be displayed as drop-down part for your cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer.DropDownContainer">
            <summary>
            Gets the container where you can insert child controls to be displayed as drop-down part for your cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/> object for the given GridControlBase
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.CreateListBoxPart">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxPart"/> that is used as list box inside the drop-down.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxListBoxPart"/> that is derived from <see cref="T:System.Windows.Forms.ListBox"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.DetachListBoxPart">
            <summary>
            Called to detach the list box part from this renderer object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.AttachListBoxPart">
            <summary>
            Called to attach a list box part to this renderer object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnRejectChanges">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>
            Allows custom formattting of a cell by changing its style object.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.ProcessMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>Allows the cell renderer to process the mouse wheel.</summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding the event data.</param>
            <returns>True if the popup child is dropped down and the new scroll position is valid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnDeactivating">
            <summary>
            Closes the DropDown if the CurrentCell is deactivated along with BrowseOnly property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnSetControlText(System.String)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.TextBoxChanged(System.Object,System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.ValidateString(System.String)">
            <override/>
            <summary>Checks if the specified text is valid.</summary>
            <param name="text">The specified text.</param>
            <returns>True if it is valid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.RefreshChoices(System.Windows.Forms.ListBox,System.String)">
            <summary>Refresh the Choicelist/</summary>
            <param name="searchText">The specified text to search from the choicelist.</param>
            <returns>ListBox part with refreshed values</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.GetlistFromTable(System.Windows.Forms.ListBox,System.String,System.Object)">
            <summary>Creates a list from DataTable</summary>
            <param name="listBoxPart">listboxpart</param>
            <param name="searchText">The specified text to search from the list.</param>
            <param name="dataSource">dataSource of listboxpart</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.GetlistFromArray(System.Windows.Forms.ListBox,System.String,System.Object)">
            <summary>Creates a list from DataTable</summary>
            <param name="listBoxPart">listboxpart</param>
            <param name="searchText">The specified text to search from the list.</param>
            <param name="dataSource">dataSource of listboxpart</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.SetSuggestedChoices(System.Windows.Forms.ListBox,System.String)">
            <summary>
            Generates the possible choices of the choice list based on the searchText.
            </summary>
            <param name="listBoxPart">Choice list.</param>
            <param name="searchText">Text to be searched.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>Occurs when the drop down is about to be shown.</summary>
            <param name="sender">Combobox cell renderer.</param>
            <param name="e">Event args.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <override/>
            <summary>
            Occurs after the pop up has been dropped down and made visible.
            </summary>
            <param name="sender">Combobox cell renderer.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.InitializeDropDownContainer">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.ListBoxMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event of the list box.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.NotifyCurrentCellChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.ListBoxClick(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.Click"/> event of the list box.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.ChildClosing(Syncfusion.Windows.Forms.IPopupChild,Syncfusion.Windows.Forms.PopupCloseType)">
            <override/>
            <summary>
            Occurs when the popup child is being closed.
            </summary>
            <param name="childUI">The pop up.</param>
            <param name="popupCloseType">The way in which the pop up is closed.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.SynchronizeDisplayText(System.Int32)">
            <summary>
            Retrieves the text from the list box index and sets the TextBoxText. Called
            when the user presses arrow keys to move selection in dropped list box.
            </summary>
            <param name="index">The list box index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.FindItem(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds text in the list box.
            </summary>
            <param name="prefix">The text (or prefix) to find.</param>
            <param name="selectItem">True if you want to select the text in the list box.</param>
            <param name="start">The first index to start searching.</param>
            <param name="ignoreCase">True if case can be ignored; False if case sensitive.</param>
            <returns>The index of the entry that starts with the text; -1 if
            no entry could be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.FindItemExact(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds text in the list box.
            </summary>
            <param name="text">The text (or prefix) to find.</param>
            <param name="selectItem">True if you want to select the text in the list box.</param>
            <param name="start">The first index to start searching.</param>
            <param name="ignoreCase">True if case can be ignored; False if case sensitive</param>
            <returns>The index of the entry that starts with the text; -1 if
            no entry could be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnEditPartMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event of the active text box.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> with event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.OnDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.AllowValidateStringOnKeyPress">
            <summary>
            Gets or sets a value indicating whether the combobox should raise <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidateString"/> notifications
            when the user types into the combobox. Default is true.
            </summary>
            <remarks>
            Note: In version 3.3 and earlier the combobox did not raise these notifications. To maintain compatibility
            this option allows you to turn off this behavior.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellModel"/> that this cell renderer belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.ControlText">
            <override/>
            <summary>
            Gets or sets the active text that is displayed on the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer.ListBoxPart">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ListBox"/> that is displayed when the user drops-down the combo box.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFactoryProvider">
            <summary>
            Lets you specify a custom <see cref="T:Syncfusion.Windows.Forms.Grid.IGridCellModelFactory"/> that instantiates
            cell models for the grid on demand using the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>
            string as identifier.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFactoryProvider.#cctor">
            <summary>
            Static Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFactoryProvider.Init(Syncfusion.Windows.Forms.Grid.IGridCellModelFactory)">
            <summary>
            Lets you specify a custom <see cref="T:Syncfusion.Windows.Forms.Grid.IGridCellModelFactory"/> that instantiates
            cell models for the grid on demand using the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>
            string as identifier.
            </summary>
            <param name="pFactory">A cell model factory.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFactoryProvider.CellModelFactory">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.IGridCellModelFactory"/> for this process.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFontState">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontState.#ctor">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontState.CheckLogPixels">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontState.Reset">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontState.INCHtoDP(System.Single)">
            <summary>
            Used internally.
            </summary>       
            <returns>return int</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontState.CMtoDP(System.Single)">
            <summary>
            Used internally.
            </summary>        
            <returns>returns int</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontState.DPtoINCH(System.Int32)">
            <summary>
            Used internally.
            </summary>        
            <returns>returns float</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontState.DPtoCM(System.Int32)">
            <summary>
            Used internally.
            </summary>       
            <returns>returns float</returns>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontState.m_nLogPixelsY">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontState.m_nLogPixelsX">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontState.LogPixelsX">
            <internalonly/>
            <summary>Gets the LogPixelsX. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontState.LogPixelsY">
            <internalonly/>
            <summary>Gets the LogPixelsY. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellContextValue">
            <summary>
            Provides storage for a value that can only be associated with one specific cell. Optimal
            for shared cell objects where only one cell will create events at a time. Other cells will
            have a default value instead.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/> does for example use this storage to save and query for
            hovering and mousedown state. Only one cell can be in hovering or mouse down mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellContextValue.#ctor(System.Object)">
            <overload>
            Initializes <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellContextValue"/>.
            </overload>
            <summary>
            Initializes <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellContextValue"/> with a default value.
            </summary>
            <param name="defaultValue">The default value to be used for all queries where the row and
            column index do not match the current settings.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellContextValue.#ctor(System.Int32,System.Int32,System.Object,System.Object)">
            <summary>
            Initializes <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellContextValue"/> with row, column index, and associated value and a default value.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="value">The value that is specific to row and column index.</param>
            <param name="defaultValue">The default value to be used for all queries where the row and
            column index do not match the current settings.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellContextValue.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value for the specific row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>
            If the row and column index do match the current settings, the saved value is returned;
            otherwise the default value is returned.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellContextValue.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value for the specific row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="value">The value that is specific to row and column index.</param>
            <returns>True if the value was modified; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellContextValue.ResetValue">
            <summary>
            Resets current information. The value will be reset to default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellContextValue.ToString">
            <override/>
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellContextValue.Info">
            <summary>
            Gets results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellPos">
            <summary>
            Holds the coordinates for a cell. Is used by GridVolatileData to look up cell information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellPos.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellPos"/> with row and column coordinates.
            </summary>
            <param name="r">The row index.</param>
            <param name="c">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellPos.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellPos.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a fully qualified type name.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellPos.ColumnNumber">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellPos.RowNumber">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellPos.Info">
            <summary>
            Gets results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridConstants">
            <summary>
            Defines various integer constants to be used throughout the grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridConstants.Undefined">
            <summary>
            Use for undefined index.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridConstants.MaxRowCol">
            <summary>
            Use for maximum row or column count.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason">
            <summary>
            Defines the reason for scrolling current cell into view.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.None">
            <summary>
            Represents None
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.GridFocus">
            <summary>
            Grid control was activated.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.BeginEdit">
            <summary>
            CurrentCell.BeginEdit was called.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.KeyPress">
            <summary>
            A key was pressed while current cell is active.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.Modified">
            <summary>
            Contents of current cell are modified.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.Activate">
            <summary>
            Current cell was activated.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.Click">
            <summary>
            User clicked into cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.MoveTo">
            <summary>
            CurrentCell.MoveTo was called.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.Error">
            <summary>
            An error occurred and a message box will be displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.Command">
            <summary>
            A undo or redo command was executed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.ResizedCells">
            <summary>
            Columns or rows were resized.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.FindText">
            <summary>
            FindDialog has found text in cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.SynchronizeRecord">
            <summary>
            Grouping Grid: SynchronizeCurrentCellWithRecord.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason.Any">
            <summary>
            Default: All of above.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownStyle">
            <summary>
            Defines behavior of combo boxes and drop-down list in a cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDropDownStyle.Editable">
            <summary>
            The user can edit the text box contents and is not limited to values existing choices.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDropDownStyle.Exclusive">
            <summary>
            User input is restricted to items from the ChoiceList or DataSource.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDropDownStyle.AutoComplete">
            <summary>
            The user input is restricted to items from the ChoiceList or DataSource but the user
            can type text into the text box and the text box will be filled with a matching choice.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryFloatCell">
            <summary>
            Specifies whether a cell is asked about support for floating over another cell or
            being flooded by a previous cell. See <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnQueryCanFloatCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryFloatCell)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridQueryFloatCell.FloatCell">
            <summary>
            Queries if cell supports floating another cell. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridQueryFloatCell.FloodCell">
            <summary>
            Queries if cell can be flooded by a previous cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridWrapCellBehavior">
            <summary>
            Controls what the grid does when a last or first column in a row.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridWrapCellBehavior.None">
            <summary>
            Don't move current cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridWrapCellBehavior.WrapRow">
            <summary>
            Move to first column in next row or last column in previous row.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridWrapCellBehavior.WrapGrid">
            <summary>
            When at the last row and last column, move to first row and column or vice versa.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridWrapCellBehavior.NextControlInForm">
            <summary>
            When at the last row and last column activate next sibling control in the dialog 
            or when when at first row and column activate previous sibling control in dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRefreshCurrentCellBehavior">
            <summary>
            Specifies which cells to refresh when moving the current cell. When cell's appearance is changed if
            cell is moved to a new row (e.g. when GridShowButtons.ShowCurrentRow is used), you should specify
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridRefreshCurrentCellBehavior.RefreshRow"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRefreshCurrentCellBehavior.None">
            <summary>
            No refresh necessary when moving the current cell. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRefreshCurrentCellBehavior.RefreshCell">
            <summary>
            Refreshes the current cell only.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRefreshCurrentCellBehavior.RefreshRow">
            <summary>
            Refreshes the whole row. Use this setting if you are using <see cref="F:Syncfusion.Windows.Forms.Grid.GridShowButtons.ShowCurrentRow"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions">
            <summary>
            Specifies options for a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResizeToFit(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> method call. <para/>
            The options can be combined.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions.None">
            <summary>
            Uses default behavior for resizing cells to fit contents. Ignores covered cells, does shrink size, does not include headers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions.ResizeCoveredCells">
            <summary>
            Include covered cells for resizing cells. When using this mode, only the last row or column 
            of a covered range is resized.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions.NoShrinkSize">
            <summary>
            Do not shrink size of cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions.IncludeHeaders">
            <summary>
            Include also row or column header for resizing the cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions.IncludeCellsWithinCoveredRange">
            <summary>
            ResizeCoveredCells mode only resizes the last row or column of a covered range. Use this option
            to also resize the columns or rows before the last one.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTextOptions">
            <summary>
            Specifies options for a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResizeToFit(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> method call. <para/>
            The options can be combined.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextOptions.Text">
            <summary>
            The default text is considered for calculating the Cell size 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextOptions.FormattedText">
            <summary>
            The Formatted text is considered for calculating the Cell size 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryBounds">
            <summary>
            Used by <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridQueryBounds.Height">
            <summary>
            Queries height of cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridQueryBounds.Width">
            <summary>
            Queries width of cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo">
            <summary>
            Provides additional hints about a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetFormattedText(System.Object)"/>,
            or <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.None">
            <summary>
            No hint specified.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.DisplayText">
            <summary>
            Display text operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.PasteText">
            <summary>
            Paste text operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.CopyText">
            <summary>
            Copy text operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.ClearCells">
            <summary>
            Clear cells operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.CurrentText">
            <summary>
            Current text query.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.ReplaceSelection">
            <summary>
            Replace selection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.TextBox">
            <summary>
            Initialize text box with text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellBaseTextInfo.Validate">
            <summary>
            ValidateString checking if string is valid.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionReason">
            <summary>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionReason"/> is used by <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs"/> to give a hint
            about the current state of the user action and reason for this event (mouse, keyboard or programmatic).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.SelectRange">
            <summary>
            Indicates a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/> call.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.SetCurrentCell">
            <summary>
            Indicates a <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> call.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.ArrowKey">
            <summary>
            Indicates user is moving current cell with arrow keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.MouseDown">
            <summary>
            Indicates user pressed mouse down.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.MouseMove">
            <summary>
            Indicates user is moving mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.MouseUp">
            <summary>
            Indicates user released mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.CancelMode">
            <summary>
            Indicates current operation was canceled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionReason.Clear">
            <summary>
            Indicates a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.Clear"/> call, e.g. when user hit Escape-key.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason">
            <summary>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason"/> is used by <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionDragEventArgs"/> to give a hint
            about the current state of the user action and reason for this event.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason.MouseDown">
            <summary>
            Indicates user pressed mouse down.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason.MouseMove">
            <summary>
            Indicates user is moving mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason.MouseUp">
            <summary>
            Indicates user released mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason.CancelMode">
            <summary>
            Indicates current operation was canceled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason.HitTest">
            <summary>
            Indicates this is a Hit-Test query.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason">
            <summary>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragSelectionReason"/> is used by <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs"/> to give a hint
            about the current state of the user action and reason for this event.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.MouseDown">
            <summary>
            Indicates user pressed mouse down.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.MouseMove">
            <summary>
            Indicates user is moving mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.MouseUp">
            <summary>
            Indicates user released mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.CancelMode">
            <summary>
            Indicates current operation was canceled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.HitTest">
            <summary>
            Indicates this is a Hit-Test query.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.DoubleClick">
            <summary>
            Indicates used double clicked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.ResetHide">
            <summary>
            Indicates hidden rows or column will be made visible.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsReason.ResetDefault">
            <summary>
            Indicates changes row heights or column widths will be reset back to default value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeOptions">
            <summary>
            Used by <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> to enlarge the affected range of cells to include covered and floating cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.None">
            <summary>
            Use range as specified.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeCoveredCells">
            <summary>
            Enlarge range with any covered cells that intersect with the original range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeMergedCells">
            <summary>
            Enlarge range with any merged cells (not implemented, reserved for future use) that intersect with the original range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeFloatedCells">
            <summary>
            Enlarge range with any floating cells that intersect with the original range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeBanneredCells">
            <summary>
            Enlarge range with any bannered cells that intersect with the original range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeAllSpannedCells">
            <summary>
            Combines <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeCoveredCells"/>, <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeMergedCells"/>, <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeFloatedCells"/> and <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.MergeBanneredCells"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeOptions.CalculateNonClientArea">
            <summary>
            Included are outside of the current visible grid view. Otherwise <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.RangeInfoToRectangle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> will
            ignore cells that are not visible.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode">
            <summary>
             Specifies how an image is positioned within a cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode.Normal">
            <summary>
            The image is placed in the upper-left corner of the cell. The image is clipped if it is larger than the cell it is contained in.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode.CenterImage">
            <summary>
            The image is displayed in the center if the cell is larger than the image. If the image is larger than the cell, the picture is placed in the center of the cell and the outside edges are clipped.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode.StretchImage">
            <summary>
            The image within the cell is stretched or shrunk to fit the size of the cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode.TileImage">
            <summary>
            The image is tiled across the Cell rectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDirectionType">
            <summary>
               <see cref="T:Syncfusion.Windows.Forms.Grid.GridDirectionType"/> is used in various grid methods to specify direction of a movement.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.None">
            <summary>
            No movement specified, use default behavior.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.Up">
            <summary>
            Represents Move up.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.Left">
            <summary>
            Move to left.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.Down">
            <summary>
            Move down.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.Right">
            <summary>
            Move to right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.PageDown">
            <summary>
            Page down.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.PageUp">
            <summary>
            Represents Page up.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.Top">
            <summary>
            Go to top.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.Bottom">
            <summary>
            Go to bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.MostLeft">
            <summary>
            Go to most left.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.MostRight">
            <summary>
            Got to most right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.TopLeft">
            <summary>
            Go to top-left corner.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDirectionType.BottomRight">
            <summary>
            Got to bottom-right corner.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior">
            <summary>
            Defines behavior for resizing rows or columns.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/>
            and  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> events.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.None">
            <summary>
            Turn off resizing rows and columns with mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.ResizeAll">
            <summary>
            Resize all rows or columns when the user resizes one row or column with the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.ResizeSingle">
            <summary>
            Resize a single row or column (or the selected range) when the user resizes one row or column with the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.InsideGrid">
            <summary>
            Allow the user to resize rows or columns from anywhere inside the grid by grabbing the divider between
            row or column headers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.IgnoreHeaders">
            <summary>
            Do not allow the user to resize rows or columns by grabbing the divider between row or column headers. Use this option
            only when combined with <see cref="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.InsideGrid"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.OutlineHeaders">
            <summary>
            Show a header pressed when the user resizes the associated row or column.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.OutlineBounds">
            <summary>
            Emphasize original cell bounds of tracked row / column.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior.AllowDragOutside">
            <summary>
            Allow the user to drag the mouse outside the grid client area and resize the specific row or column.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridHitTestContext">
            <summary>
            Defines default hit test context constants returned by the <see cref="M:Syncfusion.Windows.Forms.MouseControllerDispatcher.HitTest(System.Drawing.Point)"/>
            of the grid's <see cref="P:Syncfusion.Windows.Forms.ScrollControl.MouseControllerDispatcher"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.None">
            <summary>
            Represents None. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.VerticalLine">
            <summary>
            Mouse is over a vertical grid line between headers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.HorizontalLine">
            <summary>
            Mouse is over a horizontal grid line between headers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.Cell">
            <summary>
            Mouse is over a cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.Header">
            <summary>
            Mouse is over a header cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.SelectedRange">
            <summary>
            Mouse is over a selected range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.SelectedRangeEdge">
            <summary>
            Mouse is over the edge of a selected range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.CellButtonElement">
            <summary>
            Mouse is over a cell button element (see <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/>).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHitTestContext.CheckBoxChecker">
            <summary>
            Mouse is over the checker box in a check box cell (see <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.SortIconPlacement">
            <summary>
            Specifies placement of the sorticon
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionFlags">
            <summary>
            Specifies behavior for selecting cells for the grid by the user with mouse or keyboard.
            </summary>
            <remarks>
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.None">
            <summary>
            Disable selecting cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Row">
            <summary>
            Rows can be selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Column">
            <summary>
            Columns can be selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Table">
            <summary>
            Whole table can be selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Cell">
            <summary>
            Individual cells can be selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Multiple">
            <summary>
            Multiple ranges of cells can be selected. The user has to press Control Key to select multiple ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Shift">
            <summary>
            Allow extend existing selection when user holds Shift Key and clicks on a cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Keyboard">
            <summary>
            Allow extend existing selection when user holds Shift Key and arrow keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.AlphaBlend">
            <summary>
            Use alpha blending to highlight selected cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.MixRangeType">
            <summary>
            Allow both rows and columns to be selected at same time when <see cref="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Multiple"/> is specified. By default, the grid does not allow having rows and column
            ranges be selected at the same time.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionFlags.Any">
            <summary>
            Default behavior for selecting cells: Rows, Columns, Table, Cell, Multiple, Extends Shift Key support, and alphablending.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFloatCellsMode">
            <summary>
            This enumeration specifies floating cell's behavior in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.FloatCellsMode"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFloatCellsMode.None">
            <summary>
            Floating cell's behavior is disabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFloatCellsMode.OnDemandCalculation">
            <summary>
            Floating cells are calculated before they are displayed and results are saved. Floating cells will
            only be recalculated if the width or contents of cells change.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFloatCellsMode.BeforeDisplayCalculation">
            <summary>
            Floating cells are always calculated before cells are displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection">
            <summary>
            This enumeration specifies merge behavior for an individual cell when merging cells feature has been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with  <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>.
            </summary>
            <remarks>
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection.None">
            <summary>
            Merging cell is disabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection.ColumnsInRow">
            <summary>
            Merge with neighboring columns in same row.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection.RowsInColumn">
            <summary>
            Merge with neighboring rows in same column.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection.Both">
            <summary>
            Represents Both.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsLayout.VisibleRange">
            <summary>
            Merge cells only in visible range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsLayout.Grid">
            <summary>
            Merge cells for entire grid.
            May affects performance for a large Grid
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode">
            <summary>
            This enumeration specifies merge cells behavior in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode.None">
            <summary>
            Merge cells behavior is disabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode.OnDemandCalculation">
            <summary>
            Merge cells are calculated before they are displayed and results are saved. Floating cells will
            only be recalculated if the width or contents of cells change.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode.BeforeDisplayCalculation">
            <summary>
            Merge cells are always calculated before cells are displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode.MergeRowsInColumn">
            <summary>
            Enable merging of neighboring cells among rows in same column.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode.MergeColumnsInRow">
            <summary>
            Enable merging of neighboring cells among columns in same row.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode.SkipHiddencells">
            <summary>
            When comparing rows or columns, skip hidden rows or columns and allow merging
            across hidden rows or columns.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRemoveUndoOption">
            <summary>
            Later ... GridRemoveUndoOption
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellActivateAction">
            <summary>
            Specifies current cell activation behavior when moving the current cell or clicking inside a cell. Defines when to set the focus / toggle edit mode for the current cell.
            </summary>
            <remarks>
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellActivateAction.None">
            <summary>
            Do not set focus to text box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellActivateAction.ClickOnCell">
            <summary>
            Begin editing / focus on text box after user clicked on cell.
            </summary>
            <remarks>
            The cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellStartEditing"/> event may block editing mode for the current cell.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellActivateAction.SetCurrent">
            <summary>
            Begin editing / focus on text box whenever a cell becomes current cell no matter if user clicked on cell or moved with arrow keys.
            </summary>
            <remarks>
            When GridCellActivateAction.SetCurrent is specified <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/> will be called
            before the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event is raised. <para/>
            See the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event if you want to programmatically call <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/>.<para/>
            The cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellStartEditing"/> event may block editing mode for the current cell.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellActivateAction.DblClickOnCell">
            <summary>
            Begin editing / focus on text box when user double clicked on cell.
            </summary>
            <remarks>
            The cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellStartEditing"/> event may block editing mode for the current cell.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellActivateAction.SelectAll">
            <summary>
            Begin editing / focus on text box and select all text whenever a cell becomes current cell no matter if user clicked on cell or moved with arrow keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellActivateAction.PositionCaret">
            <summary>
            Forward mouse click to the text box so that the caret can be positioned at the character under the mouse pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDrawOrder">
            <summary>
            Defines the order that cells are loaded before the grid is displayed. This is of use when
            using the virtual grid and it is more extensive to move from column to column than to 
            move from row to row in your custom data source.
            </summary>
            <remarks>
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DrawOrder"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDrawOrder.Rows">
            <summary>
            Load grid cells row by row.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDrawOrder.Columns">
            <summary>
            Load grid cells column by column.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridShowCurrentCellBorder">
            <summary>
            This enumeration specifies when to show or hide current cell border / frame.
            </summary>
            <remarks>
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShowCurrentCellBorderBehavior"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowCurrentCellBorder.AlwaysVisible">
            <summary>
            Show current cell border / frame always.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowCurrentCellBorder.HideAlways">
            <summary>
            Never show current cell border / frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowCurrentCellBorder.WhenGridActive">
            <summary>
            Show current cell border when grid is activated.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowCurrentCellBorder.GrayWhenLostFocus">
            <summary>
            Show grayed current cell border when grid is not active control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions">
            <summary>
            Defines options for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.MoveTo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions,System.Boolean)"/> method call.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.None">
            <summary>
            No special options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.NoSelectRange">
            <summary>
            Do not give current cell a range selection (when using Excel-like current cell).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.ScrollInView">
            <summary>
            Scroll new current cell into view.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.NoSetFocus">
            <summary>
            Do not set focus on text box in new current cell, ignoring <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.SetFocus">
            <summary>
            Try to set focus on text box in new current cell, ignoring <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.NoSyncCurrentCell">
            <summary>
            Do not synchronize current cell among grid views showing the same model, ignoring <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShouldSynchronizeCurrentCell"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.ForceRefresh">
            <summary>
            Force new current cell to be redrawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.BeginEndUpdate">
            <summary>
            Sandwich current cell movement with a BeginUpdate / EndUpdate method call pair to reduce flickering.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions.NoActivate">
            <summary>
            Do not active new current cell. Only store row and column index. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridScrollbarMode">
            <summary>
            Specifies scrollbar setting of the grid control with <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.HScrollBehavior"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.VScrollBehavior"/>. You can combine the various options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.DetectIfShared">
            <summary>
            Initial setting. Detect parent view if it has shared scrollbars.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.Disabled">
            <summary>
            Disable scrollbars.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.Enabled">
            <summary>
            Always show scrollbars.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.Automatic">
            <summary>
            Show scrollbars only when necessary.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.Shared">
            <summary>
            Scrollbars are shared with a parent control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.AutoScroll">
            <summary>
            When you resize cells in the grid or when you resize the grid window automatically and
            you are at the last row or column of the grid, automatically scroll the grid so that
            whitespace below or right of the grid is minimal. Starting with version 3.2.1.1 this 
            is now the default behavior. You need to explicitly DisableAutoScroll to disable
            AutoScroll.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridScrollbarMode.DisableAutoScroll">
            <summary>
            When you resize cells in the grid or when you resize the grid window automatically and
            you are at the last row or column of the grid, disable automatically scrolling the grid.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.AutoFitOptions">
            <summary>
            Enables to choose the Option in order to display special characters when the contents in cell exceeds it's width.
            The AutoFitOptions  includes Alphabets, Numeric, Both and None.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCountRecordsBehavior">
            <summary>
            Later ...
            Holds temporary information related to printing. This class will change in future versions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCountRecordsBehavior.CountNever">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCountRecordsBehavior.CountAlways">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCountRecordsBehavior.CountPrint">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags">
            <summary>
            Drag-and-drop options used with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDropTarget"/>,
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDataSource"/>, and <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCutPaste"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.Disabled">
            <summary>
            Disable drop target.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.ColHeader">
            <summary>
            Also copy / move column header cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.RowHeader">
            <summary>
            Also copy / move row header cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.Multiple">
            <summary>
            Allow dragging multiple selections.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.Text">
            <summary>
            Force dragging of CF_TEXT clipboard format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.Styles">
            <summary>
            Force dragging of internal styles format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.Compose">
            <summary>
            When copying internal styles, compose the full style of the cell and do not copy only the cell specific attributes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.AutoScroll">
            <summary>
             Enable autoscroll when user drags out of windows.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.EdgeScroll">
            <summary>
            Enable edgescroll when user drags to the corner of the window.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.NoAppendRows">
            <summary>
            If the user pastes (or drops) more rows than currently available, don't append as many rows as needed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.NoAppendCols">
            <summary>
            If the user pastes (or drops) more columns than currently available, don't append as many columns as needed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.OutlineAppendRows">
            <summary>
            By default if the user drags multiple rows to the bottom of the grid in an ole drag operation the
            outlined rectangle will be clipped at the bottom of the current available rows. If you specify
            this option the new rows will be outlined below the last visible row.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.OutlineAppendCols">
            <summary>
            By default if the user drags multiple columns to the right of the grid in an ole drag operation the
            outlined rectangle will be clipped at the right of the current available columns. If you specify
            this option the new columns will be outlined below the last visible column.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.CheckRangeDim">
            <summary>
            Later ... Paste only: Display "Selected Range is Different"-Dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.EgdeScroll">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFindTextOptions">
            <summary>
            Options for searching text in cells:
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindTextOptions.None">
            <summary>
            Represents None.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindTextOptions.MatchCase">
            <summary>
            Match Case.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindTextOptions.MatchWholeCell">
            <summary>
            Search string should match whole cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindTextOptions.SearchUp">
            <summary>
            Search up.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindTextOptions.SelectionOnly">
            <summary>
            Search only current selection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindTextOptions.ColumnOnly">
            <summary>
            Search only current column.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindTextOptions.WholeTable">
            <summary>
            Search whole table.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCommandMode">
            <summary>
            Defines current undo logging context in the grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCommandMode.Recording">
            <summary>
            Grid is recording commands. This is the default state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCommandMode.Undo">
            <summary>
            Grid is currently in process of undoing commands. <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Undo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCommandMode.Redo">
            <summary>
            Grid is currently in process of redoing commands. <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Redo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCommandMode.Rollback">
            <summary>
            Grid is currently in process of rolling back commands. <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Rollback"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridControllerOptions">
            <summary>
            Specifies which mouse controllers should be enabled for the grid.
            <para/>
               This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </summary>
            <remarks>
            When you assign this enumeration value to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/>,
            the grid will create or disable specified mouse controllers for the grid. Each of these 
            mouse controllers implements the <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> interface and
            gets registered with <see cref="P:Syncfusion.Windows.Forms.ScrollControl.MouseControllerDispatcher"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.None">
            <summary>
            Represents None.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.ClickCells">
            <summary>
            This option enables a mouse controller that handles mouse events for cell elements. Enable this controller if you want cell renderers and
            cell button elements to receive mouse events.
            </summary>
            <remarks>
            In its implementation of <see cref="M:Syncfusion.Windows.Forms.IMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/> this mouse controller determines
            the cell renderer for the cell under the mouse cursor and calls this cell renderers <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnHitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/>
            method. Based on the cell renderers HitTest result, mouse events will be forwarded to that cell.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.DragSelectRowOrColumn">
            <summary>
            This option enables a mouse controller that handles user interaction for dragging selected rows or columns.
            </summary>
            <remarks>
            You can customize the mouse controllers behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/>
            and  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> events.
            <para/>
            You can change various options by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedCols"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedRows"/> in <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Options"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.OleDataSource">
            <summary>
            This option enables a mouse controller that handles user interaction OLE drag support for selected range of cells when the
            user clicks the mouse button on the edge of the selected range.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryCanOleDragRange"/> event.
            <para/>
            You can change various options with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDataSource"/>.
            <para/>
            When you change 
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/> in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/>,
            this will actually end up calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDataSource"/>
            for each associated view.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.OleDropTarget">
            <summary>
            This option enables enables a mouse controller that handles user interaction for OLE drop support when the user drags data 
            from within the grid or an outside application.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by creating an object that implements <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer"/> and register this object
            with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)"/>. This allows you to add support for additional
            clipboard formats to be dragged into the grid from outside applications.
            <para/>
            You can change various options with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDropTarget"/>. 
            <para/>
            When you change 
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/> in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/>
            this will actually end up calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDropTarget"/>
            for each associated view.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.SelectCells">
            <summary>
            This option enables a mouse controller that handles user interaction for selecting cells with the mouse.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> events.
            <para/>
            You can change various options by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.ExcelLikeSelection">
            <summary>
            This option enables Excel-like selection behavior. (It is not really a controller ...) 
            When the user selects a range of cells,
            the active range is outlined with a selection margin and a cross on the bottom-right side.
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ActiveRange"/>
            for <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.SelectedRanges"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.ResizeCells">
            <summary>
            This option enables a mouse controller that handles user interaction for resizing rows or columns with the mouse.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/>
            and  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> events.
            <para/>
            You can change various options by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeColsBehavior"/> in <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Options"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.DragColumnHeader">
            <summary>
            This option enables a mouse controller that provides support for dragging column headers within the
            grid by clicking on a header and dragging it to a new position.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.QueryAllowDragColumnHeader"/> and event.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControllerOptions.All">
            <summary>
            Enable support for all default mouse controllers.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions">
            <summary>
            Specifies which default data consumers should be enabled for the grid.
            <para/>
               This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by creating an object that implements <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer"/> and register this object
            with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)"/>. This allows you to add support for additional
            clipboard formats to be dragged into the grid from outside applications.
            <para/>
            You can change various options with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDropTarget"/>. 
            <para/>
            When you change 
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/> in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/>,
            this will actually end up calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDropTarget"/>
            for each associated view.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions.None">
            <summary>
            No default data objects supported.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions.Styles">
            <summary>
            Enable styles (internal) data objects. This allows you to drag / copy / paste complete cell information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions.Text">
            <summary>
            Enable text data format. This allows you to drag cell values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions.All">
            <summary>
            Enable support for all default data objects.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellTypeName">
            <summary>
            Provides a set of names that can be assigned to a
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </summary>
            <remarks>
            The class defines a default set of names for cell types that are included
            with Essential Grid. 
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.Header">
            <summary>
            A Header cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.Static">
            <summary>
            A Static cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.TextBox">
            <summary>
            A TextBox cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.Image">
            <summary>
            A Image cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridImageCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.CheckBox">
            <summary>
            A CheckBox cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.PushButton">
            <summary>
            A PushButton cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.NumericUpDown">
            <summary>
            A NumericUpDown cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.DropDownGrid">
            <summary>
            A DropDownGrid cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.GridListControl">
            <summary>
            A GridListControl cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.ComboBox">
            <summary>
            A ComboBox cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.ColorEdit">
            <summary>
            A ColorEdit cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.MonthCalendar">
            <summary>
            A MonthCalendar cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.FormulaCell">
            <summary>
            A FormulaCell cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.Currency">
            <summary>
            A Currency cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.MaskEdit">
            <summary>
            A MaskEdit cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.RichText">
            <summary>
            A RichText cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.Control">
            <summary>
            A generic Control cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.OriginalTextBox">
            <summary>
            A OriginalTextBox cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.ProgressBar">
            <summary>
            A ProgressBar cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.RadioButton">
            <summary>
            A RadioButton cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.StandardValuesCell">
            <summary>
            A StandardValuesCell cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.UITypeEditorCell">
            <summary>
            A UITypeEditorCell cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellTypeName.PropertyGridCell">
            <summary>
            A PropertyGridCell cell. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeName.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridException">
            <summary>
            Base class for exceptions thrown inside the grid. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridException.#ctor">
            <overloaded>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridException"/> class.
            </overloaded>
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridException"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridException"/> class with a specified error message
            and a reference to the inner exception that is the root cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception. If the innerException parameter is not a NULL reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridException.#ctor(System.String,Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridException"/> class with a specified error message
            and a reference to a grid.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="grid">A reference to a grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridException.#ctor(System.String,Syncfusion.Windows.Forms.Grid.GridControlBase,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridException"/> class with a specified error message,
            a reference to a grid, and a reference to the inner exception that is the root cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="grid">A reference to a grid.</param>
            <param name="inner">The exception that is the cause of the current exception. If the innerException parameter is not a NULL reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridException"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <override/>
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridException.Message">
            <override/>
            <summary>Gets a message that represents the current exception.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridException.Grid">
            <summary>
            Gets a reference to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider">
            <summary>
            Provides a one-stop place to subscribe to row count, column count, and QueryCellInfo events.
            </summary>
            <remarks>
            You should implement <see cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/> if you want to receive
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> events.
            <para/>
            The methods in this interface are called before the named events are raised and thus
            give you a chance to control the events behavior before other subscribers can handle it.
            <para/>
            You should assign a reference of your object to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/> in order
            to receive the method calls.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.QueryRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.QueryColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.QueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.SaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.NameToColIndex(System.String)">
            <summary>
            Returns the column index for a column that matches a given name.
            </summary>
            <param name="name">The name of the field to be matched.</param>
            <returns>The column index in the grid; -1 if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.NameToRowIndex(System.String)">
            <summary>
            Returns the row index for a row that matches a given name.
            </summary>
            <param name="name">The name of the row to be matched.</param>
            <returns>The row index in the grid; -1 if not found.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColRangeInfoHandler">
            <summary>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridViewLayout.VisitVisibleCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRowColRangeInfoHandler[])"/>.
            </summary>
            <returns>returns GridRangeInfo</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridFocusHelper">
            <summary>
            Provides the <see cref="M:Syncfusion.Windows.Forms.Grid.IGridFocusHelper.GetAllowFixFocus"/> method which is called for the active <see cref="T:Syncfusion.Windows.Forms.IMouseController"/>
            from within the grids <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)"/> handler to determine if the grid should set focus to the
            active current cells <see cref="T:System.Windows.Forms.Control"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridFocusHelper.GetAllowFixFocus">
            <summary>
            Implement this method in your <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> and return False if it would interfere with your 
            controller's state when the current cell is focused and possibly scrolled into view.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the grid is allowed to set the focus onto the current cells <see cref="T:System.Windows.Forms.Control"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridDrawSelectionFrame">
            <summary>
            Provides the <see cref="M:Syncfusion.Windows.Forms.Grid.IGridDrawSelectionFrame.DrawSelectionFrame(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Drawing.Graphics,System.Boolean,Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> method which is internally used for drawing of Excel-like selection frame.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDrawSelectionFrame.DrawSelectionFrame(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Drawing.Graphics,System.Boolean,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Internally used for drawing of Excel-like selection frame.
            </summary>
            <param name="pGrid">The grid control</param>
            <param name="g">The graphics</param>
            <param name="bDrawOld">The draw old</param>
            <param name="pNewRange">The GridRangeInfo</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridUserCanceledException">
            <summary>
            Use GridUserCanceledException when the user cancels an operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUserCanceledException.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridUserCanceledException"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUserCanceledException.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridUserCanceledException"/> with a specified message.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUserCanceledException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridUserCanceledException"/> with a specified message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message text</param>
            <param name="inner">The source of the exception.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUserCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridUserCanceledException"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUserCanceledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <override/>
            <override/>
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridUserCanceledException.Message">
            <override/>
            <override/>
            <summary>Gets a message that represents the current exception.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridUtil">
            <summary>
            This class provides static helper functions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridUtil.AnyRight">
            <summary>
            Align to right on surface.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridUtil.AnyBottom">
            <summary>
            Align at bottom on surface.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridUtil.AnyCenter">
            <summary>
            Align horizontally centered on surface.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridUtil.AnyMiddle">
            <summary>
            Align vertically centered on surface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.DrawDragRectHelper(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.Draw3dFrame(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.IsSet(System.Int32,System.Int32)">
            <summary>
            Used internally.
            </summary>
            <param name="value">The value.</param>
            <param name="flags">The flags.</param>
            <returns>
            <c>true</c> if the specified value is set; otherwise, <c>false</c>.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.IsNotSet(System.Int32,System.Int32)">
            <summary>
            Used internally.
            </summary>
            <param name="value">The value.</param>
            <param name="flags">The flags.</param>
            <returns>
            <c>true</c> if [is not set] [the specified value]; otherwise, <c>false</c>.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.AllSet(System.Int32,System.Int32)">
            <summary>
            Internal only.
            </summary>
            <param name="value">The value.</param>
            <param name="flags">The flags.</param>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.ClearBits(System.Int32@,System.Int32)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.MinMax(System.Int32,System.Int32,System.Int32)">
            <overload>
            Returns the value not smaller and not larger than a specified range.
            </overload>
            <summary>
            Returns the value not smaller and not larger than a specified range.
            </summary>
            <param name="value">The value to compare.</param>
            <param name="min">The smallest value.</param>
            <param name="max">The largest value.</param>
            <returns>The value not smaller than min and and not larger than max.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.MinMax(System.Single,System.Single,System.Single)">
            <summary>
            Returns the value not smaller and not larger than a specified range.
            </summary>
            <param name="value">The value to compare.</param>
            <param name="min">The smallest value.</param>
            <param name="max">The largest value.</param>
            <returns>The value not smaller than min and and not larger than max.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.MinMax(System.Double,System.Double,System.Double)">
            <summary>
            Returns the value not smaller and not larger than a specified range.
            </summary>
            <param name="value">The value to compare.</param>
            <param name="min">The smallest value.</param>
            <param name="max">The largest value.</param>
            <returns>The value not smaller than min and and not larger than max.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.MinMax(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns the value not smaller and not larger than a specified range.
            </summary>
            <param name="point">The value to compare.</param>
            <param name="min">The smallest value.</param>
            <param name="max">The largest value.</param>
            <returns>The value not smaller than min and and not larger than max.</returns>
            <remarks>
            The calculation is made for both the X and Y coordinates separately.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.MinMax(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Returns the value not smaller and not larger than a specified range.
            </summary>
            <param name="point">The value to compare.</param>
            <param name="bounds">The rectangle with bounds.</param>
            <returns>The value not smaller than min and and not larger than max.</returns>
            <remarks>
            The calculation is made for both the X and Y coordinates separately and compared
            with the rectangles boundaries.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.Min(System.Drawing.Point,System.Drawing.Point)">
            <overload>
            Returns the point with smaller value for X and Y coordinates each of two points.
            </overload>
            <summary>
            Returns the point with smaller value for X and Y coordinates each of two points.
            </summary>
            <param name="point1">The first point to compare.</param>
            <param name="point2">The second point to compare.</param>
            <returns>The point with smaller value for X and Y coordinates each of two points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.Max(System.Drawing.Point,System.Drawing.Point)">
            <overload>
            Returns the point with larger value for X and Y coordinates each of two points.
            </overload>
            <summary>
            Returns the point with larger value for X and Y coordinates each of two points.
            </summary>
            <param name="point1">The first point to compare.</param>
            <param name="point2">The second point to compare.</param>
            <returns>The point with larger value for X and Y coordinates each of two points.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.Min(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Returns the size with smaller value for Width and Height coordinates for each of two values.
            </summary>
            <param name="size1">The first size to compare.</param>
            <param name="size2">The second size to compare.</param>
            <returns>The size with smaller value for Width and Height coordinates for each of two values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.Max(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Returns the size with larger value for Width and Height coordinates for each of two values.
            </summary>
            <param name="size1">The first size to compare.</param>
            <param name="size2">The second size to compare.</param>
            <returns>The size with larger value for Width and Height coordinates for each of two values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.OffsetLeft(System.Drawing.Rectangle@,System.Int32)">
            <overload>
            Increments the left coordinate of the rectangle only, the right coordinate remains the same.
            </overload>
            <summary>
            Increments the left coordinate of the rectangle only, the right coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="dx">The delta for changing the left bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.OffsetTop(System.Drawing.Rectangle@,System.Int32)">
            <overload>
            Increments the top coordinate of the rectangle only, the bottom coordinate remains the same.
            </overload>
            <summary>
            Increments the top coordinate of the rectangle only, the bottom coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="dy">The delta for changing the top bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.OffsetLeftTop(System.Drawing.Rectangle@,System.Int32,System.Int32)">
            <overload>
            Increments the top and left coordinate of the rectangle only, the bottom and right coordinates remain the same.
            </overload>
            <summary>
            Increments the top and left coordinate of the rectangle only, the bottom and right coordinates remain the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="dx">The delta for changing the left bounds of the rectangle.</param>
            <param name="dy">The delta for changing the top bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SetLeft(System.Drawing.Rectangle@,System.Int32)">
            <overload>
            Changes the left coordinate of the rectangle only, the right coordinate remains the same.
            </overload>
            <summary>
            Changes the left coordinate of the rectangle only, the right coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="x">The new value for the left bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SetRight(System.Drawing.Rectangle@,System.Int32)">
            <summary>
            Changes the right coordinate of the rectangle only, the left coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="x">The new value for the right bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SetTop(System.Drawing.Rectangle@,System.Int32)">
            <overload>
            Changes the top coordinate of the rectangle only, the bottom coordinate remains the same.
            </overload>
            <summary>
            Changes the top coordinate of the rectangle only, the bottom coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="y">The new value for the top bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.OffsetLeft(System.Drawing.RectangleF@,System.Single)">
            <summary>
            Increments the left coordinate of the rectangle only, the right coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="dx">The delta for changing the left bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.OffsetTop(System.Drawing.RectangleF@,System.Single)">
            <summary>
            Increments the top coordinate of the rectangle only, the bottom coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="dy">The delta for changing the top bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.OffsetLeftTop(System.Drawing.RectangleF@,System.Single,System.Single)">
            <summary>
            Increments the top and left coordinate of the rectangle only, the bottom and right coordinates remain the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="dx">The delta for changing the left bounds of the rectangle.</param>
            <param name="dy">The delta for changing the top bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SetLeft(System.Drawing.RectangleF@,System.Single)">
            <summary>
            Changes the left coordinate of the rectangle only, the right coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="x">The new value for the left bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SetTop(System.Drawing.RectangleF@,System.Single)">
            <summary>
            Changes the top coordinate of the rectangle only, the bottom coordinate remains the same.
            </summary>
            <param name="r">The rectangle to be modified.</param>
            <param name="y">The new value for the top bounds of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.Loword(System.Int32)">
            <summary>
            Returns the low word of an integer.
            </summary>
            <param name="n">The integer.</param>
            <returns>The low word.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.Hiword(System.Int32)">
            <summary>
            Returns the high word of an integer.
            </summary>
            <param name="n">The integer.</param>
            <returns>The high word.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.MakeLong(System.Int32,System.Int32)">
            <summary>
            Creates a long from two integers.
            </summary>
            <param name="low">The low word.</param>
            <param name="high">The high word.</param>
            <returns>The combined value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SignedHIWORD(System.IntPtr)">
            <summary>
            Internal only.
            </summary>
            <returns>returns Int SignedHIWORD</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SignedHIWORD(System.Int32)">
            <summary>
            Used internally.
            </summary>
            <returns>returns Int SignedHIWORD</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SignedLOWORD(System.Int32)">
            <summary>
            Used internally.
            </summary>
            <returns>returns Int SignedLOWORD</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SignedLOWORD(System.IntPtr)">
            <summary>
            Signeds the LOWORD.
            </summary>
            <returns>Returns int SignedLOWOR</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.IsNotValidNumber(System.Double)">
            <overload>
            Checks if value is double.NaN or float.NaN.
            </overload>
            <summary>
            Checks if value is double.NaN.
            </summary>
            <param name="b">The value to compare.</param>
            <returns>True if this is is double.NaN.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.IsNotValidNumber(System.Single)">
            <summary>
            Checks if value is float.NaN.
            </summary>
            <param name="b">The value to compare.</param>
            <returns>True if this is is double.NaN.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.IsEmpty(System.String)">
            <summary>
            Checks if the string is NULL or length is 0.
            </summary>
            <param name="str">The string to be checked.</param>
            <returns>True if string is NULL or length is 0.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.SwapAlignment(System.Drawing.StringAlignment)">
            <summary>
            Swaps the <see cref="T:System.Drawing.StringAlignment"/> from Near to Far and vice versa.
            </summary>
            <param name="alignment">The value to be converted.</param>
            <returns>The resulting <see cref="T:System.Drawing.StringAlignment"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.ConvertToStringAlignment(Syncfusion.Windows.Forms.Grid.GridVerticalAlignment)">
            <overload>
            Creates a <see cref="T:System.Drawing.StringAlignment"/> from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/> or  <see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>.
            </overload>
            <summary>
            Creates a <see cref="T:System.Drawing.StringAlignment"/> from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>.
            </summary>
            <param name="align">The value to be converted.</param>
            <returns>The resulting <see cref="T:System.Drawing.StringAlignment"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.ConvertToStringAlignment(Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment)">
            <summary>
            Creates a <see cref="T:System.Drawing.StringAlignment"/> from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>.
            </summary>
            <param name="align">The value to be converted.</param>
            <returns>The resulting <see cref="T:System.Drawing.StringAlignment"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.ConvertToContentAlignment(Syncfusion.Windows.Forms.Grid.GridVerticalAlignment)">
            <overload>
            Creates a <see cref="T:System.Drawing.ContentAlignment"/> from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/> or  <see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>.
            </overload>
            <summary>
            Creates a <see cref="T:System.Drawing.ContentAlignment"/> from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>.
            </summary>
            <param name="align">The value to be converted.</param>
            <returns>The resulting <see cref="T:System.Drawing.ContentAlignment"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.ConvertToContentAlignment(Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment)">
            <summary>
            Creates a <see cref="T:System.Drawing.ContentAlignment"/> from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>.
            </summary>
            <param name="align">The value to be converted.</param>
            <returns>The resulting <see cref="T:System.Drawing.ContentAlignment"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.CenterInRect(System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            Returns a centered rectangle of a specified size within a given rectangle.
            </summary>
            <param name="rect">The outer rectangle.</param>
            <param name="size">The size of the rectangle to be centered.</param>
            <returns>The centered rectangle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.CenterPoint(System.Drawing.Rectangle)">
            <summary>
            Returns a centered point within a given rectangle.
            </summary>
            <param name="rect">The outer rectangle.</param>
            <returns>The centered point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.GetParentFrame(System.Windows.Forms.Control)">
            <summary>
            Gets the form that the control is assigned to.
            </summary>
            <param name="control">The control whose parent form is searched.</param>
            <returns>The parent form of the control or NULL.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.IsActiveControl(System.Windows.Forms.Control)">
            <summary>
            Returns a value indicating if the control is the active control in the parent container.
            </summary>
            <param name="control">The control to be tested.</param>
            <returns>True if active; False otherwise.</returns>
            <seealso cref="T:System.Windows.Forms.IContainerControl"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUtil.GetParentControl(System.Windows.Forms.Control,System.Type)">
            <summary>
            Gets the parent control of a specific type that the control is assigned to.
            </summary>
            <param name="control">The control whose parent form is searched.</param>
            <param name="type">The type of the parent control to search.</param>
            <returns>The parent control or NULL.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool">
            <summary>
            Provides storage for bannered cells in the grid and allows a fast way to look up if a specific cell
            is part of a bannered range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.innerRows">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool"/>
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.ResetSpanCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Resets spanned cells in the specified range.
            </overload>
            <summary>
            Resets spanned cells in the specified range.
            </summary>
            <param name="range">The range to be reset.</param>
            <returns>True if changes were made; False if there were no bannered ranges.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.ResetSpanCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Resets spanned cells in the specified range.
            </summary>
            <param name="range">The range to be reset.</param>
            <param name="checkContainment">True if only bannered cells should be reset that are contained in the <paramref name="range"/>.</param>
            <returns>True if changes were made; False if there were no bannered ranges.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.StoreSpanCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Saves the bannered cell's information for a specific range.
            </summary>
            <param name="range">The bannered cell's range to be saved.</param>
            <returns>True if successful; False if there was an error or a range was already existing.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.GetSpanCellsRowCol(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Returns the bannered range information for a cell specified with row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">A place holder where bannered cell's range information is returned.</param>
            <returns>True if a bannered cell was found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.Clear">
            <summary>
            Clears all bannered ranges from this pool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.InitFromRangeList(Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool.InitFromRangeList(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes the pool with bannered range information from a range list.
            </summary>
            <param name="ranges">The range list with all bannered cells.</param>
            <param name="model">Grid Model.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellInfo">
            <summary>
                Defines a specific cell in the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfo.#ctor">
            <overload>
              <para>Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object.</para>
            </overload>
            <summary>
              <para>Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object.</para>
            </summary>
            <remarks>
              <para>This constructor initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object with default values.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfo.#ctor(System.Int32,System.Int32)">
            <overload>
              <para>Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object.</para>
            </overload>
            <summary>
              <para>Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object.</para>
            </summary>
            <param name="row">Row index.</param>
            <param name="col">Column index.</param>
            <remarks>
              <para>This constructor initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object representing a specific cell with default <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfo.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <overload>
              <para>Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object.</para>
            </overload>
            <summary>
              <para>Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object.</para>
            </summary>
            <param name="row">Row index.</param>
            <param name="col">Column index.</param>
            <param name="styleInfoStore">The style information for the cell.</param>
            <remarks>
              <para>This constructor initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> object with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> defined by the supplied <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/>.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfo.Dispose">
            <override/>
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo">GridCellInfo</see>.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellInfo.Row">
            <summary>
            Gets or sets the Row in the grid that the cell belongs to     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellInfo.Col">
            <summary>
             Gets or sets the Column in the grid that the cell belongs to     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellInfo.StyleInfo">
            <copyfrom cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            <summary>
            Gets or sets the style object that contains the cell information.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellInfoCollectionEditor">
            <summary>For internal use.</summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEditor"/> object.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm"/> to provide as the user interface for editing the collection.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection">
            <summary>
                A collection that stores 'GridCellInfo' objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.#ctor">
            <summary>
                Initializes a new instance of 'GridCellInfoCollection'.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridCellInfoCollection)">
            <summary>
                Initializes a new instance of 'GridCellInfoCollection' based on an already existing instance.
            </summary>
            <param name='griValue'>
                A 'GridCellInfoCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridData)">
            <summary>
                <para>Initializes a new instance of the GridCellInfoCollection class based on an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object.</para>
            </summary>
            <param name="gdata" type="Syncfusion.Windows.Forms.Grid.GridData">
                <para>
                    The Data to construct the new collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.#ctor(Syncfusion.Collections.SFTable)">
            <summary>
                <para>Initializes a new instance of the GridCellInfoCollection class based on an existing Data object.</para>
            </summary>
            <param name="newdata" type="Syncfusion.Collections.SFTable">
                <para>
                    The Data to construct the new collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.#ctor(Syncfusion.Collections.SFTable,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the GridCellInfoCollection class based on an existing Data object.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridCellInfo[])">
            <summary>
                Initializes a new instance of 'GridCellInfoCollection' with an array of 'GridCellInfo' objects.
            </summary>
            <param name='griValue'>
                An array of 'GridCellInfo' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.Add(Syncfusion.Windows.Forms.Grid.GridCellInfo)">
            <summary>
                Adds a 'GridCellInfo' item with the specified value to the 'GridCellInfoCollection'
            </summary>
            <param name='griValue'>
                The 'GridCellInfo' to add.
            </param>
            <returns>
                The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridCellInfo[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'GridCellInfoCollection'.
            </summary>
            <param name='griValue'>
                An array of 'GridCellInfo' objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridCellInfoCollection)">
            <summary>
                Adds the contents of another 'GridCellInfoCollection' at the end of this instance.
            </summary>
            <param name='griValue'>
                A 'GridCellInfoCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.Contains(Syncfusion.Windows.Forms.Grid.GridCellInfo)">
            <summary>
                Gets a value indicating whether the 'GridCellInfoCollection' contains the specified value.
            </summary>
            <param name='griValue'>
                The item to locate.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridCellInfo[],System.Int32)">
            <summary>
                Copies the 'GridCellInfoCollection' values to a one-dimensional System.Array
                instance starting at the specified array index.
            </summary>
            <param name='griArray'>
                The one-dimensional System.Array that represents the copy destination.
            </param>
            <param name='intIndex'>
                The index in the array where copying begins.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridCellInfo)">
            <summary>
                Returns the index of a 'GridCellInfo' object in the collection.
            </summary>
            <param name='griValue'>
                The 'GridCellInfo' object whose index will be retrieved.
            </param>
            <returns>
                If found, the index of the value; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellInfo)">
            <summary>
                Inserts an existing 'GridCellInfo' into the collection at the specified index.
            </summary>
            <param name='intIndex'>
                The zero-based index where the new item should be inserted.
            </param>
            <param name='griValue'>
                The item to insert.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GetEnumerator">
            <summary>
                Returns an enumerator that can be used to iterate through
                the 'GridCellInfoCollection'.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.Remove(Syncfusion.Windows.Forms.Grid.GridCellInfo)">
            <summary>
                Removes a specific item from the 'GridCellInfoCollection'.
            </summary>
            <param name='griValue'>
                The item to remove from the 'GridCellInfoCollection'.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before setting an item in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.OnInsert(System.Int32,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before inserting a new item in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.Item(System.Int32)">
            <summary>
                Represents the 'GridCellInfo' item at the specified index position.
            </summary>
            <param name='intIndex'>
                The zero-based index of the entry to locate in the collection.
            </param>
            <value>
                The entry at the specified index of the collection.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator">
            <summary>
                A strongly typed enumerator for 'GridCellInfoCollection'
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridCellInfoCollection)">
            <summary>
                Enumerator constructor
            </summary>
            <param name="griMappings">A collection of GridCellInfo objects.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator.MoveNext">
            <summary>
                Advances the enumerator to the next element of the collection
            </summary>
            <returns>True if next element exists; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator.Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator.Current">
            <summary>
                Gets the current element from the collection (strongly typed)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellInfoCollection.GridCellInfoEnumerator.System#Collections#IEnumerator#Current">
            <summary>
                Gets the current element from the collection
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellInfoTypeConverter">
            <summary>
            The type converter for <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> objects. <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfoTypeConverter"/> 
            is a <see cref="T:System.ComponentModel.ExpandableObjectConverter"/>. It overrides the default behavior of the 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellInfoTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/> method and adds support for design-time code serialization.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>
            <param name="context">Format
            context. </param>
            <param name="destinationType">The type you want to convert to. </param>       
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">Format
            context. </param>
            <param name="culture">Current culture information.</param>
            <returns>
            <param name="value">The object to convert. </param>
            <param name="destinationType">The type to convert the
            value parameter to. </param>        
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellInfoTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <override/>
            <summary>
            A collection of properties for a specified type.
            </summary>
            <param name="context">Format context.</param>
            <param name="value">The type of array for which to get properties.</param>
            <param name="attributes">A list of System.Atribute objects that will be used as a filter.</param>
            <returns>A collection of properties.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> objects in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            On the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>, you access the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/> property.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> uses standard <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Add(System.String,Syncfusion.Windows.Forms.Grid.GridCellModelBase)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Remove(System.String)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
            <example>
            TODO: Show how to register cell types.
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelBound">
            <summary>
            Abstract base class for objects that are associated with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBound.#ctor">
            <overload>
            Initializes <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBound"/>.
            </overload>
            <summary>
            Initializes <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBound"/> with a NULL pointer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBound.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBound.OnModelDeserialization(System.Object,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            This is called after the model has been deserialized from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> implementation of <see cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="model">Reference to the  <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this object is associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBound.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBound"/> with a reference to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">Reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this object is associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBound.SetModelInt(Syncfusion.Windows.Forms.Grid.GridModel)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelBound.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this object is associated with.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> that owns this collection of cell types.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.OnModelDeserialization(System.Object,Syncfusion.Windows.Forms.Grid.GridModel)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Clone">
            <summary>
            Creates a copy of this object using <see cref="M:System.Object.MemberwiseClone"/>.
            </summary>
            <returns>An exact copy of this object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellModelsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.GetEnumerator">
            <summary>
              <para>Returns an enumerator that can iterate through the cell model dictionary.</para>
            </summary>
            <returns>
              <para>An <see cref="T:System.Collections.IEnumerator"/> that can iterate through the string dictionary.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Remove(System.String)">
            <summary>
              <para>Removes the entry with the specified cellTypeName from the cell model dictionary.</para>
            </summary>
            <param name="cellTypeName">The cellTypeName of the entry to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridCellModelBase[],System.Int32)">
            <summary>
              <para>Copies the cell model dictionary values to a one-dimensional <see cref="T:System.Array"/> instance at the
            specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</param>
            <param name="index">The index in the array where copying begins.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.ContainsValue(Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
              <para>Determines if the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> contains a specific value.</para>
            </summary>
            <param name="cellModel">The value to locate in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</param>
            <returns>
              <para>
                <see langword="true"/> if the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> contains an element with the specified value;
            otherwise, <see langword="false"/>. </para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.ContainsKey(System.String)">
            <summary>
              <para>Determines if the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> contains a specific cellTypeName.</para>
            </summary>
            <param name="cellTypeName">The cellTypeName to locate in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</param>
            <returns>
              <para>
                <see langword="true"/> if the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> contains an entry with the specified cellTypeName;
            otherwise, <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Clear">
            <summary>
              <para>Removes all entries from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Add(System.String,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
              <para>Adds cell model with the specified cellTypeName into the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</para>
            </summary>
            <param name="cellTypeName">The cellTypeName of the entry to add.</param>
            <param name="model">The cell model of the entry to add.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.DefaultCellType">
            <summary>
            Gets or sets the default cell type to be used for cells where a specific cell type could not be loaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Values">
            <summary>
              <para>Gets a collection of values in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.SyncRoot">
            <summary>
              <para>Gets an object that can be used to synchronize access to
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Keys">
            <summary>
              <para>Gets a collection of cellTypeNames in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Item(System.String)">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for the specific cell type name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.IsSynchronized">
            <summary>
             <para>Gets a value indicating whether access to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> is synchronized (thread-safe).</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellModelCollection.Count">
            <summary>
              <para>Gets the number of cellTypeName-and-value pairs in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollectionEditor">
            <summary>
            Provides a collection editor that is tailored to adding, removing, and changing column styles from
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollectionEditor"/> with a
            type to create instances for collection items.
            </summary>
            <param name="type">Type for collection item.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollectionEditor.CreateCollectionItemType">
            <summary>
            Gets the data type that this collection contains.
            </summary>
            <returns>
            The data type of the items in the collection, or an <see cref="T:System.Object"/> if no Item property can be located on the collection.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            Indicates whether original members of the collection can be removed.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>
            true if it is permissible to remove this value from the collection; otherwise, false. The default implementation always returns true.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of the specified collection item type.
            </summary>
            <param name="itemType">The type of item to create.</param>
            <returns>A new instance of the specified object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the specified service provider and context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services can be obtained.</param>
            <param name="value">The object to edit the value of.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellValueConvert">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValueConvert"/> provides conversion routines for cell values
            to convert them to another type and routines for formatting cell values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueConvert.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter">
            <summary>
            Implements a <see cref="T:System.ComponentModel.TypeConverter"/> for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> property in
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert an object of the given type to the
            type of this converter, using the specified context.
            </summary>
            <param name="context">Format context. </param>
            <param name="sourceType">The type
            you want to convert from. </param>       
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <override/>
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>
            <param name="context">Format context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>        
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">Format context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <param name="destinationType">The type to convert the
            value parameter to. </param>        
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns a collection of standard values for the data type this type converter is
            designed for when provided with a format context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context that can be used to extract additional information about the environment
            from which this converter is invoked. This parameter or properties of this
            parameter can be null. </param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
            that holds a standard set of valid values, or null if the data type does not
            support a standard set of values.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether the collection of standard values returned from <see
            cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an
            exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">Format context. </param>
            <returns>returns False. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether this object supports a standard set of values that can be picked
            from a list, using the specified context.
            </summary>
            <param name="context">Format context. </param>
            <returns>returns True. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValueTypeConverter.#cctor">
            <summary>
            Static Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/> items with information about column hidden state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.#ctor">
            <overload>
            Initializes a new empty collection.
            </overload>
            <summary>
            Initializes a new empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridColHidden[])">
            <summary>
            Adds multiple GridColHidden items.
            </summary>
            <param name="colHiddens">The Array with elements that should be added to the end of the collection. 
            The array and its elements cannot be NULL references (Nothing in Visual Basic). 
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.OnChanging(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Changing"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.OnChanged(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Changed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.InternalEquals(Syncfusion.Windows.Forms.Grid.GridColHiddenCollection)">
            <summary>
            Compares each element with the element of another collection.
            </summary>
            <param name="other">The collection to compare to.</param>
            <returns>True if all elements are equal and in the same order; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Contains(Syncfusion.Windows.Forms.Grid.GridColHidden)">
            <summary>
            Determines if the element belongs to this collection.
            </summary>
            <param name="value">The Object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridColHidden)">
            <summary>
            Returns the zero-based index of the occurrence of the element in the collection.
            </summary>
            <param name="value">The element to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the element within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridColHidden[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ArrayList. The Array must have zero-based indexing. </param>
            <param name="index">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection
            </summary>
            <returns>An IEnumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridColHidden)">
            <summary>
            Inserts a GridColHidden element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the element should be inserted.</param>
            <param name="value">The element to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Remove(Syncfusion.Windows.Forms.Grid.GridColHidden)">
            <summary>
            Removes the specified GridColHidden element from the collection.
            </summary>
            <param name="value">The GridColHidden to remove from the collection. If the value is NULL or the element is not contained
            in the collection the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Add(Syncfusion.Windows.Forms.Grid.GridColHidden)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="value">The element to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The new Count.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Dispose">
            <summary>
            Disposes the object and collection items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.IsModified">
            <summary>
            Gets or sets a value indicating whether the collection is modified from its default state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Item(System.Int32)">
            <summary>
            Gets / sets the element at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.SyncRoot">
            <summary>
            Gets not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether collection has no fixed size. Normally false since this collection has no fixed size. Only when it is Read-only 
            IsFixedHide returns True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether is Synchronized. Returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection.Count">
            <summary>
            Gets the number of elements contained in the collection. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColHiddenCollectionEnumerator">
            <summary>
            Enumerator class for <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/> elements of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollectionEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridColHiddenCollection)">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenCollectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHiddenCollectionEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColHidden">
            <summary>
            ColHiddens are managed by the <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHiddenCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHidden.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHidden.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the currentobject.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHidden.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/>.
            </summary>
            <param name="colIndex">The column index to be hidden.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHidden.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHidden.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColHidden.ColIndex">
            <summary>
            Gets or sets the ColIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColHiddenTypeConverter">
            <summary>
            The type converter for <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/> objects. <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHiddenTypeConverter"/> 
            is a <see cref="T:System.ComponentModel.ExpandableObjectConverter"/>. It overrides the default behavior of the 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridColHiddenTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/> method and adds support for design-time code serialization.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>
            <param name="context">Format context. </param>
            <param name="destinationType">A Type object that represents the
            type you want to convert to. </param>       
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColHiddenTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">Format context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <param name="destinationType">The type to convert the
            value parameter to. </param>       
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColWidthCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/> items with information about column widths.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.ToString">
            <override/>
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.#ctor">
            <overload>
            Initializes a new empty collection.
            </overload>
            <summary>
            Initializes a new empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridColWidth[])">
            <summary>
            Adds multiple GridColWidth items.
            </summary>
            <param name="colWidths">The Array with elements that should be added to the end of the collection. 
            The array and its elements cannot be NULL references (Nothing in Visual Basic). 
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.OnChanging(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Changing"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.OnChanged(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Changed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.InternalEquals(Syncfusion.Windows.Forms.Grid.GridColWidthCollection)">
            <summary>
            Compares each element with the element of another collection.
            </summary>
            <param name="other">The collection to compare to.</param>
            <returns>True if all elements are equal and in the same order; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Contains(Syncfusion.Windows.Forms.Grid.GridColWidth)">
            <summary>
            Determines if the element belongs to this collection.
            </summary>
            <param name="value">The Object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridColWidth)">
            <summary>
            Returns the zero-based index of the occurrence of the element in the collection.
            </summary>
            <param name="value">The element to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the element within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridColWidth[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ArrayList. The Array must have zero-based indexing. </param>
            <param name="index">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An IEnumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridColWidth)">
            <summary>
            Inserts a GridColWidth element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the element should be inserted.</param>
            <param name="value">The element to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Remove(Syncfusion.Windows.Forms.Grid.GridColWidth)">
            <summary>
            Removes the specified GridColWidth element from the collection.
            </summary>
            <param name="value">The GridColWidth to remove from the collection. If the value is NULL or the element is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Add(Syncfusion.Windows.Forms.Grid.GridColWidth)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="value">The element to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The new count.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Dispose">
            <summary>
            Disposes the object and collection items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.IsModified">
            <summary>
            Gets or sets a value indicating whether the collection is modified from its default state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Item(System.Int32)">
            <summary>
            Gets / sets the element at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.SyncRoot">
            <summary>
            Gets not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether this collection has no fixed size. Returns normally False since this collection has no fixed size. Only when it is Read-only 
            IsFixedSize returns True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether IsSynchronized. Returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollection.Count">
            <summary>
            Gets the number of elements contained in the collection. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColWidthCollectionEnumerator">
            <summary>
            Enumerator class for <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/> elements of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidthCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollectionEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridColWidthCollection)">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthCollectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidthCollectionEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColWidth">
            <summary>
            ColWidths are managed by the <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidthCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidth.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/>
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidth.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidth.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/>.
            </summary>
            <param name="colIndex">Column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidth.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/>.
            </summary>
            <param name="colIndex">Column index.</param>
            <param name="width">Width for the column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidth.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidth.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidth.Width">
            <summary>
            Gets or sets the col width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridColWidth.ColIndex">
            <summary>
            Gets or sets the ColIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridColWidthTypeConverter">
            <summary>
            The type converter for <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/> objects. <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidthTypeConverter"/> 
            is a <see cref="T:System.ComponentModel.ExpandableObjectConverter"/>. It overrides the default behavior of the 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridColWidthTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/> method and adds support for design-time code serialization.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>
            <param name="context">Format context. </param>
            <param name="destinationType">The type you want to convert to. </param>       
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">Format context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <param name="destinationType">The type to convert the
            value parameter to. </param>       
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridColWidthTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <override/>
            <summary>
            A collection of properties for a specified type.
            </summary>
            <param name="context">Format context.</param>
            <param name="value">Type information.</param>
            <param name="attributes">A list of System.Attribute objects that will be used as a filter.</param>
            <returns>A collection of properties.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelCommand">
            <summary>
            A class that encapsulates a command to be executed at a later point in time.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.ComponentModel.SyncfusionCommand.Execute"/> method is overriden in specialized command classes and
            performs the command that is saved in this command.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommand.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommand"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommand"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommand"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this command is executed on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommand.SetDescription(System.String)">
            <summary>
            Changes the description of this command.
            </summary>
            <param name="value">The new description text.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommand.Grid">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this command is executed on.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand">
            <summary>
            Holds a collection of <see cref="T:Syncfusion.ComponentModel.SyncfusionCommand"/> objects that should all be executed together as one command
            when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Undo"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Redo"/> of a grid <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CommandStack"/>
            is called.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/> of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CommandStack"/> object will create
            a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> object and redirect subsequent commands into the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> object 
            until <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CommitTrans"/> is called.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelCommandManager)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/>.
            </summary>
            <param name="commandStack">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/> this command should be executed on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelCommandManager,System.String)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/> and sets a description text.
            </summary>
            <param name="commandStack">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/> this command should be executed on.</param>
            <param name="s">The description text for this command.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.Execute">
            <override/>
            <summary>Executes the command.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.Push(Syncfusion.ComponentModel.SyncfusionCommand)">
            <summary>
            Adds a new command to the current transaction.
            </summary>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.Peek">
            <summary>
            Returns a reference to the latest command in the stack and leaves the command on the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.ComponentModel.SyncfusionCommand"/> command.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.Pop">
            <summary>
            Returns a reference to the latest command in the stack and removes the command from the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.ComponentModel.SyncfusionCommand"/> command.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTransactionCommand.Stack">
            <summary>
            Gets a reference to the stack with all commands that belong to this transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridChangeCellsCommand">
            <summary>
            Holds undo information about a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> operation.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridChangeCellsCommand.Execute"/> method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> 
            with information stored in this object and scroll the affect range into the current grid view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridChangeCellsCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridChangeCellsCommand"/> with information how to execute
            a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> command at a later time.
            </summary>
            <param name="table">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this command is associated with.</param>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="cellsInfo">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> objects that holds cell information.</param>
            <param name="modifyType">A <see cref="T:Syncfusion.Styles.StyleModifyType"/> that specifies the style operation to be performed.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridChangeCellsCommand.Execute">
            <override/>
            <summary>Executes the command.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand">
            <summary>
            Holds undo information about the selection state at a previous operation.
            </summary>
            <remarks>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand"/> is created by the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CreateSelectionStateCommand"/>
            of <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CommandStack"/>. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModel,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo[])">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand"/> with information
            about current cell position and selected ranges.
            </summary>
            <param name="table">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this command is associated with.</param>
            <param name="currentRow">The row index of current cell.</param>
            <param name="currentCol">The column index of current cell.</param>
            <param name="ranges">The currently selected ranges.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand.Execute">
            <override/>
            <summary>Executes the command.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellValueCommand">
            <summary>
            Holds undo information about the current cells value.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellValueCommand.Execute"/> method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/> 
            and then set the associated renderer's <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlValue"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellValueCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModel,System.Int32,System.Int32,System.Object)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand"/> with information
            about current cell position and selected ranges.
            </summary>
            <param name="table">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this command is associated with.</param>
            <param name="currentRow">The row index of current cell.</param>
            <param name="currentCol">The column index of current cell.</param>
            <param name="value">The current cells value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellValueCommand.Execute">
            <override/>
            <summary>
            This method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.BeginEdit"/> 
            and then set the associated renderer's <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.ControlValue"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelSetCoveredRangesCommand">
            <summary>
            Holds undo information about a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> or
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> operation on a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRanges"/>
            property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSetCoveredRangesCommand.Execute"/> method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.SetCoveredRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/>
            with information stored in this object and scroll the affect range into the current grid view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetCoveredRangesCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges,Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelSetCoveredRangesCommand"/> with information how to execute
            a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.SetCoveredRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/> method at a later time.
            </summary>
            <param name="cr">A reference to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRanges"/> object.</param>
            <param name="ranges">The list with ranges that should be changed.</param>
            <param name="setOrReset">True if ranges should be made covered; False if covered ranges should be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetCoveredRangesCommand.Execute">
            <override/>
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelSetBanneredRangesCommand">
            <summary>
            Holds undo information about a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> or
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> operation on a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRanges"/>
            property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSetBanneredRangesCommand.Execute"/> method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.SetBanneredRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/>
            with information stored in this object and scroll the affect range into the current grid view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetBanneredRangesCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges,Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelSetBanneredRangesCommand"/> with information how to execute
            a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.SetBanneredRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/> method at a later time.
            </summary>
            <param name="cr">A reference to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRanges"/> object.</param>
            <param name="ranges">The list with ranges that should be changed.</param>
            <param name="setOrReset">True if ranges should be made bannered; False if bannered ranges should be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetBanneredRangesCommand.Execute">
            <override/>
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeCommand">
            <summary>
            Holds undo information about a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/> operation.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeCommand.Execute"/> method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/> 
            with information stored in this object and scroll the affect range into the current grid view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelRowColOperations,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeCommand"/> with information how to execute
            a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/> command at a later time and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/>
            instance.
            </summary>
            <param name="rco">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/> this command is associated with.</param>
            <param name="insertAt">The row or column where cells should be inserted.</param>
            <param name="count">The number of rows or columns to insert.</param>
            <param name="iro">Holds additional information for <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/> command such as cell contents, row, and column
            sizes, hidden state, and covered cells state.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeCommand.Execute">
            <override/>
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelMoveRangeCommand">
            <summary>
            Holds undo information about a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/> operation.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelMoveRangeCommand.Execute"/> method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/> 
            with information stored in this object and scroll the affect range into the current grid view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMoveRangeCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelRowColOperations,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelMoveRangeCommand"/> with information how to execute
            a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/> command at a later time and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/>
            instance.
            </summary>
            <param name="rco">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/> this command is associated with.</param>
            <param name="from">The first row or column.</param>
            <param name="count">The number of rows or columns to move.</param>
            <param name="target">The target row or column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMoveRangeCommand.Execute">
            <override/>
            <summary>Executes the command.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelRemoveRangeCommand">
            <summary>
            Holds undo information about a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/> operation.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRemoveRangeCommand.Execute"/> method will call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/> 
            with information stored in this object and scroll the affect range into the current grid view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRemoveRangeCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelRowColOperations,System.Int32,System.Int32)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRemoveRangeCommand"/> with information how to execute
            a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/> command at a later time and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/>
            instance.
            </summary>
            <param name="rco">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/> this command is associated with.</param>
            <param name="from">The first row or column.</param>
            <param name="last">The last row or column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRemoveRangeCommand.Execute">
            <override/>
            <summary>Executes the command.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetDefaultSizeCommand.Execute">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetFrozenCountCommand.Execute">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool">
            <summary>
            Provides storage for covered cells in the grid and allows a fast way to look up if a specific cell
            is part of a covered range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.innerRows">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool"/>.
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.ResetSpanCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Resets spanned cells in the specified range.
            </overload>
            <summary>
            Resets spanned cells in the specified range.
            </summary>
            <param name="range">The range to be reset.</param>
            <returns>True if changes were made; False if there were no covered ranges.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.ResetSpanCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Resets spanned cells in the specified range.
            </summary>
            <param name="range">The range to be reset.</param>
            <param name="checkContainment">True if only covered cells should be reset that are contained in the <paramref name="range"/></param>
            <returns>True if changes were made; False if there were no covered ranges.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.StoreSpanCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Saves the covered cell's information for a specific range.
            </summary>
            <param name="range">The covered cell's range to be saved.</param>
            <returns>True if successful; False if there was an error or a range was already existing.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.GetSpanCellsRowCol(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Returns the covered range information for a cell specified with row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">A place holder where covered cell's range information is returned.</param>
            <returns>True if a covered cell was found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.Clear">
            <summary>
            Clears all covered ranges from this pool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool.InitFromRangeList(Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <summary>
            Initializes the pool with covered range information from a range list.
            </summary>
            <param name="ranges">The range list with all covered cells.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellInfo">
            <summary>
            Holds information about position of current cell, current cell renderer, and last active grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellInfo.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellRendererBase,System.Int32,System.Int32)">
            <summary>
            Initalizes a GridCurrentCellInfo with position of current cell, current cell renderer, and last active grid control.
            </summary>
            <param name="gridView">Last active grid control.</param>
            <param name="cellView">Current cell renderer.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInfo.GridView">
            <summary>
            Gets or sets the last active grid control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInfo.CellView">
            <summary>
            Gets or sets the current cell renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInfo.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellInfo.ColIndex">
            <summary>
            Gets or sets the column index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridData">
            <summary>
            GridData holds StyleInfoStore objects with cell specific style properties. Rows and
            columns are allocated on demand and only for cells that have actual contents will a 
            StyleInfoStore object be allocated. 
            </summary>
            <remarks>
            GridData also holds information about row, column, and table styles and row and column headers.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.#ctor">
            <summary>
            Initializes a new instance of the GridData class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.Modified"/> flag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.Clear">
            <summary>
            Resets the row and column count to zero and clears all cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.InsertRows(System.Int32,System.Int32)">
            <summary>
            Insert a specified number of rows at a specified row index.
            </summary>
            <param name="rowIndex">The starting row index where new rows should be inserted.</param>
            <param name="count">The number of rows to insert.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.InsertCols(System.Int32,System.Int32)">
            <summary>
            Insert a specified number of columns at a specified column index.
            </summary>
            <param name="colIndex">The starting column index where new columns should be inserted.</param>
            <param name="count">The number of columns to insert.</param>
            <returns>true if successful; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes a specified number of rows at a specified row index.
            </summary>
            <param name="rowIndex">The starting row index where rows should be removed.</param>
            <param name="count">The number of rows to remove.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.RemoveCols(System.Int32,System.Int32)">
            <summary>
            Removes a specified number of columns at a specified column index.
            </summary>
            <param name="colIndex">The starting column index where columns should be removed.</param>
            <param name="count">The number of columns to remove.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.MoveRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves a specified number of rows to a new position.
            </summary>
            <param name="rowIndex">The starting row index of rows to be moved.</param>
            <param name="count">The number of rows to move.</param>
            <param name="target">The new position for the rows.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.MoveCols(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves a specified number of columns to a new position.
            </summary>
            <param name="colIndex">The starting column index of columns to be moved.</param>
            <param name="count">The number of columns to move.</param>
            <param name="target">The new position for the columns.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.CopyCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Copies cell contents from a given range of cells to another range of cells.
            </summary>
            <param name="sourceRange">The original range of cells that hold cell contents to be copied.</param>
            <param name="destRange">The target range where contents will be copied to.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.MoveCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Moves cell contents from a given range of cells to another range of cells.
            </summary>
            <param name="sourceRange">The original range of cells that holds cell contents to be moved. This range cell contents will be cleared after the move operation is complete.</param>
            <param name="destRange">The target range where contents will be moved to.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.Contains(System.Int32,System.Int32)">
            <summary>
            Tests if the cell at the specified row and column index has been initialized.
            </summary>
            <param name="rowIndex">The row index. Can be 0 for column headers and -1 for column styles.</param>
            <param name="colIndex">The column index. Can be 0 for row headers and -1 for row styles.</param>
            <returns>True if an element is at the specified co-ordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.SortByColumn(System.Int32)">
            <overload>
            Sorts tha data object by a specified column.
            </overload>
            <summary>
            Sorts tha data object ascending by the specified column.
            </summary>
            <param name="colIndex">The column that holds the key for sorting this object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.SortByColumn(System.Int32,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the data object by the specified column.
            </summary>
            <param name="colIndex">The column that holds the key for sorting this object.</param>
            <param name="direction">The sort direction: ascending or descending.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.SortByColumn(System.Int32,System.ComponentModel.ListSortDirection,System.Int32)">
            <summary>
            Sorts the data object by the specified column.
            </summary>
            <param name="colIndex">The column that holds the key for sorting this object.</param>
            <param name="direction">The sort direction: ascending or descending.</param>
            <param name="extraHeaderCount">You should pass in GridModel.Rows.HeaderCount to specify if there are additional headers 
            displayed in the grid that should not be sorted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.SortByColumn(System.Int32,System.ComponentModel.ListSortDirection,System.Collections.IComparer)">
            <summary>
            Sorts the data object by the specified column.
            </summary>
            <param name="colIndex">The column that holds the key for sorting this object.</param>
            <param name="direction">The sort direction: ascending or descending.</param>
            <param name="comparer">A custom comparer class that implements a CompareTo method as shown in the example.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridData.SortByColumn(System.Int32,System.ComponentModel.ListSortDirection,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the data object by the specified column.
            </summary>
            <param name="colIndex">The column that holds the key for sorting this object.</param>
            <param name="direction">The sort direction: ascending or descending.</param>
            <param name="extraHeaderCount">You should pass in GridModel.Rows.HeaderCount to specify if there are additional headers 
            displayed in the grid that should not be sorted.</param>
            <param name="comparer">A custom comparer class that implements a CompareTo method as shown in the example.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.Modified">
            <summary>
            Gets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.RowCount">
            <summary>
            Gets or sets the row count in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> table.
            </summary>
            <remarks>
            The row count does not include headers and column styles. If you set the row count to be 2, there will
            be one column header, one column style, and two grid rows with cells.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.ColCount">
            <summary>
            Gets or sets the column count in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> table.
            </summary>
            <remarks>
            The column count does not include headers and row styles. If you set the column count to be 2, there will
            be one row header, one row style, and two grid columns with cells.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.ExtendedInfo">
            <summary>
            Gets or sets a custom object or tag to be saved with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object. 
            </summary>
            <remarks>
            Clipboard copy / paste will for example store covered ranges information in ExtendedInfo.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.Item(System.Int32,System.Int32)">
            <summary>
            The cell contents at the specified row and column index.
            </summary>
            <param name="rowIndex">The row index. Can be 0 for column headers and -1 for column styles.</param>
            <param name="colIndex">The column index. Can be 0 for row headers and -1 for row styles.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> with the specified cell's data. Can be NULL if cell has not been initialized
            for the specified position.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.TableStyle">
            <summary>
            Gets or sets access to table styles data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.ColStyles">
            <summary>
            Gets access to column styles data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.RowStyles">
            <summary>
            Gets access to row styles data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridData.Rows">
            <summary>
            Gets access to row styles data.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataRowStylesIndexer">
            <summary>
            Provides access to row styles data.
            </summary>
            <remarks>
            You access this object using the <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.RowStyles"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> instance.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataRowStylesIndexer.Item(System.Int32)">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> with style information at the given index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataColStylesIndexer">
            <summary>
            Provides access to column styles data.
            </summary>
            <remarks>
            You access this object using the <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.ColStyles"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> instance.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataColStylesIndexer.Item(System.Int32)">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> with style information at the given index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataTypeConverter">
            <internalonly/>
            <summary>For internal use.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataTypeConverter.Binder">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellCollection">
            <summary>
            Derives from <see cref="T:Syncfusion.Collections.SFArrayList"/> and provides a strongly-typed <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellCollection.Add(Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)"/> 
            method and a strongly typed indexer (<see cref="P:Syncfusion.Windows.Forms.Grid.GridCellCollection.Item(System.Int32)"/>).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Collections.SFArrayList"/>
            class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellCollection.#ctor(System.Collections.ICollection)">
            <summary>
              <para>Initializes a new instance of the <see cref="T:Syncfusion.Collections.SFArrayList"/> class that contains elements copied from the specified
            collection and that has the same initial capacity as the number of elements copied.</para>
            </summary>
            <param name="c">The <see cref="T:System.Collections.ICollection"/> whose elements are copied to the new list.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellCollection.Clone">
            <summary>
              <para>Creates a deep copy of the <see cref="T:Syncfusion.Collections.SFArrayList"/>.</para>
            </summary>
            <returns>
              <para>A deep copy of the <see cref="T:Syncfusion.Collections.SFArrayList"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellCollection.Add(Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <summary>
            Appends a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> object to the list.
            </summary>
            <param name="store">The object to be added.</param>
            <returns>The index of the new object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellCollection.Item(System.Int32)">
            <summary>
            Gets / sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> for the specified index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowCollection">
            <summary>
            Implements a two-dimensional table that holds an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> 
            arrays with <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> items. 
            </summary>
            <remarks>
            <p>This is a memory efficient way to represent a table where values can remain empty. Only rows
            that actually contain data will allocate a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> and the array only holds
            as many <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/>objects as the specific row contains columns.</p>
            <p>When you access data that are out of range, an empty () object will be returned.
            If you set data that are out of range, an exception will be thrown. If you set data for
            a row that was empty, the row will be allocated before the value is stored.</p>
            <p>GridRowCollection provides methods that let you insert, remove, or rearrange columns or rows
            in the table.</p>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/> class from the specified instances
            of the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> and <see cref="T:System.Runtime.Serialization.StreamingContext"/> classes.
            </summary>
            <param name="info">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> class containing the information required to serialize the new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/> instance.</param>
            <param name="context">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext"/> class containing the source of the serialized stream associated with the new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/> instance. </param>
            <remarks>This constructor implements the <see cref="T:System.Runtime.Serialization.ISerializable"/> interface for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/>  class.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <override/>
            <summary>
            Returns the data needed to serialize the <see cref="T:Syncfusion.Collections.SFTable"/>.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object containing the information required 
            to serialize the object.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> object containins the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.#ctor">
            <overload>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/>
            class.
            </overload>
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/>
            class that is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.#ctor(Syncfusion.Collections.SFTable)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/>
            class from an existing table. References to cell objects will be
            copied into this table from the original table.
            </summary>
            <param name="data">The original table.</param>
            <remarks>
            For each row in the original table, a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/>
            is added to this GridRowCollection and the references to the cell objects will be copied
            into the new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.CreateCellCollection">
            <summary>
            Creates an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/>.
            </summary>
            <returns>An empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.Clone">
            <summary>
              <para>Creates a deep copy of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/> where each row and cell object is cloned.</para>
            </summary>
            <returns>
              <para>A deep copy of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> at the specified row index.
            </summary>
            <param name="index">Index of the value to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridCellCollection)">
            <summary>
            Inserts a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> at the specified row index.
            </summary>
            <param name="index">Row index.</param>
            <param name="value">Value to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.Remove(Syncfusion.Windows.Forms.Grid.GridCellCollection)">
            <summary>
            Removes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> from the array.
            </summary>
            <param name="value">Value to remove</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.Contains(Syncfusion.Windows.Forms.Grid.GridCellCollection)">
            <summary>
            Determines if the array contains the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/>.
            </summary>
            <param name="value">Value to search.</param>
            <returns>
            <c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridCellCollection)">
            <summary>
            Determines the index of the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> in the array.
            </summary>
            <param name="value">The value whose index needs to be retrieved.</param>
            <returns>returns Index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.Add(Syncfusion.Windows.Forms.Grid.GridCellCollection)">
            <summary>
            Adds a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> to the array.
            </summary>
            <param name="value">Value to add.</param>
            <returns>The position into which the value was inserted</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridCellCollection[],System.Int32)">
            <summary>
            Copied references of row elements to the specified array, starting at a particular index.
            </summary>
            <param name="array">The target collection.</param>
            <param name="index">The starting index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the list of rows.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowCollection.Item(System.Int32,System.Int32)">
            <summary>
              <para>Gets / sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> object at the 
              specified coordinates in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowCollection"/>.</para>
            </summary>
            <param name="rowIndex">The zero-based row index.</param>
            <param name="colIndex">The zero-based column index.</param>
            <remarks>
            If you query for an element and the coordinates are out of range, an empty (<see langword="null"/>) object will be returned.<para/>
            If you set an element and the coordinates are out of range, an exception is thrown.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the array is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowCollection.Item(System.Int32)">
            <summary>
              Gets / sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCollection"/> object at the 
              specified row index.
            </summary>
            <param name="index">The zero-based row index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether IsFixedSize. Always false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowCollection.Count">
            <summary>
            Gets the number of row elements in this array.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowCollection.SyncRoot">
            <summary>
            Gets not supported.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellCancelEventHandler">
            <summary>
            Represents a method that handles cancelable events associated with a specific cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellCancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellEventHandler">
            <summary>
            Represents a method that handles events associated with a specific cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventHandler">
            <summary>For internal use.</summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventArgs">
            <summary>For internal use.</summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>For internal use.</summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventArgs.Range">
            <summary>Gets Range. For internal use.</summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary">
            <summary>
            Provides a collection with index / value pairs stored in a <see cref="T:System.Collections.Hashtable"/> and
            lets you insert, remove, or move values in the collection and indexes will be updated.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer"/> and <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer"/>
            store row, column sizes, and hidden states in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.GetHashTable">
            <summary>
            Used internally.
            </summary>
            <returns>returns Hashtable.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.#ctor(System.Type)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/> and specifies the type of values this collection holds.
            </summary>
            <param name="memberType">The type of values this collection holds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.#ctor(System.Collections.Hashtable,System.Type)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/> and specifies the hashtable and type of values this collection holds.
            </summary>
            <param name="hashtable">The inner hashtable to be associated with this <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/>.</param>
            <param name="memberType">The type of values this collection holds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridIndexDictionary"/> with all values copied over.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Add(System.Int32,System.Object)">
            <summary>
            Adds an index / value pair.
            </summary>
            <param name="key">The index for the value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Contains(System.Int32)">
            <summary>
            Checks if the collection has an entry at the specified index.
            </summary>
            <param name="key">The index for the value.</param>
            <returns>True if a value exists at the index; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.CopyTo(System.Object[],System.Int32)">
            <summary>
              <para>Copies the values to a one-dimensional <see cref="T:System.Array"/> instance at the
            specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</param>
            <param name="index">The index in the array where copying begins.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Remove(System.Int32)">
            <summary>
            Removes the value at the specified index.
            </summary>
            <param name="key">The Index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.InsertIndex(System.Int32,System.Int32)">
            <summary>
            Inserts a specified number of values at a specific index and adjusts the index 
            for subsequent values.
            </summary>
            <param name="index">The index where to start inserting values.</param>
            <param name="count">The number of values to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.RemoveIndex(System.Int32,System.Int32)">
            <summary>
            Removes a specified number of values at a specific index and adjusts the index 
            for subsequent values.
            </summary>
            <param name="from">The index where to start removing values.</param>
            <param name="count">The number of values to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.MoveIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves a specified number of values to a new index and adjusts the indexes 
            of subsequent values.
            </summary>
            <param name="from">The index where to start moving values.</param>
            <param name="count">The number of values to move.</param>
            <param name="dest">The destination index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.OnInsert(System.Object,System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.OnRemove(System.Object,System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.OnSet(System.Object,System.Object,System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.OnValidate(System.Object,System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Lookup(System.Int32,System.Int32@)">
            <overload>
            Checks if a value is stored at a specific index and returns its value.
            </overload>
            <summary>
            Checks if a <see cref="T:System.Int32"/> value is stored at a specific index and returns its value.
            </summary>
            <param name="key">The index to look up.</param>
            <param name="result">The value at the specified index.</param>
            <returns>True if value exists; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Lookup(System.Int32,System.Single@)">
            <summary>
            Checks if a <see cref="T:System.Single"/> value is stored at a specific index and returns its value.
            </summary>
            <param name="key">The index to look up.</param>
            <param name="result">The value at the specified index.</param>
            <returns>True if value exists; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Lookup(System.Int32,System.Object@)">
            <summary>
            Checks if a <see cref="T:System.Object"/> value is stored at a specific index and returns its value.
            </summary>
            <param name="key">The index to look up.</param>
            <param name="obj">The value at the specified index.</param>
            <returns>True if value exists; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.MemberType">
            <internalonly/>
            <summary>Gets the MemberType. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Item(System.Int32)">
            <summary>
            The value at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.SmallestKey">
            <summary>
            Gets the smallest index in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.LargestKey">
            <summary>
            Gets the largest index in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelGraphicsProvider">
            <summary>
            Returns a graphics context when needed and raises a
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/>  event to initialize the graphics object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelGraphicsProvider.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Drawing.GraphicsProvider"/>
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Drawing.GraphicsProvider"/> with a <see cref="T:System.Windows.Forms.Control"/> object.
            </summary>
            <param name="model">The control that will be used for creating the graphics object..</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelGraphicsProvider.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelGraphicsProvider.OnPrepareGraphics(Syncfusion.Drawing.GraphicsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Drawing.GraphicsProvider.PrepareGraphics"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Drawing.GraphicsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelGraphicsProvider.PrepareGraphics">
            <summary>
            Called after a new <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelGraphicsProvider.Graphics"/> object was created and gives a handler
            a chance to initialize the graphics context.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelGraphicsProvider.Graphics">
            <summary>
            Gets or creates a cached graphics object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget">
            <summary>
            Defines an interface for an object that handles events raised by <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnBanneredRangesChanged(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnBanneredRangesChanging(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnBaseStylesMapChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMapChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMapChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnBeginUpdateRequest(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdateRequest"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdateRequest"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnCellModelsChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellModelsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellModelsChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnCellsChanged(Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnCellsChanging(Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClearingCells(Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClearingCells"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClearingCells"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardCopyToBuffer(Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs)">
            <copyfrom cref="!:GridModel.OnCopyToBufferEventArgs"/>
            <summary>See <see cref="!:GridModel.OnCopyToBufferEventArgs"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardCanCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCopy"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCopy"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardCanCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCut"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCut"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardCanPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanPaste"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanPaste"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopy"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopy"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCut"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCut"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPaste"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPaste"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnClipboardPasted(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPasted"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPasted"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsHidden(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsHiding(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColWidthsChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnColWidthsChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnConfirmingPendingChanges(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnCoveredRangesChanged(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnCoveredRangesChanging(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDataChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDataProviderChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDataProviderQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderQueryCellInfo"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderQueryCellInfo"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDataProviderSaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderSaveCellInfo"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderSaveCellInfo"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDefaultColWidthChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDefaultColWidthChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDefaultRowHeightChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnDefaultRowHeightChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnEndUpdateRequest(Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnFloatingCellsChanged(Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnFrozenColCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnFrozenColCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnFrozenRowCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnFrozenRowCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnHeaderColCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnHeaderColCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnHeaderRowCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnHeaderRowCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnInvalidateRangeRequest(Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRangeRequest"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRangeRequest"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnMergeCellsChanged(Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnPasteCellText(Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnPrepareChangeSelection(Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnPrepareClearSelection(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareClearSelection"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareClearSelection"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnPrepareGraphics(Syncfusion.Drawing.GraphicsEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryBanneredRange(Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryCanMergeCells(Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryCellFormattedText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryCellModel(Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryCellText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryColWidth(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryCoveredRange(Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryDragDropMoveClearCells(System.ComponentModel.CancelEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryDragDropMoveClearCells"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryDragDropMoveClearCells"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryHideCol(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryHideRow(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryOleDataSourceData(Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryOleDataSourceData"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryOleDataSourceData"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryRowHeight(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnQueryRowHeightTotal(Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeightTotal"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeightTotal"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowHeightsChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowHeightsChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsHidden(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsHiding(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnRowsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveCellFormattedText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveCellText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnParseCommonFormats(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ParseCommonFormats"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ParseCommonFormats"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveColWidth(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveHideCol(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveHideRow(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveRowHeight(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSelectionChanged(Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSelectionChanging(Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnSaveCellFormattedText(Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnOleDroppedData(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDroppedData"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDroppedData"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget.OnCommandStackChanged(System.EventArgs)">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CommandStackChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CommandStackChanged"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class for information.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModel">
            <summary>
            This is the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class that holds all data information about a grid and provides methods to completely initialize a grid
            and attach it later to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> so that its contents can be rendered to the screen.
            </summary>
            <remarks>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> holds all data for a grid. You can initialize a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> and then attach it to one or more <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            controls. If you share the same model among several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> controls, changes in the model will be automatically reflected in
            all associated controls.
            <para/>
            If the user makes changes in one control, e.g. row heights or cell contents, the changes will be stored in the GridModel and events are
            raised that notify all associated controls about changes in the model so that each view can update its contents. This follows the
            Model-View-Controller pattern where data is separated from view.
            <para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> offers many events that you can subscribe to and modify the default behavior of the grid. Typically, methods
            that are sent before the action is carried out allows you to adjust certain parameters or cancel the operation. These events usually
            end with an "ing" suffix, like "Changing". Events that are raised after the data in the model have been changed inform associated controls
            about the success of the operation. For example, if a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> receives a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> event,
            it will redraw the affected cells. Most of these events have a <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property that indicates
            if the operation finished successfully or failed to complete.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> holds a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/> that holds models for all cell types used in the grid.
            If a cell queries for a new cell type that is not found in the cell model collection, it tries to instantiate a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            object for the specific cell type. A <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event is raised to allow you to create custom cell
            types on demand. But you can also instantiate cell models for custom cell types at initialization and add them to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>.
            <para/>
            There is also a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> class that combines both <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> into one class. This
            gives you easier access to all methods of <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> if you are working on a grid that does not need to support several views
            sharing the same model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.Dispose">
            <override/>
            <summary>Releases all the resources used by this component.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetGridCells">
            <summary>
            Clears all cell formatting.   
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetRangeStyles">
            <summary>
            Clears all cell formatting in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetOptions(Syncfusion.Windows.Forms.Grid.GridModelOptions)">
            <exclude/>
            <summary>This method is supposed to be called only from the GridGroupingControl. 
            When used with regular grids there might be event listeners setup by the GridControlBase
            object that is attached to the GridModel and replace the GridModelOptions might 
            cause memory leaks in such case.
            </summary>
            <param name="options">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/> object that provides properties to adjust the look and feel of grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCommandStackChanged(System.EventArgs)">
            <summary>
            Raises the  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CommandStackChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCellText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryCellText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveCellText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseSaveCellText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCellFormattedText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryCellFormattedText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveCellFormattedText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseSaveCellFormattedText(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnParseCommonFormats(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ParseCommonFormats"/> event. 
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseParseCommonFormats(Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnOleDropAtRowCol(Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs)">
            <summary>
            Raises the  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDropAtRowCol"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseOleDropAtRowCol(Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnOleDroppedData(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDroppedData"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseOleDroppedData(System.EventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryOleDataSourceData(Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryOleDataSourceData"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryOleDataSourceData(Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryDragDropMoveClearCells(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryDragDropMoveClearCells"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryDragDropMoveClearCells(System.ComponentModel.CancelEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipboardCanPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanPaste"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardCanPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipboardPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPaste"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipboardPasted(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPasted"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardPasted(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipboardCanCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCut"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardCanCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipboardCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCut"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipboardCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopy"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipboardCanCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCopy"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardCanCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipBoardCopyToBuffer(Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClipBoardCopyToBuffer(Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs)"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClipboardCopyToBuffer(Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnClearingCells(Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClearingCells"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseClearingCells(Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCellModel(Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryCellModel(Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCellModelsChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellModelsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs"/> that contains the event data.</param>// Events
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCoveredRange(Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryBanneredRange(Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <summary>
            Triggers a call to the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)"/> method which raises <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDataProviderQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderQueryCellInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetActiveCurrentCell(System.Int32,System.Int32)">
            <summary>
            This is used in GridCurrentCell to record the current cell movement for undo and redo playback.
            </summary>
            <param name="row">Row index.</param>
            <param name="col">Column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate">
            <overload>
            Suspends the painting of associated grid controls until the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> method is called.
            </overload>
            <summary>
            Suspends the painting of associated grid controls until the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> method is called.
            </summary>
            <remarks>
            <para>When many paints are made to the appearance of a control, you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.</para>
            <para>
            Pass BeginUpdateOptions if you do not want to do a complete Refresh of the control and instead
            want to have certain regions of your control be invalidated or scroll the contents of control.</para>
            If you call BeginUpdate() and then later EndUpdate(), the control will know if a paint is pending and only
            refresh the control if a paint is pending. A call to ShouldPrepareUpdate, Invalidate, or a WM_PAINT message during
            the BeginUpdate EndUpdate block will signal the control that a paint is pending.
            <para/>
            This method will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdateRequest"/> event.
            Each attached <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> listens to this event and calls <see cref="M:Syncfusion.Windows.Forms.ScrollControl.BeginUpdate"/>
            for the current control.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate(Syncfusion.Windows.Forms.BeginUpdateOptions)">
            <summary>
            Suspends the painting of associated grid controls until the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> method is called.
            </summary>
            <param name="options">Specifies the painting support during the BeginUpdate, EndUpdate batch.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate(Syncfusion.Windows.Forms.BeginUpdateOptions,System.String)">
            <summary>
            Suspends the painting of associated grid controls until the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> method is called and records a command description
            why painting is suspended.
            </summary>
            <param name="options">Specifies the painting support during the BeginUpdate, EndUpdate batch.</param>
            <param name="commandDesc">A description of the command.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
            <remarks>
            When many paint are made to the appearance of a control, you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.
            <para/>
            This method will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/> event.
            Each attached <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> listens to this event and call <see cref="M:Syncfusion.Windows.Forms.ScrollControl.EndUpdate"/>
            for the current control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.CancelUpdate">
            <summary>
            Cancel any pending BeginUpdate calls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate(System.Boolean)">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method and allows you
            to specify whether current pending paint operations should be discarded.
            </summary>
            <param name="update">Specifies whether current pending paint operations should be discarded.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnBeginUpdateRequest(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdateRequest"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnEndUpdateRequest(Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SuspendChangeEvents">
            <summary>
            Suspends raising change events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResumeChangeEvents">
            <summary>
            Resumes raising change events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SuspendRecordUndo">
            <summary>
            Suspend logging undo information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResumeRecordUndo">
            <summary>
            Resume logging undo information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginInit">
            <summary>
            Implements <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit"/> of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.EndInit">
            <summary>
            Implements <see cref="M:System.ComponentModel.ISupportInitialize.EndInit"/> of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.CreateControl">
            <implement/>
            <summary>Creates the control.</summary>
            <returns>The control.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.Refresh">
            <summary>
            Force all views to be refreshed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeOptions)">
            <summary>
            Force all views to invalidate a specified range of cells.
            </summary>
            <param name="range">The range of cells to be repainted.</param>
            <param name="options">Options that indicate if method should enlarge the affected range of cells to include covered and floating cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnInvalidateRangeRequest(Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRangeRequest"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnPrepareGraphics(Syncfusion.Drawing.GraphicsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Drawing.GraphicsEventArgs"/> that contains the event data.</param>
            <remarks>
            Override this event if you want to customize the graphics context before a grid control draws to it.
            </remarks>
            <example>The following example changes the <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> of a <see cref="T:System.Drawing.Graphics"/>
            object to <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/>:
            <code lang="C#">
            e.Graphics.TextRenderingHint = System.Drawing.Text.TextRenderingHint.ClearTypeGridFit;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.DoPrepareGraphics(System.Drawing.Graphics)">
            <summary>
            Raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event.
            </summary>
            <param name="g">Graphics object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.CreateGraphics">
            <summary>
            Returns a display <see cref="T:System.Drawing.Graphics"/> object for this grid. You must dispose this object after use.
            The method will return null if <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ActiveGridView"/> is null. In such case the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetGraphicsProvider"/>
            method is recommended.
            </summary>
            <returns>A <see cref="T:System.Drawing.Graphics"/> object.</returns>
            <remarks>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event.
            </remarks>
            <example>
            The following shows how to use this method.
            <code lang="C#">
            IGraphicsProvider graphicsProvider = this.GetGraphicsProvider();  // It is important to hold onto this object as long ad Graphics context is needed!
            Graphics g = graphicsProvider.Graphics;   // Do not dispose this object! It is a cached Display Device context.
            // If nested method calls do call GetGraphicsProvider and get a graphics context the
            // same cached graphics context can be returned.
            </code>
            <code lang="VB">
            Dim graphicsProvider as IGraphicsProvider = this.GetGraphicsProvider()  ' It is important to hold onto this object as long ad Graphics context is needed!
            Dim g as Graphics = graphicsProvider.Graphics   ' Do not dispose this object! It is a cached Display Device context.
            ' If nested method calls do call GetGraphicsProvider and get a graphics context the
            ' same cached graphics context can be returned.
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetGraphicsProvider">
            <summary>
            Returns a temporarily cached <see cref="T:Syncfusion.Drawing.IGraphicsProvider"/> object. The object
            creates a Graphics object on demand and raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event. The graphics object
            gets automatically disposed once the IGraphicsProvider itself goes
            out of scope. Do not dispose this object yourself.
            </summary>
            <returns>Graphics provider.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="type">The Type value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.#ctor">
            <overload>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </overload>
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCreateBaseStylesMap">
            <summary>
            This method is called the first time <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/> and no
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> has been associated with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> before.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnBaseStylesMapChanged(System.EventArgs)">
            <summary>
            Raises the BaseStylesMapChanged event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCreateData">
            <summary>
            This method is called the first time <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/> and no
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> has been associated with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> before.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDataChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadSoap(System.String)">
            <summary>
            Recreates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object from a file that holds data in SOAP format.
            </summary>
            <param name="fileName">The full pathname of the file.</param>
            <returns>The recreated <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadSoap(System.IO.Stream)">
            <summary>
            Recreates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object from a <see cref="T:System.IO.Stream"/> with data in SOAP format.
            </summary>
            <overload>
            Recreates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object from a <see cref="T:System.IO.Stream"/> with data in SOAP format.
            </overload>
            <param name="s">A <see cref="T:System.IO.Stream"/> with data in SOAP format.</param>
            <returns>The recreated <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object to a file in SOAP format. The filename can be specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap(System.String)">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object in SOAP format to a file with the specified filename.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap(System.IO.Stream)">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object to a stream in SOAP format.
            </summary>
            <param name="s">Stream object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadBinary(System.String)">
            <overload>
            Recreates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object from a file that holds data in binary format.
            </overload>
            <summary>
            Recreates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object from a file that holds data in binary format.
            </summary>
            <param name="fileName">The full pathname of the file.</param>
            <returns>The recreated <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadBinary(System.IO.Stream)">
            <summary>
            Recreates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object from a <see cref="T:System.IO.Stream"/> with data in binary format.
            </summary>
            <param name="s">A <see cref="T:System.IO.Stream"/> with data in binary format.</param>
            <returns>The recreated <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object to a file in binary format. The filename can be specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary(System.String)">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object in binary format to a file with the specified filename.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary(System.IO.Stream)">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object to a stream in binary format.
            </summary>
            <param name="s">Stream object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.NameToColIndex(System.String)">
            <summary>
            Returns the column index for a column that can be identified by the specified name.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The column index; or -1 if column could not be resolved.</returns>
            <remarks>
            The default behavior is that the name is recognized if in format C# (e.g. C10).<para/>
            If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/> is attached to the grid (e.g. a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/>
            when using a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>), the name can be the fieldname in the underlying table.<para/>
            The following collections allow you to pass in names as identifiers:
            <list type="bullet">
            <listheader><term>Items</term><description>Descriptions</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> collection.</term></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)"/> of <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> collection.</term></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.Item(System.Int32)"/> of <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles"/> and
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.Item(System.Int32)"/> of <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/> collection.</term></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.NameToRowIndex(System.String)">
            <summary>
            Returns the row index for a row that can be identified by the specified name.
            </summary>
            <param name="name">The name of the row.</param>
            <returns>The row index; or -1 if row could not be resolved.</returns>
            <remarks>
            The default behavior is that the name is recognized if in format R# (e.g. R10).<para/>
            The following collections allow you to pass in names as identifiers:
            <list type="bullet">
            <listheader><term>Items</term><description>Descriptions</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> collection.</term></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)"/> of <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> collection.</term></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.Item(System.Int32)"/> of <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles"/> and
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.Item(System.Int32)"/> of <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/> collection.</term></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowHeightsChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <summary>
            Raises the RowHeightsChanged event.
            </summary>
            <param name="e">A GridRowColSizeChangedEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowHeightsChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <summary>
            Raises the RowHeightsChanging event.
            </summary>
            <param name="e">A GridRowColSizeChangingEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColWidthsChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <summary>
            Raises the ColWidthsChanged event.
            </summary>
            <param name="e">A GridRowColSizeChangedEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColWidthsChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <summary>
            Raises the ColWidthsChanging event.
            </summary>
            <param name="e">A GridRowColSizeChangingEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveRowHeight(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryRowHeight(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raise the QueryRowHeight event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryRowHeightTotal(Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs)">
            <summary>
            Raise the QueryRowHeight event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveColWidth(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryColWidth(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raise the QueryColWidth event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetRowHeightsInt(Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ShouldSerializeRowHeightEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> collection were modified.
            </summary>
            <returns>True if modified; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetRowHeightEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetColWidthsInt(Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetColWidthEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ShouldSerializeColWidthEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> collection were modified.
            </summary>
            <returns>true if modified; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ShouldSerializeRowHiddenEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> collection were modified.
            </summary>
            <returns>True if modified; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetRowHiddenEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ShouldSerializeColHiddenEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> collection were modified.
            </summary>
            <returns>True if modified; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetColHiddenEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents, including margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">Vertical or horizontal.</param>
            <returns>The optimal size of the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetGridLineBorder">
            <summary>
            Creates a GridBorder object generated using Options.DefaultGridBorderStyle
            and Properties.GridLineColor
            </summary>
            <returns>Grid border.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetFixedLineBorder">
            <summary>
            Creates a GridBorder object generated using Options.DefaultGridBorderStyle
            and Properties.FixedLinesColor
            </summary>
            <returns>Grid border.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents, including margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="queryBounds">Vertical or horizontal.</param>
            <returns>The optimal size of the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsHidden(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsHiding(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsHidden(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsHiding(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveHideRow(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryHideRow(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveHideCol(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryHideCol(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetHideRowsInt(Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetHideColsInt(Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDefaultRowHeightChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDefaultRowHeightChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnHeaderRowCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnHeaderRowCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnFrozenRowCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnFrozenRowCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDefaultColWidthChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDefaultColWidthChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnHeaderColCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnHeaderColCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnFrozenColCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnFrozenColCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Gets a table that represents a range of cells.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</returns>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)">
            <overload>
            Changes the contents for a range of cells in one batch.
            </overload>
            <summary>
            Changes the contents for a range of cells in one batch.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="data">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</param>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable,System.Boolean,System.Boolean)">
            <summary>
            Changes the contents for a range of cells in one batch.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="data">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</param>
            <param name="dontRaiseSaveCellInfoEvent">If True, the method will not raise the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event.</param>
            <param name="copyReferenceOnly">If True, the method will try to assign the style object directly. This is only possible if the
            existing cell was empty before or if modifyType is <see cref="F:Syncfusion.Styles.StyleModifyType.Copy"/>. Otherwise it will apply the object as
            specified in modifyType.</param>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDataProviderChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            GetCellInfo raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event to fill style contents and
            gets style data (the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/>) from GridData.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <param name="style">The style object that will receive data.</param>
            <returns>Always true.</returns>
            <remarks>
            If <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> did not set e.Handled, the method gets the
            style data (the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/>) from GridData and applies its data to
            the style object. Existing data of the style parameter previously initialized
            with <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> will be preserved.
            <para/>
            IGridVolatileDataContainer.GetCellInfo calls GetCellInfo to return style information
            for a cell to the GridVolatileData cache.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDataProviderSaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderSaveCellInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnPasteCellText(Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)">
            <overload>
            Changes the cell contents at a specific row and column index.
            </overload>
            <summary>
            Changes the cell contents at a specific row and column index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="modifyType">A <see cref="T:Syncfusion.Styles.StyleModifyType"/> that specifies the style operation to be performed.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)"/> is more low-level than using <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/>.
            <para/>
            It provides a faster solution to change cell contents compared to changing cells
            with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/>.
            It will not repaint any cells and also not try to generate undo information. <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType,System.Boolean,System.Boolean)">
            <summary>
            Changes the cell contents at a specific row and column index and allows you to suppress raising <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> events
            and also avoid copying the style objects.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="modifyType">A <see cref="T:Syncfusion.Styles.StyleModifyType"/> that specifies the style operation to be performed.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
            <param name="dontRaiseSaveCellInfoEvent">If True, the method will not raise the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event.</param>
            <param name="copyReferenceOnly">If True, the method will try to assign the style object directly. This is only possible if the
            existing cell was empty before or if modifyType is <see cref="F:Syncfusion.Styles.StyleModifyType.Copy"/>. Otherwise it will apply the object as
            specified in modifyType.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetVolatileData">
            <summary>
            Resets the volatile data cache. Call this method if you want to refresh the grid and force grid cells that
            are visible at the moment to reload all their data from data source. Also, the row and column count will be
            requeried.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateValues(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)">
            <summary>
            Gives you an easy way to copy data from any given datasource that implements the IList interface
            or is an Array to a specified range of cells in the grid.
            </summary>
            <param name="range">The destination range.</param>
            <param name="dataSource">A data source that implements the IList interface or is an Array.</param>
            <remarks>
            PopulateValues uses the low-level <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)"/> method to populate date from
            the given datasource. This makes it a much faster way to fill grid cells instead of using <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/>
            or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/>. It will not generate undo information. <para/>
            The grid display will be refreshed after the method finishes.<para/>
            If you want to fill the grid with large amount of data and give the user a chance to abort the operation, you should
            assign a <see cref="T:Syncfusion.Windows.Forms.DelayedStatusDialog"/> to the model's <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedbackListener"/>.<para/>
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateHeaders(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)"/>.
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateHeaders(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)">
            <summary>
            Gives you an easy way to copy column headers / names from any given datasource that implements the IList interface
            or is an Array to a specified range of cells in the grid.
            </summary>
            <param name="range">The destination range.</param>
            <param name="dataSource">A data source that implements the IList interface or is an Array.</param>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateValues(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)"/>.
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Analyzes specified cells for attributes that are equal among the cells.
            </overload>
            <summary>
            Analyzes specified cells for attributes that are equal among the cells.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds all attributes that were equal among cells.</returns>
            <example>
            The following example determines if <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Bold"/> is enabled for a range of cells:
            <code lang="C#">
                    GridStyleInfo style = GetCombinedStyle(GridRangeInfo.Cells(2, 2, 4, 8));
                    bool isBold = style.Font.Bold;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <summary>
            Analyzes specified cells for attributes that are equal among the cells.
            </summary>
            <param name="ranges">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> that specifies the ranges of cells.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds all attributes that were equal among cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeSelectionState(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo[])">
            <summary>
            Records current selection state - current cell and selected ranges. Will be used for restoring selections when performing undo / redo,
            </summary>
            <param name="currentRow">The row index of current cell.</param>
            <param name="currentCol">The column index of current cell.</param>
            <param name="ranges">The current list of selected ranges.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ScrollCellInView(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason)">
            <summary>
            Scrolls the specifies range into view of the active grid view.
            </summary>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to be made visible.</param>
            <param name="reason">The reason for scrolling the current cell into view (e.g. KeyPress, GridFocus etc.)</param>
            <remarks>
            This will only affect the active grid view. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ActiveGridView"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)">
            <overload>
            Applies a text to the specified range of cells.
            </overload>
            <summary>
            Applies an array of styles to the specified range of cells.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="cellsInfo">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> objects that holds cell information.</param>
            <param name="modifyType">A <see cref="T:Syncfusion.Styles.StyleModifyType"/> that specifies the style operation to be performed.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> will reset volatile data cache,
            generate undo information, force recalculation of floating cells, and
            raise <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> method.
            <para/>
            When you change cells directly with an indexer, this results in a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/>
            with modifyType set to <see cref="F:Syncfusion.Styles.StyleModifyType.Changes"/>.
            <para/>
            </remarks>
            <example>
            The following example assigns a previously create style with a bold font to a cell:
            <code lang="C#">
                        GridStyleInfo boldFontStyle = new GridStyleInfo();
                        boldFontStyle.TextColor =  Color.FromArgb(238, 122, 3);
                        boldFontStyle.Font = boldFont;
                        model[rowIndex, 1].Text = "Interior";
                        model.ChangeCells(GridRangeInfo.Cell(rowIndex, 1), boldFontStyle);
                        </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.String)">
            <summary>
            Applies a text to the specified range of cells.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="textValue">The text to be saved in cells.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Applies a style to the specified range of cells.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="cellInfo">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)">
            <summary>
            Applies a style to the specified range of cells.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="cellInfo">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="modifyType">A <see cref="T:Syncfusion.Styles.StyleModifyType"/> that specifies the style operation to be performed.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[])">
            <summary>
            Applies an array of styles to the specified range of cells.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="cellsInfo">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> objects that holds cell information.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCellsChanging(Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.NotifyCellsChanging(Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs"/> that contains the event data.</param>
            <returns>True if the operation is successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.NotifyCellsChanged(Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCellsChanged(Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Returns the cell contents for a range of cells and stores them in an array.
            </overload>
            <summary>
            Returns the cell contents for a range of cells and stores them in an array.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <returns>An array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object with cell information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.ComponentModel.OperationFeedback)">
            <summary>
            Returns the cell contents for a range of cells and stores them in an array.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <param name="op">A <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedback"/> to provide feedback during time-consuming operations or to abort an operation.</param>
            <returns>An array of <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedback"/> that allows progress feedback. May be NULL.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.CanClearSelection">
            <summary>
            Checks if a range of cells is selected or if the grid has a current cell which contents can be cleared.
            </summary>
            <returns>True if clearing cells with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Clear(System.Boolean)"/> is possible; False otherwise.</returns>
            <remarks>
            Use this to enable a "Clear" menu item or gray it out.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.Clear(System.Boolean)">
            <summary>
            Clears all ranges in the current user selection.
            </summary>
            <param name="clearStyle">True if you want to clear all cell information; False if you only want to clear text.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <overload>
            Clears a specified range of cells.
            </overload>
            <summary>
            Clears a specified range of cells.
            </summary>
            <param name="range">The GridRangeInfo</param>
            <param name="clearStyle">True if you want to clear all cell information; False if you only want to clear text</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Clears specified ranges of cells.
            </summary>
            <param name="rangeList">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> that holds cells to be cleared.</param>
            <param name="clearStyle">True if you want to clear all cell information; False if you only want to clear text.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the operation was successful.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetCurrentCellInfo">
            <summary>
            Resets information about position of current cell, current cell renderer, and last active grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmChanges">
            <summary>
            Confirm pending changes in current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnConfirmingPendingChanges(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
            <remarks>
            Set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True if you can't confirm pending changes and want
            to abort the current operation.<para/>
            Some operations cannot be aborted, however.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmPendingChanges">
            <summary>
            Confirms any pending changes, raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges"/> event,
            and calls the current cells <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges"/> method.
            </summary>
            <returns>True if this action is successfully completed; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.EndEdit">
            <summary>
            Calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.EndEdit"/> for the current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCreatedCutPaste">
            <summary>
            Called after the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCutPaste"/> object was created.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Triggers a call to the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)"/> method which raises <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> event
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Triggers a call to the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)"/> method which raises <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/> event
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSaveRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryMaximumRowCol(System.Int32,System.Int32)">
            <summary>
            Not implemented yet.
            </summary>
            <param name="nLastRow">The Last row.</param>
            <param name="nLastCol">The Last column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSelectionChanging(Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseSelectionChanging(Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSelectionChanged(Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseSelectionChanged(Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnPrepareClearSelection(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareClearSelection"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnPrepareChangeSelection(Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ShouldSerializeBanneredRanges">
            <summary>
            Determines if bannered ranges have been added.
            </summary>
            <returns>returns boolean value to determines if bannered ranges have been added</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetBanneredRanges">
            <summary>
            Clears all bannered ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ShouldSerializeCoveredRanges">
            <summary>
            Determines if covered ranges have been added.
            </summary>
            <returns>returns boolean value to determines if covered ranges have been added.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetCoveredRanges">
            <summary>
            Clears all covered ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetSpannedRangeInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Determines spanned cell information for a given row and column. Spanned cells can be covered cells or floated cells.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if a spanned range existed at the specified cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCoveredRangesChanging(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnCoveredRangesChanged(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnBanneredRangesChanging(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnBanneredRangesChanged(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.PushPrintFloatingCells">
            <summary>
            Temporarily saves the state of floating cells, called from GridPrintDocument.OnBeginPrint before printing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetPrintFloatingCells">
            <summary>
            Restores the state of floating cells that has been saved before with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.PushPrintFloatingCells"/>. Called from GridPrintDocument.OnEndPrint after printing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnFloatingCellsChanged(Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnMergeCellsChanged(Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCanMergeCells(Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <overload>
            Removes border margins from a given cell rectangle. The borders are determined from a specified style with cell content information.
            </overload>
            <summary>
            Removes border margins from a given cell rectangle. The borders are determined from a specified style with cell content information.
            </summary>
            <param name="cellBounds">The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="isRightToLeft">Indicates if grid is in RightToLeft mode.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds excluding its borders.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Removes border margins from a given cell rectangle. The borders are determined from a specified style with cell content information.
            </summary>
            <param name="cellBounds">The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> with the cell bounds excluding its borders.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.AddBorders(System.Drawing.Size,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Adds border margins to given cell client area size. The borders are determined from a specified style with cell content information.
            </summary>
            <param name="size">The <see cref="T:System.Drawing.Size"/> with the cell size.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:System.Drawing.Size"/> with the cell size including its borders.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.StyleInfoBordersToMargins(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Extracts <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> information from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> object with border margins.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.OnSynchronizingCurrentCell(Syncfusion.Windows.Forms.Grid.GridCellEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SynchronizingCurrentCell"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.SynchronizeCurrentCell(System.Int32,System.Int32)">
            <summary>
            Calls <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetActiveCurrentCell(System.Int32,System.Int32)"/> and raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SynchronizingCurrentCell"/> event. Good for synchronizing
            current cell movements in splitter panes.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetStyleDataSource(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            This is called from GridDropDownGridListControlCellModel to initialize datasource on demand.
            Override this method to calculate the datasource on demand
            only when it is needed and not every time in QueryStyleInfo. Default behavior is to return
            style.ChoiceList if not empty. If style.ChoiceList is empty, style.DataSource is returned.
            </summary>
            <param name="style">The style object that holds the binding information.</param>
            <returns>Style datasource.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetPropertyDescriptor(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Returns GridStyleInfo.PropertyDescriptor.
            </summary>
            <param name="style">The style object</param>
            <returns>A PropertyDescriptor</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetTypeConverter(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Returns a TypeConverter with type information about the style.CellValue.
            </summary>
            <param name="style">The style object</param>
            <returns>A TypeConverter</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCachedStandardValues(System.ComponentModel.TypeConverter,System.Type)">
            <internalonly/>
            <summary>
            Returns a list with standard values / possible choices for the specified TyepConverter and Type. Helper routined for <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetStyleDataSource(Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/>.
            </summary>
            <param name="converter">The TypeConverter</param>
            <param name="propertyType">The Type property</param>
            <returns>A list with standard values / possible choices.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.VolatileData">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/> that defines an interface that <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/>
            utilizes to query cell contents and base styles, look up cell types, and save changes back to the
            grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.NamespaceCollection">
            <exclude/>
            <summary>Gets or sets NamespaceCollection. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.IsDisposing">
            <summary>
            Gets a value indicating whether true if object is executing <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Dispose"/> method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.IsDisposed">
            <summary>
            Gets a value indicating whether object has been disposed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.GridModelEventsTarget">
            <summary>
            Gets or sets GridModelEventsTarget. Redirects events defined in <see cref="T:Syncfusion.Windows.Forms.Grid.IGridModelEventsTarget"/> to the specified object.
            Each event will first be called on <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.GridModelEventsTarget"/> before the actual
            event handler in this object is called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.GridCells">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> objects. This collection is a wrapper collection
            for cells in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object. It provides support for code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.RangeStyles">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/> objects. This collection is a wrapper collection
            for cells in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object. It provides support for modifying
            cells through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.UserData">
            <summary>
              <para> Gets / sets the user-definable data for the current object.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Options">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/> that allows you to adjust behavior and appearance of the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Model">
            <summary>
            Gets IGridModelSource interface. Returns this.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedbackListener">
            <summary>
            Gets or sets a feedback handler for the grid model to give visual feedback about time-consuming operations.
            Default handler for visual feedback are <see cref="T:Syncfusion.Windows.Forms.DelayedStatusDialog"/> and
            <see cref="T:Syncfusion.Windows.Forms.DelayedWaitCursor"/>.
            </summary>
            <remarks>
            If you want to provide visual feedback about progress of time-consuming operations you should assign
            feedback listener to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedbackListener"/>. This could be done in your forms constructor
            or your derived classes constructor.
            <para/>
            See <see cref="T:Syncfusion.ComponentModel.OperationFeedback"/> for more in-depth discussion about operation feedback.
            </remarks>
            <example>
            The following example initializes a <see cref="T:Syncfusion.Windows.Forms.DelayedStatusDialog"/> as listener.
            <code lang="C#">
            Syncfusion.Windows.Forms.DelayedStatusDialog handler = new Syncfusion.Windows.Forms.DelayedStatusDialog();
            handler.Delay = 1000;
            handler.ShowDialogPercentRule = 25; //default
            handler.ShowMousePercentRule = 75; //default values
            this.gridControl1.Model.OperationFeedbackListener = handler;
            </code>
            </example>
            <seealso cref="T:Syncfusion.ComponentModel.OperationFeedbackListener"/>
            <seealso cref="T:Syncfusion.ComponentModel.OperationFeedback"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMapChanged">
            <summary>
            Occurs when the reference for <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/> in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DataChanged">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/> has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ModifiedChanged">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Modified"/> has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.FileNameChanged">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName"/> has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged">
            <summary>
            Occurs after the contents of a specified range of cells have changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging">
            <summary>
            Occurs before the contents of a specified range of cells are being changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges">
            <summary>
            Occurs when any changes in the grid should be confirmed.
            </summary>
            <remarks>
            This event is raised as a result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmPendingChanges"/> method call.
            <para/>
            Set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> True if you cannot commit pending changes.
            </remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmPendingChanges"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RefreshRequest">
            <summary>
            Occurs when Refresh is called.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Refresh"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdateRequest">
            <summary>
            Occurs when the first BeginUpdate was called for the grid model.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest">
            <summary>
            Occurs when EndUpdate was called for the grid model.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo">
            <summary>
            Occurs when the model is about to save style information about a specific cell.
            </summary>
            <remarks>
            If you made changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs.Style"/> you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether the style has been changed from its original settings.
            <para/>
            See DataBoundGrid source code for example.
            <note type="note">The intention of this event is to store data. See
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> for the related UI event after changes were made to the
            data store.</note>
            <para/>
            See <seea cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> for further discussion about this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderSaveCellInfo">
            <summary>
            Occurs when the model is about to save style information about a specific cell and a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/> (e.g. <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/>)
            has been specified.
            </summary>
            <remarks>
            This is similar to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event. <para/>
            Is called before GridModelDataBinder.SaveCellInfo is called and gives you a chance to modify
            style data before they are saved in underlying data source. <para/>
            If you made changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs.Style"/>, you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether the style has been changed from its original settings.
            <para/>
            <note type="note">The intention of this event is to store data. See
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> for the related UI event after changes were made to the
            data store.</note>
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.SaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)"/>
            for further discussion about this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText">
            <summary>
            Occurs for each cell when text is pasted from a buffer into several cells.
            </summary>
            <remarks>
            <para/>
            This event allows you to customize how to handle text pasted into a cell at run-time on demand.
            <para/>
            If you do not wish the grid to make any changes to the cell,
            set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True. The grid will check this
            flag to see whether it should make changes to the cell.
            <para/>
            If you do wish the grid to abort the current paste operation (in case several cells are pasted),
            set the <see cref="P:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.Abort"/> flag to True.
            <para/>
            The GridPasteCellTextEventArgs members, e.ColIndex and e.RowIndex, specify column and row of the cell. The e.Style member holds the
            GridStyleInfo object for the cell.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText">
            <summary>
            Occurs each time the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> is called to get the raw string that represents the underlying cell's value.
            </summary>
            <remarks>
            <para/>
            This event allows you to customize how to represent a cell's value as string at run-time on demand.
            <para/>
            If you do want to customize the grid's default conversion, you should assign the result string
            to <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Text"/> and set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>
            to True. The grid will check this flag to see whether it should return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Text"/>
            or use a default conversion.
            <para/>
            If you need identity information about the cell such as row and column index, you can get that
            information by querying <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Style"/>
            object.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText">
            <summary>
            Occurs each time the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> is called to set the unformatted string that represents the underlying cell's value.
            </summary>
            <remarks>
            <para/>
            This event allows you to customize how to parse the unformatted text into a cell value at run-time on demand.
            <para/>
            If you do want to customize the grid's default parsing behavior, you should assign the resulting value
            to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object
            and set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>
            to True. The grid will check this flag to see whether it should accept your modification
            or use a default parsing routine.
            <para/>
            If you need identity information about the cell such as row and column index, query the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Style"/>
            object.
            <para/>
               See the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> event for further discussion since these two events
               are very similar. Often you will need to handle both events in your code in the same way.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ApplyText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.CommandStackChanged">
            <summary>
            Occurs when an undo or redo command has been added to the command stack. Check GridModelCommandManager.UndoStack
            or GridModelCommandManager.RedoStack to see the list of commands on the stack.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText">
            <summary>
            Occurs each time the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText"/> is called to get the formatted string that represents the underlying cell's value
            considering <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/>.
            </summary>
            <remarks>
            <para/>
            This event allows you to customize how to format a cell's value as string at run-time on demand based on <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/>.
            <para/>
            If you do want to customize the grid's default formatting, you should assign the resulting string
            to <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Text"/> and set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>
            to True. The grid will check this flag to see whether it should return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Text"/>
            or use a default formatting routine.
            <para/>
            If you need identity information about the cell such as row and column index, you can get that
            information by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Style"/>
            object.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText">
            <summary>
            Occurs each time the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText"/> is called to parse the formatted string that represents the underlying cell's value
            considering <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>.
            </summary>
            <remarks>
            <para/>
            This event allows you to customize how to parse the formatted text into a cell value at run-time on demand.
            <para/>
            If you do want to customize the grid's default parsing behavior, you should assign the resulting value
            to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object
            and set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>
            to True. The grid will check this flag to see whether it should accept your modification
            or use a default parsing routine.
            <para/>
            If you need identity information about the cell such as row and column index, you can get that
            information by querying the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Style"/>
            object.
            <para/>
            This event is normally called from within <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/>, which is called
            when the user enters text into a text box or when text is assigned to <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText"/>.
            ApplyFormattedText method checks if there are event handlers for <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> and
            if the <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> is not set, they try to convert the input text into
            the type specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>.
            <para/>
            If this conversion fails, <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> will check <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/>. If it
            is True, an exception is thrown which itself results in a warning message displayed to the user at the
            time from <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/>.
            <para/>
            If you set <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/> to False, <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> will not throw
            an exception and simply store the text as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>.
            <para/>
            If you need a more specialized customization of this behavior, you should handle the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> event. This lets you parse the text input
            and change the cells <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> at run-time. See the attached example.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/>
            <example>
            This example parses the text input and changes the cell's CellValueType at run-time if the input does not match the current CellValueType.
            <code lang="C#">
            void InitializeComponent()
            {
                // initialize code
                // ...
                this.gridControl1.SaveCellText += new Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler(this.gridControl1_SaveCellText);
                this.gridControl1.QueryCellFormattedText += new Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler(this.gridControl1_QueryCellFormattedText);
                this.gridControl1.SaveCellFormattedText += new Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler(this.gridControl1_SaveCellFormattedText);
                this.gridControl1.QueryCellText += new Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler(this.gridControl1_QueryCellText);
            }
            <para/>
            private void gridControl1_QueryCellFormattedText(object sender, Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs e)
            {
            <para/>
            }
            <para/>
            private void gridControl1_QueryCellText(object sender, Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs e)
            {
            <para/>
            }
            <para/>
            private void gridControl1_SaveCellText(object sender, Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs e)
            {
                ParseText(e);
            }
            <para/>
            private void gridControl1_SaveCellFormattedText(object sender, GridCellTextEventArgs e)
            {
                ParseText(e);
            }
            <para/>
            void ParseText(GridCellTextEventArgs e)
            {
                // By default, the grid will display a warning message box informing the user
                // the entered value is not valid and the user will have to change the value.
                //
                // In this event handler, we change the grid default's behavior such that
                // when the user enters a value that does not fit the cell's CellValueType,
                // the input text is accepted and no warning message is shown.
                if (e.Handled)
                    return;
            <para/>
                System.Globalization.CultureInfo ci = e.Style.CultureInfo;
                System.Globalization.NumberFormatInfo nfi = ci != null ? ci.NumberFormat : null;
                try
                {
                    e.Style.CellValue = GridCellValueConvert.Parse(e.Text, e.Style.CellValueType, nfi, e.Style.Format);
                }
                catch (Exception ex)
                {
                    if (ex is FormatException || ex.InnerException is FormatException)
                    {
                        e.Style.CellValue = e.Text;
                        // possibly could also change CellValueType here
                        e.Style.CellValueType = typeof(string);
                        // - or -
                        // you could also further analyze the input text and assign a type
                        // that fits the input text, e.g.
                        // e.Style.CellValueType = typeof(datetime);
                        // - or -
                        // e.Style.CellValueType = typeof(decimal);
                        // etc.
                    }
                    else
                        throw;
                }
                e.Handled = true;
            }
            </code>
            <code lang="VB">
            Private Sub InitializeComponent()
                ' Initalize code
                ' ...
                AddHandler Me.gridControl1.SaveCellText, AddressOf Me.gridControl1_SaveCellText
                AddHandler Me.gridControl1.QueryCellFormattedText, AddressOf Me.gridControl1_QueryCellFormattedText
                AddHandler Me.gridControl1.SaveCellFormattedText, AddressOf Me.gridControl1_SaveCellFormattedText
                AddHandler Me.gridControl1.QueryCellText, AddressOf Me.gridControl1_QueryCellText
            End Sub 'InitializeComponent
            <para/>
            Private Sub gridControl1_QueryCellFormattedText(sender As Object, e As Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)
            End Sub 'gridControl1_QueryCellFormattedText
            <para/>
            Private Sub gridControl1_QueryCellText(sender As Object, e As Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)
            End Sub 'gridControl1_QueryCellText
            <para/>
            Private Sub gridControl1_SaveCellText(sender As Object, e As Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs)
                ParseText(e)
            End Sub 'gridControl1_SaveCellText
            <para/>
            Private Sub gridControl1_SaveCellFormattedText(sender As Object, e As GridCellTextEventArgs)
                ParseText(e)
            End Sub 'gridControl1_SaveCellFormattedText
            <para/>
            Sub ParseText(e As GridCellTextEventArgs)
                ' By default, the grid will display a warning message box informing the user
                ' the entered value is not valid and the user will have to change the value.
                '
                ' In this event handler we change the grid default's behavior such that
                ' when the user enters a value that does not fit the cell's CellValueType,
                ' the input text is accepted and no warning message is shown.
                If e.Handled Then
                    Return
                End If
                Dim ci As System.Globalization.CultureInfo = e.Style.CultureInfo
                Dim nfi As System.Globalization.NumberFormatInfo = Nothing
                If (Not (ci Is Nothing)) Then nfi = ci.NumberFormat
                Try
                    e.Style.CellValue = GridCellValueConvert.Parse(e.Text, e.Style.CellValueType, nfi, e.Style.Format)
                Catch ex As Exception
                    If TypeOf ex Is FormatException OrElse TypeOf ex.InnerException Is FormatException Then
                        e.Style.CellValue = e.Text
                    ' possibly could also change CellValueType here
                    ' e.Style.CellValueType = typeof(string);
                    ' - or -
                    ' you could also further analyze the input text and assign a type
                    ' that fits the input text, e.g.
                    ' e.Style.CellValueType = typeof(datetime);
                    ' - or -
                    ' e.Style.CellValueType = typeof(decimal);
                    ' etc.
                    Else
                        Throw
                    End If
                End Try
                e.Handled = True
            End Sub 'ParseText
            </code>
            </example>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ParseCommonFormats">
            <summary>
            Use this event to provide support for parsing the formatted string and convert
            it into the the underlying cell's value
            considering <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>.
            <para/>
            This event is raised from GridCellModelBase.ApplyFormattedText after 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> was raised. The event is raised only 
            if the SaveCellFormattedText did not set e.Handled. 
            </summary>
            <remarks>
            The grid has built-in support for parsing the Percent format (Format = "P") and Hexadecimal
            format (Format = "X"). You should handle this event if you want to add support
            for other formats. <para/>
            GridCellTextEventArgs has information about the style settings of the cell. You can
            inspect that style to get information about Format and CellValueType of the cell.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanPaste">
            <summary>
            Occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanPaste"/> is called on the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> component of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            This event lets you provide your own customized paste behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            You can specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.IgnoreCurrentCell"/> if you want the standard Paste method to ignore the current cell.
            <para/>
            If the user has selected a range of cells and paste is called, you can force the clipboard contents to be pasted into the
            selected range and not at the current cell's position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPaste">
            <summary>
            Occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Paste"/> is called on the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> component of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            This event lets you provide your own customized paste behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            You can specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.IgnoreCurrentCell"/> if you want the standard Paste to method ignore the current cell.
            <para/>
            If the user has selected a range of cells and paste is called, you can force the clipboard contents to be pasted into the
            selected range and not at the current cell's position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPasted">
            <summary>
            Occurs after the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Paste"/> was called on the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> component of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>
            and text was pasted into the grid.
            </summary>
            <remarks>
            This event is called to inform you that text or cells have been pasted.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDropAtRowCol">
            <summary>
            Occurs when the when the user releases the mouse over a cell at the end of an OLE drag-and-drop operation and
            before the data are applied to the grid.
            </summary>
            <remarks>
            This event lets you provide your own customized paste data behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will check <see cref="P:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.Result"/> as indication if the
            operation was successful.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDroppedData">
            <summary>
            Occurs after the user releases the mouse over a cell at the end of an OLE drag-and-drop operation and
            the data were applied to the grid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCut">
            <summary>
            Occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanCut"/> is called on the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> component of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            This event lets you provide your own customized paste behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            You can specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.IgnoreCurrentCell"/> if you want the standard Cut method to ignore the current cell.
            <para/>
            If the user has selected a range of cells and paste is called, you can force the clipboard contents to be pasted into the
            selected range and not at the current cell's position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCut">
            <summary>
            Occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Cut"/> is called on the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> component of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            This event lets you provide your own customized paste behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            You can then specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.IgnoreCurrentCell"/> if you want the standard Cut method to ignore the current cell.
            <para/>
            If the user has selected a range of cells and paste is called, you can force the clipboard contents to be pasted into the
            selected range and not at the current cell's position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopy">
            <summary>
            Occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Copy"/> is called on the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> component of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            This event lets you provide your own customized paste behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            You can then specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.IgnoreCurrentCell"/> if you do want the standard Copy method to ignore the current cell.
            <para/>
            If the user has selected a range of cells and paste is called, you can force the clipboard contents to be pasted into the
            selected range and not at the current cell's position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCopy">
            <summary>
            Occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Copy"/> is called on the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> component of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            This event lets you provide your own customized paste behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            You can then specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.IgnoreCurrentCell"/> if you want the standard Copy method to ignore the current cell.
            <para/>
            If the user has selected a range of cells and paste is called, you can force the clipboard contents to be pasted into the
            selected range and not at the current cell's position.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopyToBuffer">
            <summary>
            Occurs when the text copies to buffer
            </summary>
            <remarks>
            This event lets you to modify the text which is being copied to the buffer.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ClearingCells">
            <summary>
            Occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/> is called on a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            This event lets you provide your own customized clear cells behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryOleDataSourceData">
            <summary>
            Occurs when a user starts dragging a range of selected cells
            using OLE drag-and-drop.
            </summary>
            <remarks>
            This event lets you supply your own clipboard formats or add support for pasting additional clipboard content.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.Result"/> as return value.
            <para/>
            If you want the grid to proceed with default behavior, do not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            You can specify <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.IgnoreCurrentCell"/> if you want the standard Copy method to ignore the current cell
            or change <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.DragDropFlags"/> for more advanced options.
            <para/>
            This event lets you customize the OLE Data Source behavior of an OLE drag-and-drop operation. See the
            <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer"/> interface for customizing the OLE DropTarget part of an OLE drag-and-drop operation.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryDragDropMoveClearCells">
            <summary>
            Occurs when the user drops data onto another control using OLE drag-and-drop
            and does not press the Control Key. Set e.Cancel = True for this event if you do not
            want the grid to clear cell contents of the dragged cells.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo">
            <summary>
            Occurs when the model queries for style information about a specific cell.
            </summary>
            <remarks>
            This event allows you to customize cell contents at run-time on demand, just before
            the cell is drawn or programmatically accessed through <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/>,
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/>, <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles"/>,
            or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle"/>.
            <para/>
            If you made changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs.Style"/> you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to true. The grid will check this
            flag to see whether the style has been initialized. If the event has been marked as
            handled, the grid will not access cell information from its own data store
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/>. In the default case when the event is not marked as handled,
            the grid will locate cell information by calling <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.Item(System.Int32,System.Int32)"/>.
            <para/>
            See <seea cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> for further discussion about this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderQueryCellInfo">
            <summary>
            Occurs when the model queries for style information about a specific cell and a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/> (e.g. <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/>)
            has been specified.
            </summary>
            <remarks>
            This event allows you to customize cell contents at run-time on demand, just before
            the <see cref="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.QueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/>
            is called.
            <para/>
            If you make changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs.Style"/> you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether the style has been initialized. If the event has been marked as
            handled, the grid will not access cell information from its own data store
            or from <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/>. In the default case when the event is not marked as handled,
            the grid will locate cell information by calling <see cref="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.QueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.Item(System.Int32,System.Int32)"/>.
            <para/>
            See <seea cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider.QueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)"/>
            for further discussion about this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange">
            <summary>
            Occurs when the model queries information about covered cells at a specific cell.
            </summary>
            <remarks>
            This event allows you to specify covered ranges at run-time, e.g when you have
            a large grid with repeating patterns of covered ranges. If the specified row and
            column index is part of a covered cells range, you should assign the coordinates
            of the covered cell to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs.Range"/> and
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True.
            <para/>
            <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> indicates that you supplied data
            from your event handler and no further querying for data about covered range information
            for this cell is necessary.
            <para/>
            See the VirtualGrid sample for an example how to use this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange">
            <summary>
            Occurs when the model queries information about a bannered range at a specific cell.
            </summary>
            <remarks>
            This event allows you to specify bannered ranges at run-time, e.g when you have
            a large grid with repeating patterns of bannered ranges. If the specified row and
            column index is part of a bannered cells range you should assign the coordinates
            of the bannered cell to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs.Range"/> and
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True.
            <para/>
            <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> indicates that you supplied data
            from your event handler and no further querying for data about bannered range information
            for this cell is necessary.
            <para/>
            See the BannerCells sample for an example how to use this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount">
            <summary>
            Occurs before the column count is returned from the model.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> for a more detailed discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount">
            <summary>
            Occurs before the row count is returned from the model.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> for a more detailed discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount">
            <summary>
            Occurs before the column count is changed in the model.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> for a more detailed discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount">
            <summary>
            Occurs before the row count is changed in the model.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> for a more detailed discussion.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel">
            <summary>
            Occurs when the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> is querying for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and the cell type is not found in the GridCellModelCollection.
            </summary>
            <remarks>
            The GridModel has a table with all cell types used in the grid. Whenever the grid encounters
            a new cell type that it cannot find in the table it will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event.
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> identifies the name of the cell type. The
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs.CellModel"/> should receive the new instance of the
            associated cell object. This object will be stored in the table together with its name and
            reused among cells with the same <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>.
            <para/>
            You should process this event if you want to add custom cell types and initialize these
            cell types on demand when associated cells are accessed the first time.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.CellModelsChanged">
            <summary>
            Occurs when the CellModels collection is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ActiveGridView">
            <summary>
            Gets or sets the active grid view.
            </summary>
            <remarks>
            If there are several views associated with this model, only one <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> can be active.
            <para/>
            Changing the active view will result in calls to <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Deactivate(System.Boolean)"/>
            and <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.Activate(System.Int32,System.Int32)"/> for the involved controls.
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.UpdateOptions">
            <summary>
            Gets the painting support during the BeginUpdate, EndUpdate batch.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Updating">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate"/> has been called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CanRaiseEvents">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CanGridRaiseEvents">
            <summary>
            Gets a value indicating whether raising events has been suspended.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ShouldRecordUndo">
            <summary>
            Gets a value indicating whether undo information should be logged.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Initializing">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginInit"/> was called.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRangeRequest">
            <summary>
            Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeOptions)"/> is called for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.GridCellsRange">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with all cells in the grid, excluding row and column headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ScrollableGridRangeInfo">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with all cells in the grid, excluding frozen rows and columns.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics">
            <summary>
            Occurs before the grid draws to or uses a <see cref="T:System.Drawing.Graphics"/> context.
            </summary>
            <remarks>
            Typical places where this event is raised are: <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            and <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResizeToFit(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>.
            <para/>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedback">
            <summary>
            Occurs when an operation takes a longer time and the user should be notified
            about its status and have a chance to abort.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.ComponentModel.OperationFeedbackEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.AllowNewGridVolatileData">
            <summary>
            Gets or sets a value indicating whether GridModel should use the newer <see cref="T:Syncfusion.Windows.Forms.Grid.GridNewVolatileData"/>
            as the default volatile data store. This works only with .NET Framework 2.0 or higher
            and offers improved performance especially with virtual mode scenarios.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> that is associated with this <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.HasBaseStylesMap">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/> has been associated with this <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Data">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object that saves cell contents and row and column headers for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <remarks>
            A <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataChanged"/> event is raised if you replace the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.HasData">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/> has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.IsUntitled">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName"/> was specified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Modified">
            <summary>
            Gets or sets a value indicating whether the modified state of the grid. A <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ModifiedChanged"/> event is raised
            when this property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName">
            <summary>
            Gets or sets the filename for saving the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> next time you call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.SelectedRanges">
            <internalonly/>
            <summary>Gets Selected Ranges. Used internally.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged">
            <summary>
            Occurs after row heights for a specified range of rows have been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging">
            <summary>
            Occurs before row heights for a specified range of rows are changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged">
            <summary>
            Occurs after column widths for a specified range of columns have been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging">
            <summary>
            Occurs before column widths for a specified range of columns are changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth">
            <summary>
            Occurs before the size of a column is returned from the dictionary.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight">
            <summary>
            Occurs when the size of a row is retrieved.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeightTotal">
            <summary>
            Occurs when the total size of several rows is retrieved.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth">
            <summary>
            Occurs before the size of a column is stored in the dictionary.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight">
            <summary>
            Occurs before the size of a row is stored in the dictionary.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights">
            <summary>
            Gets row heights for the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths">
            <summary>
            Gets column widths for the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHiddenEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ColHiddenEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden">
            <summary>
            Occurs after a range of columns was hidden.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding">
            <summary>
            Occurs before a range of columns is hidden.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden">
            <summary>
            Occurs after a range of rows was hidden.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding">
            <summary>
            Occurs before a range of rows is hidden.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol">
            <summary>
            Occurs before the hidden state of a column is returned from the dictionary.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol">
            <summary>
            Occurs before the hidden state of a column is stored in the dictionary.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow">
            <summary>
            Occurs before the hidden state of a row is returned from the dictionary.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow">
            <summary>
            Occurs before the hidden state of a row is stored in the dictionary.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows">
            <summary>
            Gets hidden rows in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols">
            <summary>
            Gets hidden columns in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CommandStack">
            <summary>
            Gets undo and redo in the grid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging">
            <summary>
            Occurs before the default row height is changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged">
            <summary>
            Occurs after the default row height has been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging">
            <summary>
            Occurs before the default column width is changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged">
            <summary>
            Occurs after the default column width has been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged">
            <summary>
            Occurs after the header row count has been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging">
            <summary>
            Occurs before the header row count is changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged">
            <summary>
            Occurs after the frozen row count has been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging">
            <summary>
            Occurs before the frozen row count is changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved">
            <summary>
            Occurs after a range of rows is moved.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving">
            <summary>
            Occurs before a range of rows is moved.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved">
            <summary>
            Occurs after a range of rows has been removed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving">
            <summary>
            Occurs before a range of rows is removed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting">
            <summary>
            Occurs before a range of rows is inserted.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted">
            <summary>
            Occurs after a range of rows has been inserted.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged">
            <summary>
            Occurs after the header column count has been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging">
            <summary>
            Occurs before the header column count is changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged">
            <summary>
            Occurs after the frozen column count has been changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging">
            <summary>
            Occurs before the frozen column count is changed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved">
            <summary>
            Occurs after a range of columns is moved.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving">
            <summary>
            Occurs before a range of columns is moved.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved">
            <summary>
            Occurs after a range of columns has been inserted.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving">
            <summary>
            Occurs before a range of columns is removed.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting">
            <summary>
            Occurs before a range of columns is inserted.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted">
            <summary>
            Occurs after a range of columns has been inserted.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows">
            <summary>
            Gets row operations for the grid. Allows you to insert, move, remove rows, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols">
            <summary>
            Gets column operations for the grid. Allows you to insert, move, remove columns, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider">
            <summary>
            Gets or sets a one-stop place to subscribe to row count, column count, and QueryCellInfo events.
            </summary>
            <remarks>
            You should implement <see cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/> if you want to receive
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> events.
            <para/>
            The methods in this interface are called before the named events are raised and thus
            give you a chance to control the event's behavior before other subscribers can handle it.
            <para/>
            You should assign a reference of your object to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/> in order
            to receive the method calls.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.DataProviderChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/> property has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.WarnOnRecursionLevel">
            <summary>
            Gets or sets RecursionLevel. If you handle the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event and access other cells of the grid,
            there is a danger that you start an infinite recursion when you access the same
            cell in the grid for which <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)"/> was called. <para/>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/> checks the recursion level. If the level is greater
            than <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.WarnOnRecursionLevel"/>, an exception is thrown. The default is 6.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.AllowAdjustCellValue">
            <summary>
            Gets or sets a value indicating whether the the CellValue should be converted to a specified CellValueType at
            the time CellValueType is set if CellValue is assigned to a cell before the CellValueType.
            Default is true for 4.1 and later. 
            If this flag is not set the CellValueType will not be enforced on a previously set CellValue.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)">
            <summary>
            Gives you access to the style information of a cell.
            </summary>
            <remarks>
            The indexer provides you with a very simple way to query and change cell contents.
            </remarks>
            <example>
            The following example make some changes to the grid using the indexer:
            <code lang="C#">
                        model[2, 2].Text = "Grid Demo";
                        model[2, 2].Font.Bold = true;
                        model[2, 2].Font.Size = 16;
                        model[2, 2].HorizontalAlignment = GridHorizontalAlignment.Center;
                        model[2, 2].VerticalAlignment = GridVerticalAlignment.Middle;
                        model[2, 2].CellType = "Static";
                        model[2, 2].Borders.All = new GridBorder(GridBorderStyle.Solid, Color.FromArgb(100, 238, 122, 3));
                        model[2, 2].Interior = new BrushInfo(GradientStyle.PathEllipse, Color.FromArgb(100, 57, 73, 122), Color.FromArgb(237, 240, 247));
            </code>
            If you query for specific attributes in a cell and these attributes have not been explicitly set for the cell,
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that is returned by the indexer is smart enough to query base styles for
            queried information.
            <code lang="C#">
                        GridStyleInfo standard = model.BaseStylesMap["Standard"].StyleInfo;
                        standard.TextColor = Color.FromArgb(0, 21, 84);
                            Color color = model[1, 1].TextColor;
                            // model[1, 1].TextColor will return Color.FromArgb(0, 21, 84));
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles">
            <summary>
            Gets column styles. Individual cells will inherit attributes from the corresponding column style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles">
            <summary>
            Gets row styles. Individual cells will inherit attributes from the corresponding row style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle">
            <summary>
            Gets or sets the table style. Individual cells will inherit attributes from the table style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CurrentCellInfo">
            <summary>
            Gets or sets information about position of current cell, current cell renderer, and last active grid control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.HasCurrentCellInfo">
            <summary>
            Gets a value indicating whether information about current cell is available.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CurrentCellRenderer">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> for the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste">
            <summary>
            Gets clipboard operations for the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.DataExchange">
            <summary>
            Gets style data exchange for the grid. Lets you copy style information to a stream or clipboard and recreate the
            styles at a later time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.TextDataExchange">
            <summary>
            Gets text data exchange for the grid. Lets you copy cell text to a stream or clipboard and recreate the
            cell text at a later time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.RowCount">
            <summary>
            Gets or sets the number of rows in the grid. You can provide this value at run-time if you handle the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> events.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ColCount">
            <summary>
            Gets or sets the number of columns in the grid.
            You can provide this value at run-time if you handle the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>
            or <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/> events.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly">
            <summary>
            Gets or sets a value indicating whether to DiscardReadOnly. Use IgnoreReadOnly instead.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.ReadOnlyChanged">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ReadOnly"/> has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the grid is in Read-only state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.BrowseOnly">
            <summary>
            Gets or sets a value indicating whether the grid is in Browse-only state.
            To check the BrowseOnly state of Grid internally
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether IsReadOnly. Internal only. just for compatibility...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.IgnoreReadOnly">
            <summary>
            Gets or sets a value indicating whether to make changes to Read-only cells. Set this True if you want to be able make changes to Read-only cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Selections">
            <summary>
            Gets range selections in the grid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging">
            <summary>
            Occurs before the model updates internal data structures when the model in the process of selecting
            a range of cells as a result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/>.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> will raise a  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event before
            it updates its internal data structures and a  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event
            afterwards. A <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> grid listens to this event and outlines
            the selected range of cells.
            <para/>
            You can disallow the selection of specific cells at run-time when
            you assign true to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can also modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs.Range"/> to include additional cells.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged">
            <summary>
            Occurs after the model updates its internal data structures when the model in the process of selecting
            a range of cells as a result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/>.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> will raise a  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event before
            it updates its internal data structures and a  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event after
            afterwards. A <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> grid listens to this event and outline
            the selected range of cells.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareClearSelection">
            <summary>
            Occurs before the grid model will clear its list of selected ranges when the user selects a new
            range of cells or when <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.Clear"/> was called.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareClearSelection"/> event before
            it updates its internal data structures. A <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> grid listens to this event and
            repaints the selected range of cells.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection">
            <summary>
            Occurs before the model changes the current selection.
            </summary>
            <remarks>
            This event is raised by the model
            to notify all associated views that there has been a change to the current selection
            in the grid and all associated views should redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs"/> for further discussion about this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRanges">
            <summary>
            Gets bannered ranges in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRanges">
            <summary>
            Gets covered ranges in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.EnableGridListControlInComboBox">
            <summary>
            Gets or sets whether the grid's combobox controls should contain GridListControl. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.EnableLegacyStyle">
            <summary>
            Gets / sets the Legacy styles
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging">
            <summary>
            Occurs before covering is applied or reset for a range of cells.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged">
            <summary>
            Occurs after covering was applied or reset for a range of cells.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging">
            <summary>
            Occurs before bannered range is applied or reset for a range of cells.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged">
            <summary>
            Occurs after bannered range was applied or reset for a range of cells.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCells">
            <summary>
            Gets floating cells in the grid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged">
            <summary>
            Occurs after floating state was changed for a range of cells.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.MergeCells">
            <summary>
            Gets merge cells in the grid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged">
            <summary>
            Occurs after merge state was changed for a range of cells.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs"/> for more detailed discussion about this event.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells">
            <summary>
            Occurs when grid compares the contents of two cells to determine if they should be merged. Set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>
            to True if you want to provide a customized comparison for cell contents.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels">
            <summary>
            Gets cell types for the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.DragDropData">
            <internalonly/>
            <summary>Gets DragDrop Data. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModel.Properties">
            <summary>
            Gets or sets more options for the grid. Printing related. Also manages colors for grid background, grid lines, and more.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData">
            <summary>
            Temporary data during OLE drag-and-drop operation. Implementation specific and will change in future versions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndSource">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndStartRow">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndStartCol">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndSelList">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndForceDropCol">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndForceDropRow">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndRowOffset">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndColOffset">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndCurrentCellText">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndCurrentCellControl">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndGridSource">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndRowsCopied">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndColsCopied">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.dndGridTargetStyle">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.directDragDrop">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModel.InternalGridDragDropData.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModel.Binder">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.#ctor(System.String,System.Type)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Internal only.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects to find in the collection as bindable. This can be null.</param>
            <returns>
            The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties on each item used to bind data.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Internal only.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects, for which the list name is returned. This can be null.</param>
            <returns>The name of the list.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.GetMaxLength(System.String,System.Globalization.CultureInfo)">
            <summary>
            Internal only.
            </summary>
            <param name="format">The format.</param>
            <param name="ci">The CultureInfo.</param>
            <returns>returns max length</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.Add(System.Object)">
            <summary>
            Internal only.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to be added to the end of the <see cref="T:System.Collections.ArrayList"/>. The value can be null.</param>
            <returns>
            The <see cref="T:System.Collections.ArrayList"/> index at which the <paramref name="value"/> has been added.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.AddRange(System.Collections.ICollection)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.Clear">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.Insert(System.Int32,System.Object)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.InsertRange(System.Int32,System.Collections.ICollection)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.Remove(System.Object)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.RemoveAt(System.Int32)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.RemoveRange(System.Int32,System.Int32)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList.Item(System.Int32)">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.#ctor(Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList,System.String,System.Type)">
            <summary>
            Initializes a new PropertyDescriptor and attaches it to a FieldDescriptor.
            </summary>
            <param name="parent">A reference to <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesList"/>.</param>
            <param name="name">Proprety name.</param>
            <param name="type">Property type.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <override/>
            <summary>
            Determines a value indicating whether the
            value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for
            persistence. </param>
            <returns>
            true if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.SetValue(System.Object,System.Object)">
            <override/>
            <summary>
            Sets the value of the component to a
            different value.
            </summary>
            <param name="component">The component with the property value that is to be set.
            <param name="value">The new value. </param>        
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.ResetValue(System.Object)">
            <override/>
            <summary>
            Resets the value for this property of the
            component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be
            reset to the default value. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.GetValue(System.Object)">
            <override/>
            <summary>
            Gets the current value of the property on a
            component.
            </summary>
            <param name="component">The component with the property for which to retrieve
            the value. </param>
            <returns>
            The value of a property for a given component.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.CanResetValue(System.Object)">
            <override/>
            <summary>
            Returns whether resetting an object changes
            its value.
            </summary>
            <param name="component">The component to test for reset capability. </param>
            <returns>
            true if resetting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.GetHashCode">
            <override/>
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns>
            The hash code for this object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.Equals(System.Object)">
            <override/>
            <summary>
            Compares this to another object to see if they are equivalent.
            </summary>
            <param name="other">The object to compare. </param>
            <returns>
            true if the values are equivalent; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.PropertyType">
            <override/>
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.IsReadOnly">
            <override/>
            <summary>
            Gets a value indicating whether this
            property is read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.ComponentType">
            <override/>
            <summary>
            Gets the type of the component this property
            is bound to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPropertyStandardValuesSelfPropertyDescriptor.IsBrowsable">
            <override/>
            <summary>
            Gets a value indicating whether the member is browsable.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges">
            <summary>
            This class manages bannered cell ranges for a grid.
            </summary>
            <remarks>
            You access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRanges"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            <para/>
            Bannered ranges are saved in two separate collections.
            <para/>
            The first collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>,
            which allows quick enumeration through all bannered cell ranges in the grid. This is good when bannered ranges
            need to be recalculated because rows or column have been inserted, moved, or removed.
            <para/>
            The second collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool"/>, which is optimized to look up if a specific cell
            is part of a bannered range.
            <para/>
            The <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/> event in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> lets you provide customized
            bannered cells ranges at run-time. For example you might want to have a pattern of bannered ranges.
            This allows you to customize the grid's default behavior and manage bannered
            ranges by your own code and not with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges"/> from a serialization stream.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges"/> object and associates it
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/></param>.
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Adds a bannered range cell.
            </summary>
            <param name="range">Cell range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.AddRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo[])">
            <summary>
            Adds multiple bannered range cells.
            </summary>
            <param name="ranges">The list of ranges to add</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Removes bannered cells that are contained in the specified range.
            </summary>
            <param name="range">The range that you want to clear from bannered cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.SetBanneredRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Adds or removes a bannered range.
            </summary>
            <param name="range">The affected range that indicates a new bannered cell or the range of cells where bannered cells should be removed.</param>
            <param name="setOrReset">True if you want to add a bannered; False if range should be cleared.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Clear">
            <summary>
            Resets all bannered ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.SetBanneredRanges(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Adds or removes one or multiple bannered range.
            </summary>
            <param name="ranges">The list that holds range with new bannered cells or ranges where bannered cells should be removed.</param>
            <param name="setOrReset">True if you want to add bannered cells; False if ranges should be cleared.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.GetEnumerator">
            <summary>
            Returns an enumerator for stepping through all bannered ranges.
            </summary>
            <returns>The enumerator for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Ranges"/> collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all range objects into an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> starting at specified index.
            </summary>
            <param name="array">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Find(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the bannered range for the specified cell position
            or False if there is no bannered range for the given cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the found bannered range is returned.</param>
            <returns>True if a bannered range is at the specified cell position; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.FindRange(System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the bannered range for the specified cell position
            or <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if there is no bannered range for the given cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>A reference to the bannered range is at the specified cell position or
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Merge(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Combines all bannered ranges that intersect into one outer range that spans over all found ranges.
            </summary>
            <param name="range">The original range. </param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the outer range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.UpdateList">
            <summary>
            Synchronizes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredCellPool"/>. The pool will be emptied and initialized with ranges specified in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Ranges"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.InsertRows(System.Int32,System.Int32)">
            <summary>
            Synchronizes the bannered ranges after rows have been inserted in the grid.
            </summary>
            <param name="insertAt">The starting row index where new rows should be inserted.</param>
            <param name="count">The number of rows to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.InsertCols(System.Int32,System.Int32)">
            <summary>
            Synchronizes the bannered ranges after columns have been inserted in the grid.
            </summary>
            <param name="insertAt">The starting column's index where new columns should be inserted.</param>
            <param name="count">The number of rows to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Synchronizes the bannered ranges after rows have been removed from the grid.
            </summary>
            <param name="fromRowIndex">The first row index.</param>
            <param name="toRowIndex">The last row index.</param>
            <returns>True if any bannered ranges were affected; False if no range needed to be changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.RemoveCols(System.Int32,System.Int32)">
            <summary>
            Synchronizes the bannered ranges after columns have been removed from the grid.
            </summary>
            <param name="fromColIndex">The first column index.</param>
            <param name="toColIndex">The last column index.</param>
            <returns>True if any bannered ranges were affected; False if no range needed to be changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.MoveRows(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Synchronizes the bannered ranges after rows have been moved within the grid.
            </summary>
            <param name="from">The first row index.</param>
            <param name="last">The last row index.</param>
            <param name="target">The target row.</param>
            <param name="rowCount">The current row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.MoveCols(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Synchronizes the bannered ranges after columns have been moved within the grid.
            </summary>
            <param name="from">The first column index.</param>
            <param name="last">The last column index.</param>
            <param name="target">The target row.</param>
            <param name="colCount">The current column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.OnChanged(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">A GridRowColSizeChangedEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.OnChanging(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs)">
            <summary>
            Raises the Changing event.
            </summary>
            <param name="e">A GridRowColSizeChangingEventArgs that contains the event data.</param>
            <returns>return boolean value to indicate changing</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Ranges">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> and lets you enumerate through all bannered ranges
            managed by this <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges"/> instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Count">
            <summary>
            Gets the number of ranges in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.SyncRoot">
            <summary>
             Gets NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.IsSynchronized">
            <summary>
             Gets a value indicating whether IsSynchronized. Returns False.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCollectionEditor">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCollectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCollectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCollectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager">
            <summary>
            This class manages undo and redo commands for a grid.
            </summary>
            <remarks>
            You access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CommandStack"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/> and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CreateSelectionStateCommand">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand"/> with information about the grid's
            current selection state.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> has an internal dirty flag that this method will reset. Only
            when the user moves the current cell or changes the current selection, will the dirty flag be set.
            <para/>
            If the dirty flag was reset and there were no changes to selection, this method will return NULL.
            <para/>
            If the dirty flag was True, this method will return the current selection state and reset the dirty flag.
            </remarks>
            <returns>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand"/> with information about the grid's
            current selection state.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Push(Syncfusion.ComponentModel.SyncfusionCommand)">
            <overload>
            Pushes a command onto the undo stack.
            </overload>
            <summary>
            Pushes a command onto the undo stack.
            </summary>
            <param name="cmd">The <see cref="T:Syncfusion.ComponentModel.SyncfusionCommand"/> with undo information.</param>
            <remarks>
            When the grid is performing an <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Undo"/>, the command will be pushed onto the redo stack. Otherwise, 
            commands are pushed onto the undo stack.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Push(Syncfusion.ComponentModel.SyncfusionCommand,Syncfusion.ComponentModel.SyncfusionCommand)">
            <summary>
            Pushes a command together with selection state onto the undo stack.
            </summary>
            <param name="cmd">The <see cref="T:Syncfusion.ComponentModel.SyncfusionCommand"/> with undo information.</param>
            <param name="selectionStateCommand">The command object with selection information created by a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CreateSelectionStateCommand"/> call.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Clear">
            <summary>
            Empties both the undo and redo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Undo">
            <summary>
            Execute the latest command from the undo stack.
            </summary>
            <remarks>
            The redo stack will be cleared.
            <para/>
            If a <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand"/> is found this will also be executed so that
            selection state will be restored to the same state as it was when the undo command was
            recorded.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Redo">
            <summary>
            Execute the latest command from the redo stack.
            </summary>
            <remarks>
            If a <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionStateCommand"/> is found, this will also be executed so that
            selection state will be restored to the same state as it was when the undo / redo command was
            recorded.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)">
            <summary>
            Starts a transaction that combines several subsequent commands into one transaction.
            </summary>
            <param name="s">A description for the transaction. This text can appear for example as "Undo" information in a menu 
            to give feedback to the user about command on the undo stack.
            </param>
            <remarks>
            When you call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/>, a <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> is created and the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/>
            is switched into a special mode where new commands will not be pushed onto the undo stack. Instead all new commands
            will be pushed into the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> instance. 
            <para/>
            When you call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CommitTrans"/>, the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/>  command will be pushed
            onto the undo stack and the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCommandManager"/> will switch back to its default behavior
            where new commands are pushed onto the undo stack.
            <para/>
            When you call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/>, an internal counter will increase but no additional <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> is
            created. Only once you call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CommitTrans"/> as many times as you have called <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/> will the
            transaction will be considered complete and the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> command will be pushed
            onto the undo stack.
            <para/>
            That means nested transactions are supported. But when you <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Undo"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Rollback"/> a transaction,
            all nested transaction will be treated as one single transaction.
            </remarks> 
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CommitTrans">
            <summary>
            Ends a transaction that was started with a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/> call.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/> for discussion about transaction in a grid.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Rollback">
            <summary>
            Rolls back a transaction in progress that was started with a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/> call.
            </summary>
            <remarks>
            All commands since a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/> call will be undone.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.InTransaction">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/> has been called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.CurrentTransactionCommand">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridTransactionCommand"/> while the transaction is recorded. If <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.BeginTrans(System.String)"/>
            was not called, this will be NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Mode">
            <summary>
            Gets or sets the current undo mode that indicates if the grid is in a regular operation or performing an undo or rollback.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.Enabled">
            <summary>
            Gets or sets a value indicating whether the grid should record undo information or if no undo information should be recorded.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.ShouldGenerateUndoInfo">
            <summary>
            Gets a value indicating whether a grid operation should generate undo information or if undo is temporarily suspended.
            </summary>
            <remarks>
            You should call this method from your command if you add operations to the grid that
            you want to be able to undo.
            </remarks>
            <para/>
            <example>
            The following example checks <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.ShouldGenerateUndoInfo"/> before it
            pushes saved state onto the undo stack:
            <code lang="C#">
            if (OnDefaultSizeChanging(new GridDefaultSizeChangingEventArgs(value)))
            {
                bool success = false;
                int savedValue = DefaultSize;
                try
                {
                    defaultSize = value;
                    success = true;
                    if (model.CommandStack.ShouldGenerateUndoInfo)
                        model.CommandStack.Push(new GridModelSetDefaultSizeCommand(this, savedValue));
                }
                finally
                {
                    OnDefaultSizeChanged(new GridDefaultSizeChangedEventArgs(savedValue, success));
                }
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.IsRecording">
            <summary>
            Gets a value indicating whether grid is in the default mode that records undo information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.UndoStack">
            <summary>
            Gets the stack with undo commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.RedoStack">
            <summary>
            Gets the stack with redo commands.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges">
            <summary>
            This class manages covered cell ranges for a grid.
            </summary>
            <remarks>
            You access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRanges"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            <para/>
            Covered ranges are saved in two separate collections.
            <para/>
            The first collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>
            that allows quick enumeration through all covered cell ranges in the grid. This is good when covered ranges
            need to be recalculated because rows or column have been inserted, moved, or removed.
            <para/>
            The second collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool"/> that is optimized to look up if a specific cell
            is part of a covered range.
            <para/>
            The <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> event in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> lets you also provide customized
            covered cell ranges at run-time. For example, you might want to have a pattern of covered ranges. 
            This allows you to customize the grid's default behavior and manage covered
            ranges by your own code and not with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/> from a serialization stream.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/> object and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needs to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Adds a covered range cell.
            </summary>
            <param name="range">A range to add.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.AddRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo[])">
            <summary>
            Adds multiple covered cell ranges.
            </summary>
            <param name="ranges">The list of ranges to add</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Removes covered cells that are contained in the specified range.
            </summary>
            <param name="range">The range that you want to clear from covered cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.SetCoveredRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Adds or removes a covered range.
            </summary>
            <param name="range">The affected range that indicates a new covered cell or the range of cells where covered cells should be removed.</param>
            <param name="setOrReset">True if you want to add a covered; False if range should be cleared.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Clear">
            <summary>
            Resets all covered ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.SetCoveredRanges(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Adds or removes one or multiple covered ranges.
            </summary>
            <param name="ranges">The list that holds range with new covered cells or ranges where covered cells should be removed.</param>
            <param name="setOrReset">True if you want to add covered cells; False if ranges should be cleared.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.GetEnumerator">
            <summary>
            Returns an enumerator for stepping through all covered ranges.
            </summary>
            <returns>The enumerator for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Ranges"/> collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all range objects into an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> starting at specified index.
            </summary>
            <param name="array">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.ResetCache">
            <exclude/>
            <summary>Resets the cache.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Find(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the covered range for the specified cell position
            or False if there is no covered range for the given cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the found covered range is returned.</param>
            <returns>True if a covered range is at the specified cell position; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.FindRange(System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the covered range for the specified cell position
            or <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if there is no covered range for the given cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>A reference to the covered range is at the specified cell position or
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Merge(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Combines all covered ranges that intersect into one outer range that spans over all found ranges.
            </summary>
            <param name="range">The original range.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the outer range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.UpdateList">
            <summary>
            Synchronizes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool"/>. The pool will be emptied and initialized with ranges specified in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Ranges"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.InsertRows(System.Int32,System.Int32)">
            <summary>
            Synchronizes the covered ranges after rows have been inserted in the grid.
            </summary>
            <param name="insertAt">The starting row index where new rows should be inserted.</param>
            <param name="count">The number of rows to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.InsertCols(System.Int32,System.Int32)">
            <summary>
            Synchronizes the covered ranges after columns have been inserted in the grid.
            </summary>
            <param name="insertAt">The starting columns index where new columns should be inserted.</param>
            <param name="count">The number of rows to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Synchronizes the covered ranges after rows have been removed from the grid.
            </summary>
            <param name="fromRowIndex">The first row index.</param>
            <param name="toRowIndex">The last row index.</param>
            <returns>True if any covered ranges were affected; False if no range needed to be changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.RemoveCols(System.Int32,System.Int32)">
            <summary>
            Synchronizes the covered ranges after columns have been removed from the grid.
            </summary>
            <param name="fromColIndex">The first column index.</param>
            <param name="toColIndex">The last column index.</param>
            <returns>True if any covered ranges were affected; False if no range needed to be changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.MoveRows(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Synchronizes the covered ranges after rows have been moved within the grid.
            </summary>
            <param name="from">The first row index.</param>
            <param name="last">The last row index.</param>
            <param name="target">The target row.</param>
            <param name="rowCount">The current row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.MoveCols(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Synchronizes the covered ranges after columns have been moved within the grid.
            </summary>
            <param name="from">The first column index.</param>
            <param name="last">The last column index.</param>
            <param name="target">The target row.</param>
            <param name="colCount">The current column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.OnChanged(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">A GridRowColSizeChangedEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.OnChanging(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs)">
            <summary>
            Raises the Changing event.
            </summary>
            <param name="e">A GridRowColSizeChangingEventArgs that contains the event data.</param>
            <returns>returns boolean value on changing event</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Ranges">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> and lets you enumerate through all covered ranges
            managed by this <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/> instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Count">
            <summary>
            Gets the number of ranges in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.SyncRoot">
            <summary>
             Gets NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.IsSynchronized">
            <summary>
             Gets a value indicating whether is synchronized. Returns False.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelCutPaste">
            <summary>
            This class manages cut, copy, and paste for a grid.
            </summary>
            <remarks>
            You access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCutPaste"/> and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/></param>.
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanCopy">
            <summary>
            Checks if there are selected ranges that can be copied to clipboard or if the current cell's contents can be copied.
            </summary>
            <returns>True if there is information available to be copied to clipboard.</returns>
            <remarks>
            Call this method for example to enable or gray out menu commands like "Copy Cells".
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Copy">
            <summary>
            Copies the contents of cells in selected to clipboard and the current cell's contents.
            </summary>
            <returns>True if information was available and copied to clipboard.</returns>
            <remarks>
            If there are no selected ranges, the current cell's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Copy"/> method is called.
            Otherwise, selected ranges will be copied. <para/>
            See the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.ClipboardFlags"/> property how to customize the default behavior.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CopyRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Copies the contents of a specified range of cells to clipboard.
            </overload>
            <summary>
            Copies the contents of a specified range of cells to clipboard.
            </summary>
            <param name="range">The range with cells to be copied.</param>
            <returns>True if information was available and copied to clipboard.</returns>
            <remarks>
            See the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.ClipboardFlags"/> property how to customize the default behavior.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CopyRange(Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <summary>
            Copies the contents of a specified range of cells to clipboard.
            </summary>
            <param name="rangeList">The range list with cells to be copied.</param>
            <returns>True if information was available and copied to clipboard.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CopyTextToClipboard(Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <summary>
            Copies the formatted text of a specified range of cells to clipboard.
            </summary>
            <param name="rangeList">The range list with cells to be copied.</param>
            <returns>True if information was available and copied to clipboard.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CopyCellsToClipboard(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Copies the style information of a specified range of cells to clipboard.
            </summary>
            <param name="rangeList">The range list with cells to be copied.</param>
            <param name="bLoadBaseStyles">True if information from base styles should also be copied; False if only
            the settings that were initialized for the cells should be copied.</param>
            <returns>True if information was available and copied to clipboard.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanCut">
            <summary>
            Checks if there are selected ranges that can be cut and copied to clipboard or if the current cell's contents can be cut and copied.
            </summary>
            <returns>True if there is information available to be cut and copied to clipboard.</returns>
            <remarks>
            Call this method for example to enable or gray out menu commands like "Cut Cells".
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Cut">
            <summary>
            Cuts and copies the contents of cells in selected to clipboard and the current cell's contents.
            </summary>
            <returns>True if information was available and copied to clipboard.</returns>
            <remarks>
            If there are no selected ranges, the current cell's <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.Cut"/> method is called.
            Otherwise, selected ranges will be copied. <para/>
            See the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.ClipboardFlags"/> property how to customize the default behavior.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CutRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <overload>
            Cuts and copies the contents of a specified range of cells to clipboard.
            </overload>
            <summary>
            Cuts and copies the contents of a specified range of cells to clipboard.
            </summary>
            <param name="range">The range with cells to be cut and copied.</param>
            <param name="clearStyle">True if you want to clear all cell information; False if you only want to clear text.</param>
            <returns>True if information was available and copied to clipboard.</returns>
            <remarks>
            See the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.ClipboardFlags"/> property how to customize the default behavior.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CutRange(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Cuts and copies the contents of a specified range of cells to clipboard.
            </summary>
            <param name="rangeList">The range list with cells to be copied.</param>
            <param name="clearStyle">True if you want to clear all cell information; False if you only want to clear text.</param>
            <returns>True if information was available and copied to clipboard.</returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanPaste">
            <summary>
            Checks if there is information on the clipboard that can be pasted into the grid.
            </summary>
            <returns>True if there is information available to be pasted into the grid.</returns>
            <remarks>
            Call this method for example to enable or gray out menu commands like "Paste Cells".
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Paste">
            <summary>
            Paste information from the clipboard into the grid at the current selected range or current cell.
            </summary>
            <returns>True if information was available and pasted from the clipboard.</returns>
            <remarks>
            If there are no selected ranges, the contents are pasted starting at the current cell's position.
            Otherwise, contents will be pasted into the current selected range. <para/>
            See the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.ClipboardFlags"/> property how to customize the default behavior.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.OnPasteDirect(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Not yet implemented.
            </summary>
            <param name="range">The Grid Range</param>
            <returns>returns boolean value.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.ClipboardFlags">
            <summary>
            Gets or sets various <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> options that specify how clipboard cut, copy, and paste
            should be handled.
            </summary>
            <remarks>
            You can specify here if you only want top copy / paste text and if row or column header text should be included.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler">
            <summary>
            Represents a method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>, or <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs">
            <summary>
            Provides event data for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>, or <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> event.
            </summary>
            <remarks>
            If you want to customize the grid's behavior, you should set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> 
            to True. The grid will check this flag to see whether it should accept your modification 
            or use a conversion.
            <para/>
            If you need identity information about the cell such as row and column index, you can get that
            information by querying <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Style"/>
            object.
            <para/>
            The <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/> events
            expect that you save the resulting value in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Style"/>
            object.
            <para/>
            The <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/> events
            expect that you save the resulting string in <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Text"/>.
            <para/>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.TextInfo"/> is only used for  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> and
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.#ctor(System.String,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="text">The string that represents the underlying cell value.</param>
            <param name="style">The style object.</param>
            <param name="value">The cell value.</param>
            <param name="textInfo"> textInfo is a hint where the call originated, e.g. GridCellBaseTextInfo.DisplayText.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Text">
            <summary>
            Gets or sets the string that represents the underlying cell value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Style">
            <summary>
            Gets the style object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.Value">
            <summary>
            Gets the cell value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellTextEventArgs.TextInfo">
            <summary>
            Gets textInfo is a hint where the call originated, e.g. GridCellBaseTextInfo.DisplayText.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/> event.
            </summary>
            <remarks>
            The GridQueryCanMergeCellsEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/> event
            when the model tries to find out whether two neighboring cells can be merged.
            <para/>
            You can customize the default comparison behavior of the grid and set <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs.Result"/>
            to True when cells should be merged. You should also set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The
            grid will the use the result provided through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs.Result"/> property.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="style1">The first style object. Use the style object's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> to find
            out about row and column index of the cell.</param>
            <param name="style2">The second style object. Use the style object's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> to find
            out about row and column index of the cell.</param>
            <param name="result">The result that should be returned to the grid. You should also set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to
            True if you want the grid to return this result instead of doing its own comparison.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs.Style1">
            <summary>
            Gets the first style object. Use the style object's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> to find
            out about row and column index of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs.Style2">
            <summary>
            Gets the second style object. Use the style object's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity"/> to find
            out about row and column index of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether the result that should be returned to the grid. You should also set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to
            True if you want the grid to return this result instead of doing its own comparison.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event.
            </summary>
            <remarks>
            The GridSelectionChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event
            when the model is in the process of selecting a range of cells as a result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/>
            method call.
            <para/>
            You can disallow the selection of specific cells at run-time when
            you assign true to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/>
            You can also modify the <see cref="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs.Range"/> to include additional cells.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event before
            it updates its internal data structures and a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event
            afterwards. A <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> grid listens to this event and outlines
            the selected range of cells.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridSelectionReason,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Initalizes a new object.
            </overload>
            <summary>
            Initalizes a new object.
            </summary>
            <param name="range">The range of cells to be selected.</param>
            <param name="reason">The current state of the user action and reason for this event (mouse, keyboard or programmatic).</param>
            <param name="clickRange">The range of cells to be selected when the previous range is reset. <para/>
            Will be set only if reason is GridSelectionReason.SetCurrentCell, GridSelectionReason.MouseDown, GridSelectionReason.MouseMove.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridSelectionReason)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="range">The range of cells to be selected.</param>
            <param name="reason">The current state of the user action and reason for this event (mouse, keyboard, or programmatic).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs.Range">
            <summary>
            Gets or sets the range of cells to be selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs.ClickRange">
            <summary>
            Gets the range of cells to be selected when the previous range is reset. <para/>
            Will be set only if reason is GridSelectionReason.SetCurrentCell, GridSelectionReason.MouseDown, GridSelectionReason.MouseMove.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs.Reason">
            <summary>
            Gets the current state of the user action and reason for this event (mouse, keyboard, or programmatic).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event.
            </summary>
            <remarks>
            The GridSelectionChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event 
            when the model in the process of selecting a range of cells as a result of a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/>
            method call.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> event before
            it updates its internal data structures and a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> event
            afterwards. A <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> grid listens to this event and outlines
            the selected range of cells.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfoList,Syncfusion.Windows.Forms.Grid.GridSelectionReason)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="range">The range of cells to be selected.</param>
            <param name="oldRanges">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> that holds all selected ranges before this user action.</param>
            <param name="reason">The origin source for this event (mouse, keyboard, or programmatic).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs.Range">
            <summary>
            Gets the range of cells to be selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs.Reason">
            <summary>
            Gets the origin source for this event (mouse, keyboard, or programmatic).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs.OldRanges">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> that holds all selected ranges before this user action.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event.
            </summary>
            <remarks>
            The GridQueryCellModelEventArgs is a custom event argument class used by the 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event for querying the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            based on a string cellType.
            <para/>
            The GridModel has a table with all cell types used in the grid. Whenever the grid encounters
            a new cell type that it cannot find in the table, it will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event.
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> identifies the name of the cell type. The 
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs.CellModel"/> should receive the new instance of the
            associated cell object. This object will be stored in the table together with its name and
            reused among cells with the same <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>.
            <para/>
            You should process this event if you want to add custom cell types and initialize these
            cell types on demand when associated cells are accessed the first time.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> 
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelEventArgs">
            <summary>
            Custom event argument base class used for events associated with a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelEventArgs.GridModel"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelEventArgs"/> object.
            </summary>
            <param name="model">Reference to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelEventArgs.GridModel"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelEventArgs.GridModel">
            <summary>
            Gets <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelEventArgs.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridModel,System.String)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="gridModel">The grid model.</param>
            <param name="cellType">The cell type identifier as used in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> property.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs.CellType">
            <summary>
            Gets the cell type identifier as used in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs.CellModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for the cell type. You should create a new instance
            of the specific cell model and save it to this property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> event which can be
            marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> event which can be marked as handled.
            </summary>
            <remarks>
            GridQueryCoveredRangeEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> event to query information about 
            covered cells at a specified cell. 
            <para/>
            This event allows you to specify covered ranges at run-time, e.g when you have
            a large grid with repeating patterns of covered ranges. If the specified row and
            column index is part of a covered cell's range, you should assign the coordinates
            of the covered cell to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs.Range"/> and
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True.
            <para/>
            <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> indicates that you supplied data
            from your event handler and no further querying for data about covered range information 
            for this cell is necessary.
            <para/>
            See the VirtualGrid sample for an example of how to use this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/>  
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellHandledEventArgs">
            <summary>
            Holds row and column coordinates for events that can be marked as handled and are associated with a specific cell.
            </summary>
            <remarks>
            No events use this class directly but it is used 
            as a base class for several other events related to a specific cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellHandledEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHandledEventArgs"/> object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHandledEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellHandledEventArgs.ColIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs.#ctor(System.Int32,System.Int32)">
            <overload>
            Initalizes a new object.
            </overload>
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that will receive the resulting range for the covered cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs.Range">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that will receive the resulting range for the covered cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/> event which can be
            marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/> event which can be marked as handled.
            </summary>
            <remarks>
            GridQueryBanneredRangeEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/> event to query information about 
            a bannered range at a specified cell. 
            <para/>
            This event allows you to specify bannered ranges at run-time, e.g when you have
            a large grid with repeating patterns of bannered ranges. If the specified row and
            column index is part of a bannered cell's range, you should assign the coordinates
            of the bannered cell to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs.Range"/> and
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True.
            <para/>
            <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> indicates that you supplied data
            from your event handler and no further querying for data about bannered range information 
            for this cell is necessary.
            <para/>
            See the BannerCells sample for an example how to use this event.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/>  
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs.#ctor(System.Int32,System.Int32)">
            <overload>
            Initalizes a new object.
            </overload>
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that will receive the resulting range for the bannered cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs.Range">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that will receive the resulting range for the bannered cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event which can be
            marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event which can be marked as handled.
            </summary>
            <remarks>
            GridQueryCellInfoEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event to query style information concerning
            a specified cell.
            <para/>
            This event allows you to customize cell contents at run-time on demand, just before
            the cell is drawn or programmatically accessed through <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/>,
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/>, <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles"/>,
            or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle"/>.
            <para/>
            If you made changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs.Style"/>, you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether the style has been initialized. If the event has been marked as
            handled, the grid will not access cell information from its own data store
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/>. In the default case when the event is not marked as handled,
            the grid will locate cell information by calling <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.Item(System.Int32,System.Int32)"/>.
            <para/>
            In your handler for this event, normally you would set the
            CellValue for the GridStyleInfo object passed in with the event arguments. But you can also set
            other members of this GridStyleInfo object. For example,
            you could set BackColor to change the cell background. And, all this is done on a demand basis.
            There would be no BackColor value stored in any grid storage.
            <para/>
            The GridQueryCellInfoEventArgs members, e.ColIndex and e.RowIndex, specify column and row of the
            requested style. The e.Style member holds the
            GridStyleInfo object whose value this event should set provided it is a cell that you want to populate.
            It is possible that e.ColIndex and / or
            e.RowIndex may have the value of -1. A -1 indicates that a row style or column style is being requested.
             So, e.ColIndex = -1 and and e.RowIndex = 4
            indicates the rowstyle for row 4 is being requested (GridControl.RowStyles[4]). Similarly, a positive
            column value with the row value = -1 would be a request for that
            particular columnstyle. If both values are -1, then the TableStyle property is being requested.
            <para/>
            Header rows and columns in an Essential Grid are treated the same as other rows and columns with
            respect to QueryCellInfo. If you have a single header row, then anytime e.ColIndex is 0, a row header
            is being requested. Similarly, if you have a
            single column header row, e.RowIndex = 0 is a request for the column header.
            <para/>
            Style information provided with QueryCellInfo is cached. This ensures this event is not hit
            everytime cell information is needed (e.g. when the user moves the mouse)
            and possibly forces a lookup in an external datasource which could be extensive depending on your
            implementation. If underlying data changes and you want to force a new call to QueryCellInfo,
            you should call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetVolatileData"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> of a grid.
            <para/>
            You should not provide information in QueryCellInfo that depends on current view context, like
            changing the appearance of the cells that are on the current edited row. Use the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> event to change
            the style of such cells about to be drawn. This event is fired from the cell renderer,
            and only reflects transient information which is not cached in the grid.<para/>
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> is fired from <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>,
            and should be used mainly to provide non-transient information for a
            style such as the value from an external data source in a virtual grid.
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/> is fired for every grid view and unique
            style settings for each view of the same model.
            <para/>
            See also the Virtual grid source code for example.
            </remarks>
            <example>
            <code lang="C#">
            private void GridQueryCellInfo(object sender, GridQueryCellInfoEventArgs e)
            {
                    if(e.ColIndex &gt; 0 &amp;&amp; e.RowIndex &gt; 0)
                    {
                        e.Style.CellValue = this.intArray[e.RowIndex - 1, e.ColIndex - 1];
                        e.Handled = true;
                    }
            }
            </code>
            <code lang="VB">
            Private Sub GridQueryCellInfo(ByVal sender As Object, ByVal e As GridQueryCellInfoEventArgs)
                    If ((e.ColIndex &gt; 0) AndAlso (e.RowIndex &gt; 0)) Then
                        e.Style.CellValue = Me.intArray(e.RowIndex - 1, e.ColIndex - 1)
                        e.Handled = True
                    End If
            End Sub
            </code>
            </example>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The style information for the cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs.Style">
            <summary>
            Gets the style information for the cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event which can be
            marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An<see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event which can be marked as handled.
            </summary>
            <remarks>
            GridSaveCellInfoEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event to save style information about
            at a specified cell.
            <para/>
            This event allows you to customize cell contents at run-time on demand, just before
            the cell is drawn or programmatically accessed through <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/>,
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/>, <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles"/>,
            or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle"/>.
            <para/>
            If you made changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs.Style"/> you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether the style has been changed from its original settings.
            <para/>
            The GridSaveCellInfoEventArgs members, e.ColIndex and e.RowIndex, specify column and row of the cell. The e.Style member holds the
            GridStyleInfo object whose properties this event should change provided it is a cell that you want to save changes for. It is possible that e.ColIndex and / or
            e.RowIndex may have the value of -1. A -1 indicates that a row style or column style is being saved. So, e.ColIndex = -1 and and e.RowIndex = 4
            indicates the rowstyle for row 4 is being saved (GridControl.RowStyles[4]). Similarly, a positive column value with the row value = -1 would be a request for that
            particular columnstyle. If both values are -1, the TableStyle property is being saved.
            <para/>
            Header rows and columns in an Essential Grid are treated the same as other rows and columns with
            respect to QueryCellInfo. If you have a single header row, anytime e.ColIndex is 0, a row header is being requested. Similarly, if you have a
            single column header row, e.RowIndex = 0 is a request for the column header.
            <para/>
            See DataBoundGrid source code for example.
            <note type="note">The intention of this event is to store and retrieve data. See
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> for the related UI event after changes were made to the
            data store.</note>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The style information for the cell.</param>
            <param name="modifyType">The style operation to be applied to the cells existing style.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs.Style">
            <summary>
            Gets the style information for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs.ModifyType">
            <summary>
            Gets the style operation to be applied to the cell's existing style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> events that can be marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> events which can be marked as handled.
            </summary>
            <remarks>
            GridRowColCountEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> events
            to query or save the row and column count of the grid.
            <para/>
            This event allows you to customize the grid dimensions at run-time on demand before
            the grid is drawn or programmatically accessed through <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowCount"/>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColCount"/>.
            <para/>
            If you made changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs.Count"/>, you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/> will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs.Count"/> as the 
            actual number of rows or columns when the event is marked as handled.
            Otherwise, the grid will check its own data store 
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/>. In the default case when the event is not marked as handled,
            the grid will locate row and column count by calling <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.ColCount"/> and
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.RowCount"/>.
            <para/>
            In <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> the grid
            will not store row and column count if you marked the event as handled. Otherwise, in
            the default case that the event is not marked as handled the row and column count is stored
            by setting the <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.ColCount"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridData.RowCount"/> properties.
            <para/>
            See VirtualGrid sample code for example.
            <note type="note">The intention of this event is to store and retrieve data. See
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> and <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/>
            for the related UI event after changes were made to the
            data store.</note>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>  
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs.#ctor">
            <overload>
            Initalizes a new object.
            </overload>
            <summary>
            Initalizes a new object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs.#ctor(System.Int32)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="count">The number of rows or columns to be returned by this event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs.Count">
            <summary>
            Gets or sets the number of rows or columns to be returned by this event.
            </summary>
            <remarks>
            Changing this value will only affect <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>. 
            <para/>
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> will
            ignore changes to this value.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeightTotal"/> event that can be marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeightTotal"/> event which can be marked as handled and
            occurs when the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.GetTotal(System.Int32,System.Int32)"/> method of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/>
            class object is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new object.
            </summary>
            <param name="from">The first row or column.</param>
            <param name="last">The last row or column.</param>
            <param name="maximum">Maximum value for total.</param>
            <param name="size">The total size.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs.From">
            <summary>
            Gets the first row or column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs.Last">
            <summary>
            Gets the last row or column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs.Maximum">
            <summary>
            Gets the Maximum value for total.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs.Size">
            <summary>
            Gets or sets the result - Returns the total size.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/> events which can be marked as handled.
            </summary>
            <remarks>
            GridRowColSizeEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/> events
            to query or save the row and column widths of the grid.
            <para/>
            This event allows you to customize the row and column sizes at run-time on demand before
            the grid is drawn or programmatically accessed through <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)"/>.
            <para/>
            If you made changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs.Size"/> you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/> will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs.Size"/> as the 
            actual size of the row or column being queried when the event is marked as handled.
            Otherwise, the grid will check its own data store 
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Dictionary"/>. In the default case when the event is not marked as handled,
            the grid will locate row and column widths by getting the value from <see cref="P:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.Item(System.Int32)"/>.
            <para/>
            In <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/>, the grid
            will not store row and column if you mark the event as handled. Otherwise, in
            the default case that the event is not marked as handled, the row and column width is stored
            by changing the <see cref="P:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.Item(System.Int32)"/> property.
            <para/>
            <note type="note">The intention of this event is to store and retrieve data. See
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs"/> for the related UI event after changes are made to the
            data store.</note>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary"/>  
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHeight(System.Int32)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColWidth(System.Int32)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="index">The row or column index.</param>
            <param name="size">The row height or column width. If size is less than 0, the grid will use the default
            size for row or column widths. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs.Index">
            <summary>
            Gets the row or column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs.Size">
            <summary>
            Gets or sets the row height or column width. If size is less than 0, the grid will use the default
            size for row or column widths. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/> events which can be marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/> events which can be marked as handled.
            </summary>
            <remarks>
            GridRowColHideEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/> events
            to query or save if the row or column is hidden in the grid.
            <para/>
            This event allows you to customize the hidden state of row and column at run-time on demand before
            the grid is drawn or programmatically accessed through <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)"/>.
            <para/>
            If you make changes to <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs.Hide"/>, you should also
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/> and
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/> will return <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs.Hide"/> as the
            actual hide state of the row or column being queried when the event is marked as handled.
            Otherwise, the grid will check its own data store
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Dictionary"/>. In the default case when the event is not marked as handled,
            the grid will locate row and column widths by getting the value from <see cref="P:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.Item(System.Int32)"/>.
            <para/>
            In <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/>, the grid
            will not store row and column hidden state if you mark the event as handled. Otherwise, in
            the default case that the event is not marked as handled the row and column hidden state is stored
            by changing the <see cref="P:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.Item(System.Int32)"/> property.
            <para/>
            <note type="note">The intention of this event is to store and retrieve data. See
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs"/> for the related UI event after changes were made to the
            data store.</note>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideColsIndexer"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetRowHidden(System.Int32)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetColHidden(System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="index">The row or column index.</param>
            <param name="hide">The hidden flag for the row or column.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs.Index">
            <summary>
            Gets the row or column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs.Hide">
            <summary>
            Gets or sets a value indicating whether the hidden flag for the row or column.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventHandler">
            <summary>
            Represents the method that handles a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/> event.
            </summary>
            <remarks>
            GridPrepareChangeSelectionEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/> event.
            <para/>
             This event is raised by the model 
            to notify all associated views that there has been a change to the current selection
            in the grid and all associated views should redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="oldRange">The previous boundaries of the selected range.</param>
            <param name="newRange">The new boundaries of the selected range.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs.OldRange">
            <summary>
            Gets the previous boundaries of the selected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs.NewRange">
            <summary>
            Gets the new boundaries of the selected range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> event.
            </summary>
            <remarks>
            GridCellsChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> event.
            <para/>
            This event is raised by the model
            to notify all associated views that there has been a change to the specified range of cells
            in the grid and all associated views should redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/>
            method call.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were made to the model. If it is false, the operation is aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],System.Boolean)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/>.
            </summary>
            <param name="range">The range specifying the affected cells.</param>
            <param name="savedCellsInfo">Information about cell contents before the changes were applied to the grid.</param>
            <param name="success">Indicates whether an operation was successful.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs.Range">
            <summary>
            Gets the range specifying the affected cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs.SavedCellsInfo">
            <summary>
            Gets the Information about cell contents before the changes were applied to the grid.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> event.
            </summary>
            <remarks>
            GridCellsChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> event. 
            <para/>
            This event is raised by the model
            to notify all associated views that it is contents for the specified range of cells
            in the grid and all associated views are polled if they are ok with that change and prepare
            for redrawing the affected area of cells. The change can
            be originated by a mouse or keyboard input or programmatically by a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/>
            method call.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs"/>.
            </summary>
            <param name="range">The range specifying the affected cells.</param>
            <param name="cellsInfo">The new contents to be stored in the cells. Can be NULL.</param>
            <param name="mt">The <see cref="T:Syncfusion.Styles.StyleModifyType"/> of the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> method call.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs.Range">
            <summary>
            Gets the range specifying the affected cells. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs.CellsInfo">
            <summary>
            Gets the new contents to be stored in the cells. Can be NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs.ModiyType">
            <summary>
            Gets the <see cref="T:Syncfusion.Styles.StyleModifyType"/> of the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> method call.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/>  event.
            </summary>
            <remarks>
            GridRowColHiddenEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/> event.
            <para/>
            This event is raised by the model to notify all associated views that there has been
            a change to the specified range of rows and columns in the grid and all associated views
            should redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is false, this means the operation aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventHandler"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs.#ctor(System.Int32,System.Int32,System.Boolean[],System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="from">The first row or column index of the affected range.</param>
            <param name="last">The last row or column index of the affected range.</param>
            <param name="savedValues">The previous state of the affected columns or rows.</param>
            <param name="success">Indicates if operation was successful or aborted.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs.From">
            <summary>
            Gets the first row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs.To">
            <summary>
            Gets the last row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs.SavedValues">
            <summary>
            Gets the previous state of the affected columns or rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs">
            <summary>
            Used by <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/> events.
            </summary>
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/> event.
            </summary>
            <remarks>
            GridRowColHidingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/> event.
            <para/>
            This event is raised by the model to notify all associated views that there will be
            a change to the specified range of rows and columns in the grid and all associated views 
            should prepare to redraw the affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)"/>.
            <para/>
            The event handler can abort this operation by assigning true to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs.#ctor(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="from">The first row or column index of the affected range.</param>
            <param name="last">The last row or column index of the affected range.</param>
            <param name="values">The new state for the affected columns or rows.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs.From">
            <summary>
            Gets the first row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs.To">
            <summary>
            Gets the last row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs.Values">
            <summary>
            Gets the new state for the affected columns or rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventHandler">
            <summary>
            Represents the method that handles  <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/> event.
            </summary>
            <remarks>
            GridRowColSizeChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/> events.
            <para/>
            This event is raised by the model to notify all associated views that there has been
            a change to the specified range of rows and columns in the grid and all associated views
            should redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is false, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="from">The first row or column index of the affected range.</param>
            <param name="last">The last row or column index of the affected range.</param>
            <param name="savedValues">The previous size of the affected columns or rows.</param>
            <param name="success">Indicates if operation was successful or aborted.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs.From">
            <summary>
            Gets the first row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs.To">
            <summary>
            Gets the last row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs.SavedValues">
            <summary>
            Gets the previous size of the affected columns or rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/> events.
            </summary>
            <remarks>
            GridRowColSizeChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it is about to 
            change the size for the specified range of rows and columns in the grid and all associated views
            should prepare to redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs.#ctor(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="from">The first row or column index of the affected range.</param>
            <param name="last">The last row or column index of the affected range.</param>
            <param name="values">The new size of the affected columns or rows.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs.From">
            <summary>
            Gets the first row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs.To">
            <summary>
            Gets the last row or column index of the affected range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs.Values">
            <summary>
            Gets the new size of the affected columns or rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> events.
            </summary>
            <remarks>
            GridCountChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> events.
            <para/>
            This event is raised by the model to notify all associated views that there has been
            a change to the specified range of rows and columns in the grid and all associated views
            should redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.HeaderCount"/>
            or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is false, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.HeaderCount"/> 
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/> 
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="savedCount">The previous number of frozen or header rows or columns (depending on event).</param>
            <param name="success">Indicates if operation was successful or aborted.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs.SavedValue">
            <summary>
            Gets the previous number of frozen or header rows or columns (depending on event).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/> events.
            </summary>
            <remarks>
            GridCountChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it is about to 
            change the specified range of rows and columns in the grid and all associated views
            should prepare to redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.HeaderCount"/>
            or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.HeaderCount"/> 
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/> 
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="count"> The new number of frozen or header rows or columns (depending on event).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs.Value">
            <summary>
            Gets the new number of frozen or header rows or columns (depending on event).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/> events.
            </summary>
            <remarks>
            GridDefaultSizeChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has changed the
            default row height or column width of the grid and all associated views
            should redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is false, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs.#ctor(System.Int32,System.Boolean)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/>.
            </summary>
            <param name="savedValue">The previous default row height or column width</param>
            <param name="success">Indicates if the operation was succesful or aborted.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs.SavedValue">
            <summary>
            Gets the previous default row height or column width.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.TopRowChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.LeftColChanging"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging"/> events.
            </summary>
            <remarks>
            GridDefaultSizeChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it is about to change the
            default row height or column width of the grid and all associated views
            should prepare to redraw affected display contents. The change can
            be originated by a mouse or keyboard input or programmatically by changing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize"/> 
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/>.
            </summary>
            <param name="value">The new default row height or column width.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs.Value">
            <summary>
            Gets the new default row height or column width.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/> events.
            </summary>
            <remarks>
            GridRangeInsertedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has inserted the
            specified number of rows or column into its data store and all associated views
            should redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is False, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/>.
            </summary>
            <param name="insertAt">The row or column index where the cells should be inserted before.</param>
            <param name="count">The number of rows or columns.</param>
            <param name="iro">Information about the cells to be inserted such as cell contents, row, and column sizes and more.</param>
            <param name="success">Indicates whether an operation was successful.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs.InsertAt">
            <summary>
            Gets the row or column index where the cells should be inserted before.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs.Count">
            <summary>
            Gets the number of rows or columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs.InsertRangeOptions">
            <summary>
            Gets the Information about the cells to be inserted such as cell contents, row, and column sizes and more.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions"/> that holds information
            about the cells to be inserted such as cell contents, row, and column sizes and more.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/> events.
            </summary>
            <remarks>
            GridRangeInsertingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it is about to
            insert the specified number of rows or column into its data store and all associated views
            should prepare to redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/>.
            </summary>
            <param name="insertAt">The row or column index where the cells should be inserted before.</param>
            <param name="count">The number of rows or columns.</param>
            <param name="iro">Information about the cells to be inserted such as cell contents, row, and column sizes and more.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs.InsertAt">
            <summary>
            Gets the row or column index where the cells should be inserted before.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs.Count">
            <summary>
            Gets the number of rows or columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs.InsertRangeOptions">
            <summary>
            Gets the Information about the cells to be inserted such as cell contents, row, and column sizes and more.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions"/> that holds information
            about the cells to be inserted such as cell contents, row, and column sizes and more.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/> events.
            </summary>
            <remarks>
            GridRangeMovedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has 
            rearranged the specified rows or columns in its data store and all associated views
            should redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is False, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/>.
            </summary>
            <param name="from">The index of the first row or column that was moved.</param>
            <param name="count">The number of rows or columns that was moved.</param>
            <param name="target">The row or column index where the cells were inserted before.</param>
            <param name="success">Indicates whether an operation was successful.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs.From">
            <summary>
            Gets the index of the first row or column that was moved.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs.Count">
            <summary>
            Gets the index of the last row or column that was moved.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs.Target">
            <summary>
            Gets the row or column index where the cells were inserted before.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/> events.
            </summary>
            <remarks>
            GridRangeMovingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it is about to
            rearrange the specified rows or columns in its data store and all associated views
            should prepare to redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/>.
            </summary>
            <param name="from">The index of the first row or column to be moved.</param>
            <param name="count">The number of rows or columns to be moved.</param>
            <param name="target">The row or column index where the cells should be inserted before.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs.From">
            <summary>
            Gets the index of the first row or column to be moved.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs.Count">
            <summary>
            Gets the index of the last row or column to be moved.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs.Target">
            <summary>
            Gets the row or column index where the cells should be inserted before.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/> events.
            </summary>
            <remarks>
            GridRangeRemovedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has 
            rearranged the specified rows or columns in its data store and all associated views
            should redraw affected display contents. The change can
            be originated programmatically by a method call too <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is false, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions,System.Boolean)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/>.
            </summary>
            <param name="from">The index of the first row or column that was removed.</param>
            <param name="last">The index of the last row or column that was removed.</param>
            <param name="iro">Provides information about the cells that have been removed such as
            row heights, column widths, and hidden state of rows or columns. </param>
            <param name="success">Indicates whether an operation was successful.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs.From">
            <summary>
            Gets the index of the first row or column that was removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs.To">
            <summary>
            Gets the index of the last row or column that was removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs.InsertRangeOptions">
            <summary>
            Gets the information about the cells that have been removed such as
            row heights, column widths, and hidden state of rows or columns. 
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions"/> that holds information
            about the cells that have been deleted such as cell contents, row, and column sizes and more.
            </value>
            <remarks>
            If undo generation is enabled for the grid InsertRangeOptions will also
            contain information about the cells that have been deleted.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/> events.
            </summary>
            <remarks>
            GridRangeRemovingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it is about to
            remove the specified rows or columns from its data store and all associated views
            should prepare to redraw affected display contents. The change can
            be originated programmatically by a method call too <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/>.
            </summary>
            <param name="from">The index of the first row or column to be removed.</param>
            <param name="last">The index of the last row or column to be removed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs.From">
            <summary>
            Gets the index of the first row or column to be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs.To">
            <summary>
            Gets the index of the last row or column to be removed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/> event.
            </summary>
            <remarks>
            GridCoveredRangesChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/> event.
            <para/>
            This event is raised by the model to notify all associated views that it is about to
            make a range(s) of cells appear as covered cells or reset the covering for a list of ranges.
            <para/>
            This event is raised to make sure all associated views
            prepare to redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> or
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="ranges">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.</param>
            <param name="setOrReset">Specifies whether the specified ranges should be made covered ranges or
            if covering should be removed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs.Ranges">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs.SetOrReset">
            <summary>
            Gets a value indicating whether the specified ranges should be made covered ranges or
            if covering should be removed.
            </summary>
            <value>
            True if covered ranges; False is covering should be removed.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/> event.
            </summary>
            <remarks>
            GridCoveredRangesChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/> event.
            <para/>
            This event is raised by the model to notify all associated views that the grid model 
            changed a range(s) of cells to appear as covered cells or reset the covering for a list of ranges.
            <para/>
            This event is raised to make sure all associated views
            redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> or
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates whether all changes
            were successfully made to the model. If it is False, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="ranges">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.</param>
            <param name="setOrReset">Specifies whether the specified ranges should be made covered ranges or
            if covering should be removed.</param>
            <param name="success">Indicates whether an operation was successful.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs.Ranges">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs.SetOrReset">
            <summary>
            Gets a value indicating whether the specified ranges should be made covered ranges or
            if covering should be removed.
            </summary>
            <value>
            True if covered ranges; False is covering should be removed.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/> event.
            </summary>
            <remarks>
            GridBanneredRangesChangingEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/> event.
            <para/>
            This event is raised by the model to notify all associated views that it is about to
            make a range(s) of cells appear as bannered cells or reset the bannering for a list of ranges.
            <para/>
            This event is raised to make sure all associated views
            prepare to redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> or
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>.
            <para/>
            The event handler can abort this operation by assigning True to the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            property. No changes will then take place in the grid model.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="ranges">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.</param>
            <param name="setOrReset">Specifies whether the specified ranges should be made bannered ranges or
            if bannering should be removed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs.Ranges">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs.SetOrReset">
            <summary>
            Gets a value indicating whether the specified ranges should be made bannered ranges or
            if bannering should be removed.
            </summary>
            <value>
            True if bannered ranges; False if bannering should be removed.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/> event.
            </summary>
            <remarks>
            GridBanneredRangesChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/> event.
            <para/>
            This event is raised by the model to notify all associated views that the grid model 
            changes a range(s) of cells to appear as bannered cells or resets the bannering for a list of ranges.
            <para/>
            This event is raised to make sure all associated views
            redraw affected display contents. The change can
            be originated programmatically by a method call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> or
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is False, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelBanneredRanges.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="ranges">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.</param>
            <param name="setOrReset">Specifies whether the specified ranges should be made bannered ranges or
            if bannering should be removed.</param>
            <param name="success">Indicates whether an operation was successful.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs.Ranges">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with a list of affected ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs.SetOrReset">
            <summary>
            Gets a value indicating whether the specified ranges should be made bannered ranges or
            if bannering should be removed.
            </summary>
            <value>
            True if bannered ranges; False if bannering should be removed.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/> event.
            </summary>
            <remarks>
            GridFloatingCellsChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/> event.
            <para/>
            This event is raised by the model to notify all associated views that the grid model
            changed a range(s) of cells to appear as a floating cell or reset the floating for a range.
            <para/>
            This event is raised to make sure all associated views
            redraw affected display contents.
            <para/>
            The change
            is normally originated by a user typing text into the cell that is larger than
            the current cell size. The grid checks the preferred cell width of the cell and if it
            is larger than the current size and the neighboring cell supports floating, the cell will
            changed to a floating cell.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is False, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnQueryCanFloatCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryFloatCell)"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs.Range">
            <summary>
            Gets the affected cells range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged"/> event.
            </summary>
            <remarks>
            GridMergeCellsChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged"/> event.
            <para/>
            This event is raised by the model to notify all associated views that the grid model
            changed a range(s) of cells to appear as a merge cell or reset the merge for a range.
            <para/>
            This event is raised to make sure all associated views
            redraw affected display contents.
            <para/>
            The <see cref="P:Syncfusion.ComponentModel.SyncfusionSuccessEventArgs.Success"/> property indicates if all changes
            were successfully made to the model. If it is False, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventHandler"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.OnQueryCanMergeCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridMergeCellDirection)"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs.Range">
            <summary>
            Gets the affected cell's range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/> event.
            </summary>
            <remarks>
            GridFloatingCellsChangedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/> event.
            <para/>
            This event is raised by the model when <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> is programmatically 
            called and there are no pending <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate"/> calls. When there are several calls,
            you have to call as many times EndUpdate as you called BeginUpdate before this event is raised.
            <para/>
            This event is raised to make sure all associated views
            update their display contents by completing any pending paint operations.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs.#ctor">
            <overload>
            Initalizes a new object.
            </overload>
            <summary>
            Initalizes a new object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs.#ctor(System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="value">The value of the originating <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> call. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs.Value">
            <summary>
            Gets or sets a value indicating whether the value of the originating <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> call. 
            </summary>
            <value>
            True if display should be updated immediately; False if pending paint operations should be discarded.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs">
            <summary>
            Provides data about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/>: 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Paste"/>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanPaste"/>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Cut"/>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanCut"/>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.Copy"/> and 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelCutPaste.CanCopy"/>
            events.
            </summary>
            <remarks>
            GridCutPasteEventArgs is a custom event argument class used by the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> operations in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            This event lets you supply your own clipboard formats or add support for pasting additional clipboard content.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.#ctor(System.Boolean,System.Boolean,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> object.
            </summary>
            <param name="ignoreCurrentCell">Ignore the current cell position.</param>
            <param name="result">The value that the called method should return.</param>
            <param name="clipboardFlags">Customize behavior of default clipboard operations.</param>
            <param name="rangeList">You can save here a list of ranges that have been copied.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.IgnoreCurrentCell">
            <summary>
            Gets or sets a value indicating whether to ignore the current cell. This property will only be checked by the calling
            method if you do not set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether the return value the called method should return when you 
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.DataObject">
            <summary>
            Gets or sets the DataObject to be used for further clipboard operations. This property will only be checked by the calling
            method if you do not set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to true. Can be NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.ClipboardFlags">
            <summary>
            Gets or sets customize behavior of default clipboard operations. This property will only be checked by the calling
            method if you do not set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. Allows you to specify
            if text or styles should be copied or if row or column headers should be included.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs.RangeList">
            <summary>
            Gets or sets range list. You can save here a list of ranges that have been copied. This property will only be checked for the
            Copy operation. Can be NULL.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopyToBuffer"/>: 
            events.
            </summary>
            <remarks>
            ClipboardCopyToBufferEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopyToBuffer"/> operations in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            This event lets you modify the text which is being copied to the buffer
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs.#ctor(System.String,Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs"/> object.
            </summary>
            <param name="text">You can modify the text that have been copied.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs.CopyText">
            <summary>
            Gets or sets a string value which will replace the text being copied
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs.Ranges">
            <summary>
            Gets or sets a string value which will replace the text being copied
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClearingCells"/> events.
            </summary>
            <remarks>
            GridCutPasteEventArgs is a custom event argument class used by the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> operations in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            This event lets you supply your own clipboard formats or add support for pasting additional clipboard content.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean,System.Boolean)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="rangeList">Gets / sets a list of ranges to be cleared out.</param>
            <param name="clearStyle">True if all cell style information should be cleared; False if only text should be cleared.</param>
            <param name="result">Specifies the return value the called method should return when you 
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs.RangeList">
            <summary>
            Gets or sets a list of ranges to be cleared out.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs.ClearStyle">
            <summary>
            Gets or sets a value indicating whether cell style information should be cleared. True if all cell style information should be cleared; False if only text should be cleared.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether the return value the called method should return when you 
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryOleDataSourceData"/> event.
            </summary>
            <remarks>
            GridQueryOleDataSourceDataEventArgs is a custom event argument class used by the
            QueryOleDataSourceData even when a user starts dragging a range of selected cells
            using OLE drag-and-drop.
            <para/>
            This event lets you supply your own clipboard formats or add support for pasting additional clipboard content.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.#ctor(System.Windows.Forms.IDataObject,Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="dataObject">The data object where data for the OLE drag operation is stored.</param>
            <param name="rangeList">You can save here a list of ranges that have been copied. This property will only be checked for the
            Copy operation. Can be NULL.</param>
            <param name="dragDropFlags">Lets you specify default behavior, e.g. if styles or text should be supplied, if row or column headers
            should be ignored.</param>
            <param name="rowCount">The number of rows that have been copied into the dataobject. Set this value if you modified the <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.DataObject"/>.</param>
            <param name="colCount">The number of columns that have been copied into the dataobject. Set this value if you modified the <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.DataObject"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.IgnoreCurrentCell">
            <summary>
            Gets or sets a value indicating whether to ignore the current cell. This property will only be checked by the calling
            method if you do not set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether the return value the called method should return when you 
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.DataObject">
            <summary>
            Gets the data object where data for the OLE drag operation are stored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.RangeList">
            <summary>
            Gets or sets the range list. You can save here a list of ranges that have been copied. This property will only be checked for the
            Copy operation. Can be NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.DragDropFlags">
            <summary>
            Gets or sets the behaviour. Lets you specify default behavior, e.g. if styles or text should be supplied, if row or column headers
            should be ignored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.RowCount">
            <summary>
            Gets or sets the number of rows that have been copied into the dataobject. Set this value if you modified the <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.DataObject"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.ColCount">
            <summary>
            Gets or sets the number of columns that have been copied into the dataobject. Set this value if you modified the <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs.DataObject"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryOleDataSourceData"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventHandler">
            <summary>
            Represents the method that handles the<see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopyToBuffer"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopyToBuffer"/>, 
            events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.ClipboardCopyToBufferEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventHandler">
            <summary>
            Represents the method that handles the<see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPaste"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanPaste"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCut"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCut"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopy"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCopy"/> 
            events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClearingCells"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDropAtRowCol"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OleDropAtRowCol"/> event.
            </summary>
            <remarks>
            The event occurs when the user releases the mouse over a cell at the end of an OLE drag-and-drop operation and
            before the data is applied to the grid.
            <para/>
            This event lets you provide your own customized paste data behavior.
            <para/>
            If you do not wish the grid to proceed with default behavior for this method,
            set <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/> to True. The grid will check this
            flag to see whether it should proceed. If you set it to True, the calling method
            will check <see cref="P:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.Result"/> as indication if the
            operation was successful.
            <para/>
            If you want the grid to proceed with default behavior, you should not change <see cref="P:Syncfusion.ComponentModel.SyncfusionHandledEventArgs.Handled"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventHandler"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes the new object.
            </summary>
            <param name="dataObject">The Data Object with clipboard data.</param>
            <param name="rowIndex">The target row index.</param>
            <param name="colIndex">The target column index.</param>
            <param name="result">Default value for <see cref="P:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.Result"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.DataObject">
            <summary>
            Gets or sets the Data Object with clipboard data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.RowIndex">
            <summary>
            Gets or sets the target row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.ColIndex">
            <summary>
            Gets or sets the target column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOleDropAtRowColEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether the result of the operation (if Handled = true is specified).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs">
            <summary>
            Provides data about <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRangeRequest"/> event of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeOptions)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="range">The range of cells to be repainted.</param>
            <param name="options">Options that indicate if method should enlarge the affected range of cells to include covered and floating cells.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs.Range">
            <summary>
            Gets or sets the range of cells to be repainted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs.Options">
            <summary>
            Gets or sets the options that indicate if method should enlarge the affected range of cells to include covered and floating cells.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.InvalidateRangeRequest"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridInvalidateRangeRequestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event which can be
            marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/> event which can be marked as handled.
            </summary>
            <remarks>
            GridPasteCellTextEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/> event to save text information into 
            a specified cell.
            <para/>
            This event allows you to customize how to handle text pasted into a cell at run-time on demand.
            <para/>
            If you do not wish the grid to make any changes to the cell,
            set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True. The grid will check this
            flag to see whether it should make changes to the cell.
            <para/>
            If you wish that the grid aborts the current paste operation (in case several cells are pasted),
            set the <see cref="P:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.Abort"/> flag to True.
            <para/>
            The GridPasteCellTextEventArgs members, e.ColIndex and e.RowIndex, specify column and row of the cell. The e.Style member holds the
            GridStyleInfo object for the cell.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventHandler"/>
            <seealso cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs"/> object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The style information for the cell.</param>
            <param name="text">The text to be pasted into the cell.</param>
            <param name="abort">Specifies if operation should be aborted.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.ColIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.Style">
            <summary>
            Gets the style information for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.Text">
            <summary>
            Gets or sets the text to be pasted into the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs.Abort">
            <summary>
            Gets or sets a value indicating whether operation should be aborted.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells">
            <summary>
            This class manages floating cell ranges for a grid.
            </summary>
            <remarks>
            You access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCells"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            <para/>
            Covered ranges are saved in two separate collections.
            <para/>
            The first collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>,
            which allows quick enumeration through all covered cell ranges in the grid. This is good when covered ranges
            need to be recalculated because rows or column have been inserted, moved, or removed.
            <para/>
            The second collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredCellPool"/>, which is optimized to look up if a specific cell
            is part of a covered range.
            <para/>
            The <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> event in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> lets you provide customized
            covered cells ranges at run-time. For example, you might want to have a pattern of covered ranges. 
            This allows you to customize the grid's default behavior and manage covered
            ranges by your own code and not with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelCoveredRanges"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells"/> object and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.OnChanged(Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">A GridRowColSizeChangedEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.DelayFloatCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Marks the specified range of cells to be re-evaluated at a later time if text is floating into neighboring cells.
            </summary>
            <param name="range">The range to be re-evaluated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.LockEvaluate">
            <summary>
            Temporarily stop evaluating floating cells.
            </summary>
            <returns>returns True.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.UnlockEvaluate">
            <summary>
            Start evaluating floating cells again after LockEvaluate call.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.DelayFloatCellsInt(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32)">
            <summary>
            Marks the specified range of cells to be re-evaluated at a later time if text is floating into neighboring cells.
            </summary>
            <param name="range">The range to be re-evaluated.</param>
            <param name="nMaxCols">The current column count of the grid or GridConstants.Undefined
            if all columns are affected.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.EvaluateFloatingCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Checks the specified range to see if any cells have been previously marked with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.DelayFloatCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> 
            to be re-evaluated.
            </overload>
            <summary>
            Checks the specified range to see if any cells have been previously marked with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.DelayFloatCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> 
            to be re-evaluated.
            </summary>
            <param name="range">The range to be re-evaluated.</param>
            <returns>True if floating state for any cell in the given range was changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.EvaluateFloatingCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Checks the specified range to see if any cells have been previously marked with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.DelayFloatCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            to be re-evaluated and returns a range that holds all affected cells.
            </summary>
            <param name="range">The range to be re-evaluated.</param>
            <param name="boundsInfo">The range with all affected cells including ranges that intersected with
            <paramref name="range"/>.
            </param>
            <returns>True if floating state for any cell in the given range was changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.Find(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the floating cell's range for the specified cell position
            or False if there is no floating cell's range for the given cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the found floating cell's range is returned.</param>
            <returns>True if a floating cell's range is at the specified cell position; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.FindRange(System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the floating cell's range for the specified cell position
            or <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if there is no floating cell's range for the given cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>A reference to <paramref name="range"/> if a floating cell's range is at the specified cell position or
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.Merge(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Combines all floating cell's ranges that intersect with a specified into one outer range that spans over all found ranges.
            </summary>
            <param name="range">The original range.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the outer range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.CanFloatCell(Syncfusion.Windows.Forms.Grid.GridCellModelBase,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryFloatCell)">
            <summary>
            Determines if a specific cell supports floating or being flooded by a neighboring cell.
            </summary>
            <param name="cellModel">The cell model</param>
            <param name="rowIndex">The row index</param>
            <param name="colIndex">The col index</param>
            <param name="style">The style info</param>
            <param name="query">The query float cell</param>
            <returns>return boolean value to determines if a specific cell supports floating.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData.offsetColumn">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData.widths">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData.savedRow">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData.InitColOffset(System.Int32)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData.GetIndex(System.Int32)">
            <summary>
            Gets the index.
            </summary>
            <param name="colIndex">Index of the col.</param>
            <returns>returns the index</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelFloatingCells.InternalFloatingCellsData.Reset">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary">
            <summary>
            Defines an interface used by <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer"/> to store hidden rows and columns.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.MoveItems(System.Int32,System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are moved.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <param name="dest">The Destination.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.RemoveItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are removed.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.InsertItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are inserted.
            </summary>
            <param name="index">Row or column index.</param>
            <param name="count">Number of rows or columns.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.Modified"/> flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.Item(System.Int32)">
            <summary>
            The hidden state at a given row or column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary.Modified">
            <summary>
            Gets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionaryTypeConverter">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionaryTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionaryTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionaryTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionaryTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionaryTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionaryTypeConverter.Binder">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary">
            <summary>
            This class implements the default dictionary that is used by <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer"/> 
            to store hidden rows and columns.
            </summary>
            <remarks>
            This is the default implementation for <see cref="T:Syncfusion.Windows.Forms.Grid.IGridRowColHideDictionary"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.#ctor">
            <summary>
            Initalize a new instance of GridRowColHideDictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.Syncfusion#Windows#Forms#Grid#IGridRowColHideDictionary#ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.Modified"/> flag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.MoveItems(System.Int32,System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are moved.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <param name="dest">The Destination.</param>
            <remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.MoveIndex(System.Int32,System.Int32,System.Int32)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.RemoveItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are removed.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.RemoveIndex(System.Int32,System.Int32)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.InsertItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are inserted.
            </summary>
            <param name="index">Row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.InsertIndex(System.Int32,System.Int32)"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.InnerDict">
            <internalonly/>
            <summary>Gets InnerDictionary. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.Modified">
            <summary>
            Gets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColHideDictionary.Item(System.Int32)">
            <summary>
            The hidden state at a given row or column index.
            </summary>
            <remarks>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.GridIndexDictionary.Item(System.Int32)"/>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer">
            <summary>
            This is an abstract base class that manages row heights
            and column widths in a grid and lets you change them.
            Events will be raised in the grid when settings are changed.
            </summary>
            <remarks>
            You typically access this class from a grid using the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> properties of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            This class raises the following events in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>:
            <list type="bullet">
            <listheader><term>Items</term><description>Descriptions</description></listheader>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/></term></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.OnChanged(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.OnChanging(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <summary>
            Used internally.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> instance containing the event data.</param>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.OnSaveHide(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.OnQueryHide(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer"/> and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Modified"/> flag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.GetRange(System.Int32,System.Int32)">
            <summary>
            Gets an array of <see cref="T:System.Boolean"/>. The array will have true values for 
            rows and columns that are hidden. Rows and columns that are displayed will have a false
            value.
            </summary>
            <param name="from">First row or column.</param>
            <param name="last">Last row or column.</param>
            <returns>An array with row and column hidden settings.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range of rows or columns to be displayed.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.SetRange(System.Int32,System.Int32,System.Boolean)">
            <overload>
            Changes the hidden state for a range of rows or columns.
            </overload>
            <summary>
            Changes the hidden state for a range of rows or columns.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="value">The hidden state to be applied.</param>
            <remarks>
            The method will generate undo information and push it onto the
            grid's command stack. <para/>
            A <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> or <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/>) event is 
            raised before the values are modified and gives event listeners a chance to discard 
            the operation before any change happens.<para/>
            If the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> event did not signal to cancel any changes, the operation
            will go ahead, apply changes, and raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> event. The <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> 
            will indicate if changes were successful or not.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.SetRange(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Changes the hidden state for a range of rows or columns.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="values">An array with hidden states to be applied.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.SetRange(System.Int32,System.Int32,System.Boolean[],System.Boolean)">
            <summary>
            Changes the hidden state for a range of rows or columns.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="values">An array with hidden states to be applied.</param>
            <param name="discardUndo">True if no undo information should be generated.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.SetHidden(System.Int32,System.Boolean)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.GetHidden(System.Int32)">
            <summary>
            Gets the hidden.
            </summary>
            <param name="index">The index.</param>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.RowColObject">
            <summary>
            Gets a reference to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.RowColName">
            <summary>
            Gets "HideRow" or "HideColumn" string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Dictionary">
            <summary>
            Gets storage for all hidden row and column settings in the grid. 
            </summary>
            <remarks>
            You can replace this dictionary at run-time with a custom dictionary 
            if you implement the <see cref="T:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary"/> interface.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.Int32)">
            <overload>
            Returns or sets the hidden state of a row or column. 
            </overload>
            <summary>
            Returns or sets the hidden row or column state for the specified index. 
            </summary>
            <remarks>
            Call ResetRange reset values to default. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Modified">
            <summary>
            Gets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer.Item(System.String)">
            <summary>
            Returns or sets the hidden row or column state for the row or column that matches the specified name. 
            </summary>
            <remarks>
            Call ResetRange reset values to default. 
            Call IsDefault to check if a value is reset to default.
            Call IsHidden[n] to check if a row or column is hidden.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelSetRowColHideCommand">
            <summary>
            This command object holds all information to execute the SetRange 
            command. 
            </summary>
            <remarks>
            GridRowColHideDictionary is typically generated by the SetRange command
            and pushed onto the grid's command stack. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetRowColHideCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer,System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Initializes <see ref="GridModelSetRowColHideCommand"/> object.
            </summary>
            <param name="rchi">A reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowColsIndexer"/> object.</param>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="values">An array with hidden states to be applied.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer.OnChanged(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <summary>
            Used internally.
            </summary>        
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer.OnChanging(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <summary>
            Used internally.
            </summary>        
            <returns>returns boolean value</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer.OnSaveHide(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer.OnQueryHide(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelHideRowsIndexer.Item(System.String)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelHideColsIndexer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelHideColsIndexer"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions">
            <summary>
            Holds additional information for the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/> command such as cell contents, row, and column
            sizes, hidden state, and covered cells state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.data">
            <summary>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> with cell contents.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.rowColSizes">
            <summary>
            An array with row or column sizes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.rowColHide">
            <summary>
            An array with hidden state of rows or columns.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.covered">
            <summary>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with covered cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.Data">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> with cell contents.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.RowColSizes">
            <summary>
            Gets or sets an array with row or column sizes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.RowColHide">
            <summary>
            Gets or sets an array with hidden state of rows or columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions.Covered">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with covered cells.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelMergeCells">
            <summary>
            This class manages merged cell ranges for a grid.
            </summary>
            <remarks>
            You access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.MergeCells"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance.
            <para/>
            Merged ranges are saved in two separate collections:
            <para/>
            The first collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>
            which allows quick enumeration through all merged cell ranges in the grid. This is good when merged ranges
            need to be recalculated because rows or column have been inserted, moved, or removed.
            <para/>
            The second collection is <see cref="T:Syncfusion.Windows.Forms.Grid.GridSpanCellPool"/> that is optimized to look up if a specific cell
            is part of a merged range.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelMergeCells"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelMergeCells"/> object and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelMergeCells"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelMergeCells"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.OnChanged(Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">A GridRowColSizeChangedEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.DelayMergeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Marks the specified range of cells to be re-evaluated at a later time.
            </summary>
            <param name="range">The range to be re-evaluated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.DelayMergeCellsInt(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32,System.Int32)">
            <summary>
            Marks the specified range of cells to be re-evaluated at a later time if text merges into neighboring cells.
            </summary>
            <param name="range">The range to be re-evaluated.</param>        
            <param name="nMaxRows">The current row count of the grid or GridConstants.Undefined
            if all rows are affected.</param>
            <param name="nMaxCols">The current column count of the grid or GridConstants.Undefined
            if all columns are affected.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.EvaluateMergeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Checks the specified range if any cells have been previously marked with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.DelayMergeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> 
            to be re-evaluated.
            </overload>
            <summary>
            Checks the specified range if any cells have been previously marked with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.DelayMergeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> 
            to be re-evaluated.
            </summary>
            <param name="range">The range to be re-evaluated.</param>
            <returns>True if merge state for any cell in the given range was changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.EvaluateMergeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Checks the specified range if any cells have been previously marked with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.DelayMergeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/>
            to be re-evaluated and returns a range that holds all affected cells.
            </summary>
            <param name="range">The range to be re-evaluated.</param>
            <param name="boundsInfo">The range with all affected cells including ranges that intersected with
            <paramref name="range"/>.
            </param>
            <returns>True if merge state for any cell in the given range was changed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.Find(Syncfusion.Windows.Forms.Grid.GridMergeCellDirection,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the merge cell's range for the specified cell position
            or False if there are no merge cells in range for the given cell position.
            </summary>
            <param name="mergeDirection">Specifies whether cells merged in row or column (or both) are asked for.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="range">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the found merge cell's range is returned.</param>
            <returns>True if a merge cell's range is at the specified cell position; False if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.FindRange(System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that indicates the merge cell's range for the specified cell position
            or <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if there are no merge cells in range for the given cell position.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>A reference to <paramref name="range"/> if a merge cell's range is at the specified cell position or
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> if not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.Merge(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Combines all merge cells' ranges that intersect into one outer range that spans over all found ranges.
            </summary>
            <param name="range">The original range. </param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the outer range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelMergeCells.CanMergeCell(Syncfusion.Windows.Forms.Grid.GridCellModelBase,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridMergeCellDirection)">
            <summary>
            Determines if a specific cell supports merging or being flooded by a neighboring cell.
            </summary>
            <param name="cellModel">The cellModel</param>
            <param name="rowIndex">The rowIndex</param>
            <param name="colIndex">The colIndex</param>
            <param name="style">The GridStyleInfo</param>
            <param name="query">The GridMergeCellDirection</param>
            <returns>returns boolean value to indicate merge cell</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelOptions">
            <summary>
            Provides properties that allow you to adjust behavior and appearance of the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.OnMergeCellsModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsModeChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.OnFloatCellsModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.FloatCellsModeChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.OnOptionsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.OptionsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.SetControllerOption(Syncfusion.Windows.Forms.Grid.GridControllerOptions,System.Boolean)">
            <summary>
            Toggles the enabled state of a specific controller.
            </summary>
            <param name="coption">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridControllerOptions"/> that identifies the controller.</param>
            <param name="value">The new enabled state.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.GetControllerOption(Syncfusion.Windows.Forms.Grid.GridControllerOptions)">
            <summary>
            Returns the enabled state of a specific controller.
            </summary>
            <param name="coption">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridControllerOptions"/> that identifies the controller.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the controller is enabled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.OnControllerOptionsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.SetDataObjectConsumerOption(Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions,System.Boolean)">
            <summary>
            Toggles the enabled state for specific data consumers.
            </summary>
            <param name="coption">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions"/> that identifies the dataobject consumer.</param>
            <param name="value">A <see cref="T:System.Boolean"/> that indicates if the controller is enabled.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.GetDataObjectConsumerOption(Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions)">
            <summary>
            Returns the enabled state for specific data consumers.
            </summary>
            <param name="doption">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions"/> that identifies the dataobject consumer.</param>
            <returns>A <see cref="T:System.Boolean"/> that indicates if the controller is enabled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelOptions.OnDataObjectConsumerOptionsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptionsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/> have changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptionsChanged">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptions"/> have changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendValue">
            <summary>
            Gets or sets an alphablend that should be used whenever a style or color setting in the grid has
            no alpha value specified. Ideal to change transparency for the whole grid in one place instead
            of changing colors for cells individually. Set to -1 if no value is specified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.FloatCellsMode">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFloatCellsMode"/> enumeration that specifies floating cells' behavior in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode"/> enumeration that specifies merge cells behavior in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsLayout">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsMode"/> enumeration that specifies merge cells behavior in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsModeChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/> is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.FloatCellsModeChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.FloatCellsMode"/> is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.OptionsChanged">
            <summary>
            Occurs when settings in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelOptions"/> have changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DefaultGridBorderStyle">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> value to be used as default for cell borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HighlightFrozenLine">
            <summary>
            Gets or sets a value indicating whether the frozen line should be highlighted with <see cref="T:Syncfusion.Windows.Forms.Grid.GridProperties"/>.<see cref="P:Syncfusion.Windows.Forms.Grid.GridProperties.FixedLinesColor"/> the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DragDropDropTargetFlags">
            <summary>
            Gets or sets or disables various options for using the grid as an OLE drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions">
            <summary>
            Gets or sets which mouse controllers should be enabled for the grid.
            <para/>
            This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </summary>
            <remarks>
            When you assign this enumeration value to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/>,
            the grid will create or disable specified mouse controllers for the grid. Each of these 
            mouse controllers implements the <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> interface and
            gets registered with <see cref="P:Syncfusion.Windows.Forms.ScrollControl.MouseControllerDispatcher"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptions">
            <summary>
            Gets or sets which default data consumers should be enabled for the grid.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions"/> that holds the options to be applied.
            </value>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions"/> 
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior">
            <summary>
            Gets or sets behavior for resizing rows.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior"/> enumeration with options.
            </value>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/>
            and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> events.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeColsBehavior">
            <summary>
            Gets or sets behavior for resizing columns.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridResizeCellsBehavior"/> enumeration with options.
            </value>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingColumns"/>
            and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.ResizingRows"/> events.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedCols">
            <summary>
            Gets or sets a value indicating whether to allow the user to drag selected columns by clicking on the column header.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/>
            and  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> events.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedRows">
            <summary>
            Gets or sets a value indicating whether to allow the user to drag selected rows by clicking on the row header.
            </summary>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragging"/>
            and  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.SelectionDragged"/> events.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DragSelectedCellsMouseButtonsMask">
            <summary>
            Gets or sets which mouse buttons can be used for dragging selected rows or columns.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionFlags"/> that specifies options to be applied.
            </value>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> events.<para/>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/> property lets you further customize selection behavior.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection">
            <summary>
            Gets or sets selection behavior of the grid.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionFlags"/> that specifies options to be applied.
            </value>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> events.<para/>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SelectCellsMouseButtonsMask"/> property lets you decide which mouse buttons 
            can be used for selecting cells.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowScrollCurrentCellInView">
            <summary>
            Gets or sets ScrollCurrentCellInView behavior of the grid.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridScrollCurrentCellReason"/> that specifies options to be applied.
            </value>
            <remarks>
            You can customize the current cell's scroll behavior at run-time 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.QueryScrollCellInView"/> event.<para/>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowScrollCurrentCellInView"/> property lets you specify the mask for
            which reason the scrolling should happen.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SelectCellsMouseButtonsMask">
            <summary>
            Gets or sets which mouse buttons can be used for selecting cells.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionFlags"/> that specifies options to be applied.
            </value>
            <remarks>
            You can customize the mouse controller's behavior at run-time while the user is performing the action 
            by subscribing to the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> and 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> events.<para/>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/> property lets you further customize selection behavior.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendSelectionColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> for alpha blended cell selections.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> for alpha blended cell selections. It is important to set the alpha value to be less
            than 255 when calling <see cref="M:System.Drawing.Color.FromArgb(System.Int32)"/>.
            </value>
            <remarks>
            This setting has no effect if alpha blended selections have been disabled with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ListBoxSelectionMode">
            <summary>
            Gets or sets list box-like selection behavior for the grid when the user moves the current cell.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.SelectionMode"/> that defines the list box-like selection behavior of the grid.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MulitExtendedArrowKeySelect">
            <summary>
            Gets or sets a value indicating whether when you select SelectionMode.MultiExtended, this flag defines if the rows selection
            should be cleared and moved with the new current cell or if only the current cell
            should be moved without clearing selections.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeCurrentCell">
            <summary>
            Gets or sets a value indicating whether Excel-like current cell behavior. When the user moves the current cell out of a selected
            range, the range will be cleared. If the user moves the current cell inside a selected range, the
            range will stay.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ClickedOnDisabledCellBehavior">
            <summary>
            Gets or sets Excel-like current cell behavior. When the user clicks on a cell out of a selected range for which .Enabled has been set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeSelectionFrame">
            <summary>
            Gets or sets a value indicating whether the active selection should be outline with a selection frame.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior">
            <summary>
            Gets or sets current cell activation behavior when moving the current cell or clicking inside a cell.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellActivateAction"/> enumeration that defines when to set the focus / toggle edit mode for the current cell.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateSendKey">
            <summary>
            Gets or sets Activate the SendKey when pressing the negative sign key.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.EnterKeyBehavior">
            <summary>
            Gets or sets movement of current cell when pressing the Enter key.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.TransparentBackground">
            <summary>
            Gets or sets a value indicating whether grid should erase and fill background of cells or only draw cell text.
            </summary>
            <value>
            True if only text should be drawn; False if cell background should be erased and filled.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedRowHeaders">
            <summary>
            Gets or sets a value indicating whether to toggle display of row numbers in row headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedColHeaders">
            <summary>
            Gets or sets a value indicating whether to toggle display of column ids (A, B, C, ...) in column headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowThumbTrack">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HorizontalThumbTrack">
            <summary>
            Gets or sets a value indicating whether the grid should scroll immediately when the user grabs a horizontal scrollbar thumb
            and drags it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.VerticalThumbTrack">
            <summary>
            Gets or sets a value indicating whether the grid should scroll immediately when the user grabs a vertical scrollbar thumb
            and drags it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HorizontalScrollTips">
            <summary>
            Gets or sets a value indicating whether the grid should display Scroll Tips when the user grabs a horizontal scrollbar thumb
            and drags it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.VerticalScrollTips">
            <summary>
            Gets or sets a value indicating whether the grid should display Scroll Tips when the user grabs a vertical scrollbar thumb
            and drags it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeRowSize">
            <summary>
            Gets or sets the minimum row height when the user resizes a row with the mouse.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeColSize">
            <summary>
            Gets or sets the minimum column width when the user resizes a column with the mouse.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SmoothControlResize">
            <summary>
            Gets or sets a value indicating whether a grid should be completely refreshed when the user resizes the window
            or if only newly visible rows or columns should be redrawn.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ScrollFrozen">
            <summary>
            Gets or sets a value indicating whether the scroll behavior when user moves current cell with arrow keys into the frozen cells area.
            </summary>
            <remarks>
            True, if current cell is at the topmost nonfrozen row, scroll the view.
            False, move current cell into frozen cells. If current cell is at the top row, 
            scroll the view.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DrawOrder">
            <summary>
            Gets or sets the order how cells are loaded before the grid is displayed. This is of use when
            using the virtual grid and it is more extensive to move from column to column than to 
            move from row to row in your custom data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShowCurrentCellBorderBehavior">
            <summary>
            Gets or sets when to show current cell frame or border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.RefreshCurrentCellBehavior">
            <summary>
            Gets or sets which cells to refresh when moving the current cell. If a cell's appearance is changed if
            cells are moved to a new row (e.g. when GridShowButtons.ShowCurrentRow is used), you should specify
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridRefreshCurrentCellBehavior.RefreshRow"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShouldSynchronizeCurrentCell">
            <summary>
            Gets or sets a value indicating whether current cell movements should be synchronized among <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> attached to the same model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DisplayEmptyRows">
            <internalonly/>
            <summary>Gets or sets a value indicating whether to Display Empty Rows. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DisplayEmptyColumns">
            <internalonly/>
            <summary>Gets or sets a value indicating whether to Display Empty Columns. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.WrapCell">
            <summary>
            Gets or sets a value indicating whether to go to first column in next row or last column in previous row when
            at end or beginning of a row and moving left or right. For more options, 
            use <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.WrapCellBehavior"/> instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.WrapCellBehavior">
            <summary>
            Gets or sets go to first column in next row or last column in previous row when
            at end or beginning of a row and moving left or right.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.UseRightToLeftCompatibleTextBox">
            <summary>
            Gets or sets a value indicating whether the controls the kind of textbox control that is created for TextBox cells. 
            In general the original text box behaves better than the richtext box with Hebrew and arabic languages.
            By default the grid uses the RichTextBox control for cell editing, but if you set
            UseRightToLeftCompatibleTextBox to true then the grid will do editing with original TextBox controls
            instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.GridVisualStyles">
            <summary>
            Gets or sets the VisualStyles (skins) like Office2010, Office2007, Office2003
            </summary>
            <remarks> Each of the components that is incorporated into the grid control is being affected with Visual Styles.
            Choosing one of the options will change the look and feel of the individual grid elements.</remarks>
            <example>The VisualStyles can be set by assigning a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.GridVisualStyles"/> enumeration value to the GridVisualStyles property
            <code lang="C#">
                this.gridControl1.GridVisualStyles = GridVisualStyles.Office2007Blue;
            </code>
            <code lang="VB">
                Me.GridControl1.GridVisualStyles = GridVisualStyles.Office2007Blue
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.Office2007ScrollBars">
            <summary>
            Gets or sets a value indicating whether to toggle between standard and Office2007 scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.Office2007ScrollBarsColorScheme">
            <summary>
            Gets or sets the style of Office2007 scroll bars
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.GridOfficeScrollBars">
            <summary>
            Gets or sets a value indicating whether to toggle between standard and Office2007 scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.Office2010ScrollBarsColorScheme">
            <summary>
            Gets or sets the style of Office2010 scroll bars
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.GridVisualStylesDrawing">
            <summary>
            Gets or sets the VisualStylesDrawing object
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridClickedOnDisabledCellBehavior">
            <summary>
            Defines behavior when ExcelLikeCurrentCell was specified and user clicked on a cell with
            GridStyleInfo.Enabled = false. In versions prior to 3.0 the grid would deactivate the current cell (DeactivateCurrentCell).
            With 3.x we changed this behavior to leave the current cell untouched (LeaveCurrentCell).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridClickedOnDisabledCellBehavior.Default">
            <summary>
            Same as LeaveCurrentCell
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridClickedOnDisabledCellBehavior.LeaveCurrentCell">
            <summary>
            Do not deactivate current cell when ExcelLikeCurrentCell was specified and user clicked on a cell with
            GridStyleInfo.Enabled = false. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridClickedOnDisabledCellBehavior.DeactivateCurrentCell">
            <summary>
            Deactivate the current cell when ExcelLikeCurrentCell was specified and user clicked on a cell with
            GridStyleInfo.Enabled = false. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations">
            <summary>
            Abstract class for row and column operations in the grid. Allows you to insert, move, remove rows, and more.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowOperations"/> for row operations and <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColOperations"/> for column operations.
            <para/>
            You typically do not derive or instantiate this class. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class instantiates
            objects of this class. You can access all members of this class through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/> and
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/> objects.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnDefaultSizeChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDefaultColWidthChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)"/> event in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data.</param>
            <returns>True if operation can proceed; False if it should abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnDefaultSizeChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDefaultRowHeightChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnDefaultColWidthChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnHeaderCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnHeaderCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnFrozenCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnFrozenCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnRangeMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data.</param>
            <returns>True if operation can proceed; False if it should abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnRangeMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnRangeRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <summary>
            Updates internal structures before removing rows or columns.
            </summary>
            <param name="e">Event data.</param>
            <returns>True if operation can proceed; False if it should abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RaiseRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data.</param>
            <returns>True if operation can proceed; False if it should abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnRangeRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnRangeInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data.</param>
            <returns>True if operation can proceed; False if it should abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.OnRangeInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnColsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.OnRowsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/> and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.SetCells(System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)">
            <summary>
            Changes the cell contents at a specific row or column index.
            </summary>
            <param name="index">The row (or column) index.</param>
            <param name="data">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</param>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.GetCells(System.Int32,System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.SetCells(System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable,System.Boolean,System.Boolean)">
            <summary>
            Changes the cell contents at a specific row or column index.
            </summary>
            <param name="index">The row (or column) index.</param>
            <param name="data">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</param>
            <param name="extendRows">True if appending rows is allowed if data holds more rows than fit into the grid.</param>
            <param name="extendCols">True if appending columns is allowed if data holds more columns than fit into the grid.</param>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.GetCells(System.Int32,System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.GetCells(System.Int32,System.Int32)">
            <summary>
            Gets a table that represents a range of row (or columns).
            </summary>
            <param name="from">The first row (or column) index.</param>
            <param name="last">The last row (or column) index.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</returns>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.SetCells(System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.GetCells(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets a table that represents a range of row (or columns).
            </summary>
            <param name="from">The first row (or column) index.</param>
            <param name="last">The last row (or column) index.</param>
            <param name="getRowColStyle">True if row or column parent styles should be copied.</param>
            <param name="copyCells">True if cell contents should be copied.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</returns>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.SetCells(System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DelayFloatingCells(System.Int32,System.Int32)">
            <summary>
            Force recalculation of floating cell's state for the specified range of rows (or columns).
            </summary>
            <param name="from">The first row (or column) index.</param>
            <param name="last">The last row (or column) index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DataRemoveRange(System.Int32,System.Int32)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DataInsertRange(System.Int32,System.Int32)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DataMoveRange(System.Int32,System.Int32,System.Int32)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.SetHeaderCount(System.Int32,System.Boolean)">
            <summary>
            Gets / sets the number of header rows or columns without raising <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/> events.
            </summary>
            <param name="value">The new count.</param>
            <param name="raiseEvents">Specifies if <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/> events should be raised.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.GetSelectedRowColRanges">
            <summary>
            Queries selected row or column ranges.
            </summary>
            <returns>Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with all selected rows (or columns).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.GetRangeFromTo(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32@,System.Int32@)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.CreateRangeFromTo(System.Int32,System.Int32)">
            <summary>
            Used internally.
            </summary>    
            <returns>returns GridRangeInfo</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FreezeSelection">
            <summary>
            Freeze the current selected range of rows (or columns). Moves them to the start of the grid and sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FreezeRange(System.Int32,System.Int32)">
            <summary>
            Freeze the specified range of rows (or columns). Moves them to the start of the grid and sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount"/>.
            </summary>
            <param name="from">The first row (or column) index.</param>
            <param name="last">The last row (or column) index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RestoreFrozen">
            <summary>
            Unfreezes a previously frozen range of rows (or columns) and moves the rows or columns back to original position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.SetFrozenCount(System.Int32,System.Boolean)">
            <summary>
            Gets / sets the number of frozen rows or columns without raising <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> events.
            </summary>
            <param name="value">The new count.</param>
            <param name="raiseEvents">Specifies if <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> events should be raised.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of rows or columns.
            </summary>
            <param name="from">The first row or column index.</param>
            <param name="last">The last row or column index.</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RemoveRange(System.Int32,System.Int32)"/> checks <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.ShouldGenerateUndoInfo"/>
            and generates undo information if necessary.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)">
            <overload>
            Inserts a range of rows or columns at a specified index.
            </overload>
            <summary>
            Inserts a range of rows or columns at a specified index.
            </summary>
            <param name="insertAt">The index where rows or columns should be inserted.</param>
            <param name="count">The number of rows or columns to insert.</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32)"/> checks <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.ShouldGenerateUndoInfo"/>
            and generates undo information if necessary.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.InsertRange(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridModelInsertRangeOptions)">
            <summary>
            Inserts a range of rows or columns at a specified index.
            </summary>
            <param name="insertAt">The index where rows or columns should be inserted.</param>
            <param name="count">The number of rows or columns to insert.</param>
            <param name="iro">Specifies cell contents, row, and columns heights, hidden state, and covered cells information.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)">
            <overload>
            Moves a range of rows or columns.
            </overload>
            <summary>
            Moves a range of rows or columns.
            </summary>
            <param name="from">The first row or column index.</param>
            <param name="target">The destination row or column index.</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32)"/> checks <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelCommandManager.ShouldGenerateUndoInfo"/>
            and generates undo information if necessary.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MoveRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves a range of rows or columns.
            </summary>
            <param name="from">The first row or colum index.</param>
            <param name="count">The number of rows or columns to move.</param>
            <param name="target">The destination row or column index.</param>
            <genoverload/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.Size">
            <summary>
            Gets a reference to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.Hidden">
            <summary>
            Gets a reference to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.RowColName">
            <summary>
            Gets "Row" or "Col" string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.MaxSize">
            <summary>
            Gets or sets the maximum row height (or column width).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.DefaultSize">
            <summary>
            Gets or sets the default row height (or column width).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.HeaderCount">
            <summary>
            Gets or sets the number of row (or column) headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.CanFreezeSelection">
            <summary>
            Gets a value indicating whether the grid has a current selected range that can be frozen.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.CanRestoreFrozen">
            <summary>
            Gets a value indicating whether there is a frozen range of rows (or columns) that can be unfrozen.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColOperations.FrozenCount">
            <summary>
            Gets or sets the number of frozen rows (or columns).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowOperations.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowOperations"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowOperations.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowOperations"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowOperations.OnDefaultSizeChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <summary>
            Raises <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/> event in  the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
            <param name="e">The GridDefaultSizeChangingEventArgs</param>
            <returns>returns boolean value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowOperations.GetRangeFromTo(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32@,System.Int32@)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowOperations.RowColName">
            <summary>
            Returns "Row" string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowOperations.Size">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowOperations.Hidden">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColOperations.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColOperations"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColOperations.GetRangeFromTo(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32@,System.Int32@)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary">
            <summary>
            Defines an interface used by <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer"/> to store row heights and column widths.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.MoveItems(System.Int32,System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are moved.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <param name="dest">The Destination.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.RemoveItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are removed.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.InsertItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are inserted.
            </summary>
            <param name="index">Row or column index.</param>
            <param name="count">Number of rows or columns.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.Modified"/> flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.Item(System.Int32)">
            <summary>
            The row height or column with a given index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.Modified">
            <summary>
            Gets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Internal only.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter.Binder">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionaryTypeConverter.Binder.BindToType(System.String,System.String)">
            <summary>
            Internal only.
            </summary>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly"/> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type"/> name of the serialized object.</param>
            <returns>
            The type of the object the formatter creates a new instance of.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary">
            <summary>
            This class implements the default dictionary used by the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer"/> 
            to store row heights and column widths.
            </summary>
            <remarks>
            This is the default implementation for <see cref="T:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.#ctor">
            <summary>
            Initialize a new instance of GridRowColSizeDictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.Modified"/> flag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.MoveItems(System.Int32,System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are moved.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <param name="dest">The Destination.</param>
            <remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.MoveItems(System.Int32,System.Int32,System.Int32)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.RemoveItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are removed.
            </summary>
            <param name="from">First row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.RemoveItems(System.Int32,System.Int32)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.InsertItems(System.Int32,System.Int32)">
            <summary>
            Occurs when rows or columns are inserted.
            </summary>
            <param name="index">Row or column index.</param>
            <param name="count">Number of rows or columns.</param>
            <remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.InsertItems(System.Int32,System.Int32)"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.Modified">
            <summary>
            Gets or sets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.InnerDict">
            <internalonly/>
            <summary>Gets InnerDictionary. Internal only.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowColSizeDictionary.Item(System.Int32)">
            <summary>
            The size of a given row or column index.
            </summary>
            <remarks>
            <seealso cref="P:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary.Item(System.Int32)"/>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer">
            <summary>
            This is an abstract base class that manages row heights
            and column widths in a grid and lets you change them.
            Events will be raised in the grid when settings are changed.
            </summary>
            <remarks>
            You typically access this class from a grid using the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> properties of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            This class raises the following events in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>:
            <list type="bullet">
            <listheader><term>Items</term><description>Descriptions</description></listheader>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/></term></item>
            <item><term><see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/></term></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.OnChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.OnChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.OnSaveSize(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.OnQuerySize(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.OnQuerySizeTotal(Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer"/> and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Modified"/> flag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.GetRange(System.Int32,System.Int32)">
            <summary>
            Gets an array of row or column sizes. The array will have negative values for 
            rows and columns that are reset default size. Hidden rows and columns are returned
            in their original size.
            </summary>
            <param name="from">First row or column.</param>
            <param name="last">Last row or column.</param>
            <returns>An array with row and column sizes.</returns>
            <remarks>
            Call EvalRange to change the array and determine actual sizes for rows or
            or columns that are reset to default or hidden.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.EvalRange(System.Int32,System.Int32[])">
            <overload>
            Call EvalRange to change a given array of row and column sizes and determine 
            actual sizes for rows or columns that are reset to default or hidden.
            </overload>
            <summary>
            Call EvalRange to change a given array of row and column sizes and determine 
            actual sizes for rows or columns that are reset to default or hidden.
            </summary>
            <param name="startAt">First row or column index.</param>
            <param name="values">The array to be evaluated. The values in the array will be 
            changed.</param>
            <returns>A reference to the values array (see param values).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.EvalRange(System.Int32,System.Int32[],System.Boolean[],System.Int32)">
            <summary>
            Call EvalRange to change a given array of row and column sizes and determine 
            actual sizes for rows or columns that are reset to default or hidden.
            </summary>
            <param name="startAt">First row or column index.</param>
            <param name="values">The array to be evaluated. The values in the array will be 
            changed.</param>
            <param name="hidden">An array that specifies which rows or columns are hidden.</param>
            <param name="defaultSize">The default row or column width in the grid.</param>
            <returns>A reference to the values array (see param values).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.GetTotal(System.Int32,System.Int32)">
            <summary>
            Gets the total size for the specified range of rows or columns.
            </summary>
            <param name="from">The first row or column.</param>
            <param name="last">The last row or column.</param>
            <returns>The total size.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.GetTotal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the total size for the specified range of rows or columns.
            </summary>
            <param name="from">The first row or column.</param>
            <param name="last">The last row or column.</param>
            <param name="maximum">Maximum value for total.</param>
            <returns>The total size.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.IsDefault(System.Int32)">
            <summary>
            Determines if row or column at the specified index is reset to default.
            </summary>
            <param name="index">Row or column index.</param>
            <returns>True if value is reset to default; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResetSize(System.Int32)">
            <summary>
            Resets the row or column to default size.
            </summary>
            <param name="index">Row or column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range of rows or columns to default size.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.SetRange(System.Int32,System.Int32,System.Int32)">
            <overload>
            Changes the size of a range of rows or columns.
            </overload>
            <summary>
            Changes the size of a range of rows or columns.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="value">The size to be applied.</param>
            <remarks>
            The method will generate undo information and push it onto the
            grid's command stack. <para/>
            A <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/> or (<see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/>) event 
            is raised before the values are modified and gives
            event listeners a chance to discard the operation before any change happens.<para/>
            If the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/> event did not signal to cancel, the operation
            will go ahead, apply changes and raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/> or (<see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/>) 
            event. The Changed event will indicate if changes were successful or not.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.SetRange(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Changes the size of a range of rows or columns.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="values">An array with sizes to be applied.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.SetRange(System.Int32,System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Changes the size of rows or columns in the specified range.
            </summary>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="values">The sizes to be applies to the range.</param>
            <param name="discardUndo">Set this true if you do not want undo information to 
            be pushed onto the grid's command stack.</param>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.SetSize(System.Int32,System.Int32)">
            <summary>
            Saves the raw size data for the given row or column.
            </summary>
            <remarks>
            A negative value means that the size of the row or column should be reset 
            to default. This method will not raise neither Changing nor Changed events.
            </remarks>
            <param name="index">The row or column index.</param>
            <param name="value">The new size of the row or column. -1 if the size 
            of the row or column should be reset to default. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.GetSize(System.Int32)">
            <summary>
            Returns the raw size data for the given row or column.
            </summary>
            <param name="index">The row or column index.</param>
            <returns>The size of the row or column. It is -1 if the size 
            of the row or column is reset to default.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResizeToFit(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Resizes a range of rows or columns to optimally fit contents of the
            specified range of cells.
            </overload>
            <summary>
            Resizes a range of rows or columns to optimally fit contents of the
            specified range of cells.
            </summary>
            <param name="range">The range of cells to be analyzed.</param>
            <returns>True if any changes were made; False if all sizes were already optimal.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResizeToFit(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions)">
            <summary>
            Resizes a range of rows or column to optimally fit contents of the
            specified range of cells and given options.
            </summary>
            <param name="range">The range of cells to be analyzed.</param>
            <param name="options">Specifies whether row or column headers should be included; if size can be reduced and if covered cells should be considered.</param>
            <returns>True if any changes were made; False if all sizes were already optimal.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.ResizeToFit(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean,System.Boolean)">
            <internalonly/>
            <summary>Used internally.</summary>
            <returns>returns boolean value</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.RowColName">
            <summary>
            Gets "RowHeight" or "ColumnWidth" string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.RowColObject">
            <summary>
            Gets a reference to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.IsHidden">
            <summary>
            Gets a reference to <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Dictionary">
            <summary>
            Gets or sets storage for all row heights or column widths in the grid. 
            </summary>
            <remarks>
            You can replace this dictionary at run-time with a custom dictionary 
            if you implement the <see cref="T:Syncfusion.Windows.Forms.Grid.IGridRowColSizeDictionary"/> interface.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.Int32)">
            <overload>
            Returns or sets the row height or column width of the specified row or column. 
            </overload>
            <summary>
            Returns or sets the row height or column width for the specified index. Hidden rows or
            columns will return 0. If row or column has default size, the DefaultSize is returned.
            </summary>
            <remarks>
            Call ResetRange reset values to default. 
            Call IsDefault to check if a value is reset to default.
            Call IsHidden[n] to check if a row or column is hidden.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Modified">
            <summary>
            Gets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer.Item(System.String)">
            <summary>
            Returns or sets the row height or column width for the row or column that matches the specified name. Hidden rows or
            columns will return 0. If row or column has default size, the DefaultSize is returned.
            </summary>
            <remarks>
            Call ResetRange reset values to default. 
            Call IsDefault to check if a value is reset to default.
            Call IsHidden[n] to check if a row or column is hidden.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelSetRowColSizeCommand">
            <summary>
            This command object holds all information to execute the SetRange 
            command. 
            </summary>
            <remarks>
            GridModelSetRowColSizeCommand is typically generated by the SetRange command
            and pushed onto the grid's command stack. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetRowColSizeCommand.#ctor(Syncfusion.Windows.Forms.Grid.GridModelRowColSizeIndexer,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Initializes a new GridModelSetRowColSizeCommand object with all the commands.
            </summary>
            <param name="rcsi">A reference to the target GridModelRowColSizeIndexer.</param>
            <param name="from">First row or column index in range.</param>
            <param name="last">Last row or column index in range.</param>
            <param name="values">The sizes to be applies to the range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSetRowColSizeCommand.Execute">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.OnChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.OnChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.OnSaveSize(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.OnQuerySize(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.OnQuerySizeTotal(Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.ResizeToFitOptimized(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions,Syncfusion.Windows.Forms.Grid.GridTextOptions)">
            <summary>
            Resizes a range of rows or column to exactly fit contents of the
            specified range of cells.
            </summary>
            <param name="range">The range of cells to be analyzed.</param>
            <returns>
            True if any changes were made.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowHeightsIndexer.Item(System.String)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.OnChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.OnChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.OnSaveSize(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.OnQuerySize(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.OnQuerySizeTotal(Syncfusion.Windows.Forms.Grid.GridRowColSizeTotalEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.ResizeToFitOptimized(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions,Syncfusion.Windows.Forms.Grid.GridTextOptions)">
            <summary>
            Resizes a range of rows or column to exactly fit contents of the
            specified range of cells.
            </summary>
            <param name="range">The range of cells to be analyzed.</param>
            <returns>
            True if any changes were made.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.ResizeToFit(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridResizeToFitOptions)">
            <summary>
            Resizes a range of rows or column to optimally fit contents of the
            specified range of cells and given options.
            </summary>
            <param name="range">The range of cells to be analyzed.</param>
            <param name="options">Specifies whether row or column headers should be included; if size can be reduced and if covered cells should be considered.</param>
            <returns>
            True if any changes were made; False if all sizes were already optimal.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.RowColObject">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.RowColName">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColWidthsIndexer.Item(System.String)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelSelections">
            <summary>
            Manages selected ranges in the grid. Allows you to add and remove selections, determine
            selection state of a specific cell, and more.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelSelections"/> object and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.GetSelectedRanges(Syncfusion.Windows.Forms.Grid.GridRangeInfoList@,System.Boolean)">
            <summary>
            Retrieves a list with selected ranges or if there are no selected ranges, returns the current cell as selected range.
            </summary>
            <param name="ranges">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> where selected ranges will be copied to.</param>
            <param name="considerCurrentCell">True if current cell should be returned as selected range if there are no other selected ranges.</param>
            <returns>True if one or multiple ranges or current cell range could be returned; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.GetInvertStateRowCol(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <summary>
            Determines if the specified cell position is found in a range list.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="rl">The range list with ranges to be searched.</param>
            <returns>True if cell position was found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.GetSelectedCols(System.Boolean,System.Boolean)">
            <summary>
            Returns selected columns in the grid.
            </summary>
            <param name="bRangeColsOnly">True if only selected columns should be returned; False if you want to treat single range cell selections as full column selections.</param>
            <param name="considerCurrentCell">True if current cell should be returned as selected range if there are no other selected ranges.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with column ranges.</returns>
            <remarks>
            If the user has selected the cell's range R1C2:R2C4 and the current cell is at R4C5.<para/>
            If you specify False for <paramref name="bRangeColsOnly"/>, the method will return range C2:C5. <para/>
            If you specify True for <paramref name="bRangeColsOnly"/> and also True for <paramref name="considerCurrentCell"/>,  
            the method will return range C5. <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.GetSelectedRows(System.Boolean,System.Boolean)">
            <summary>
            Returns selected rows in the grid.
            </summary>
            <param name="bRangeRowsOnly">True if only selected rows should be returned; False if you want to treat single range cell selections as full row selections.</param>
            <param name="considerCurrentCell">True if current cell should be returned as selected range if there are no other selected ranges.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with row ranges.</returns>
            <remarks>
            If the user has selected the cell's range R1C2:R2C4 and the current cell is at R4C5.<para/>
            If you specify False for <paramref name="bRangeColsOnly"/>, the method will return range R1:R2;R4. <para/>
            If you specify True for <paramref name="bRangeColsOnly"/> and also True for <paramref name="considerCurrentCell"/>,
            the method will return range R4. <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Adds a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to the list of selected ranges.
            </summary>
            <param name="range">The new selection range to be added.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Removes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> from the list of selected ranges.
            </summary>
            <param name="range">The new selection range to be added.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SelectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Adds or removes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> from the list of seletced ranges.
            </summary>
            <param name="range">The selection range to be added or removed.</param>
            <param name="bSelect">True if range should be added; False otherwise.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SetSelectClickRowCol(System.Int32,System.Int32)">
            <summary>
            Sets internal properties to simulate having clicked a particular row and col to start a shift-selection process.
            </summary>
            <param name="rowIndex">The grid row index.</param>
            <param name="colIndex">The grid column index.</param>
            <remarks>
            When you explicitly call gridControl1.Selections.SelectRange to select cells, the grid does not treat this the same 
            as clicking on the cells to select them. When you click cells to select them, internal fields track the clicks
            so that the selection can be extended using additional shift+clicks. If you want your range selected by using 
            gridControl1.Selections.SelectRange to be extendible in this manner, then you will need to make an additional call
            to tell the grid to set its internal fields.
            </remarks>
            <example>
            The code shows a simple use case.
            <code lang="C#">
            gridControl1.Selections.SelectRange(GridRangeInfo.Row(1), true);
            gridControl1.Selections.SetSelectClickRowCol(1, 0);
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.SetSelectClickRowCol(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController)">
            <summary>
            Sets internal properties to simulate having clicked a particular row and col to start a shift-selection process.
            </summary>
            <param name="rowIndex">The grid row index.</param>
            <param name="colIndex">The grid column index.</param>
            <param name="mc">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController"/> mouse controller.</param>
            <remarks>
            When you explicitly call gridControl1.Selections.SelectRange to select cells, the grid does not treat this the same 
            as clicking on the cells to select them. When you click cells to select them, internal fields track the clicks
            so that the selection can be extended using additional shift+clicks. If you want your range selected by using 
            gridControl1.Selections.SelectRange to be extendible in this manner, then you will need to make an additional call
            to tell the grid to set its internal fields.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.Clear">
            <summary>
            Clears all selections.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.Clear(System.Boolean)">
            <summary>
            Clears all selections.
            </summary>
            <param name="raiseEvents">Indicates if SelectionChanging and SelectionChanged should be raised.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.ChangeSelection(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Changes an existing selection.
            </overload>
            <summary>
            Changes an existing selection.
            </summary>
            <param name="oldRange">The range to be changed.</param>
            <param name="newRange">The new boundaries of the range.</param>
            <remarks>
            The grid calls this method when you select cells with the mouse.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.ChangeSelection(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Changes an existing selection.
            </summary>
            <param name="oldRange">The range to be changed.</param>
            <param name="newRange">The new boundaries of the range.</param>
            <param name="raiseEvents">Specifies if SelectionChanging and SelectionChanged events should be raised.</param>
            <remarks>
            The grid calls this method when you select cells with the mouse.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.GetEnumerator">
            <summary>
            Returns an enumerator for stepping through all selected ranges.
            </summary>
            <returns>The enumerator for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelSelections.Ranges"/> collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelSelections.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all range objects into an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> starting at specified index.
            </summary>
            <param name="array">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelSelections.Ranges">
            <summary>
            Gets the collection with all selected ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelSelections.Count">
            <summary>
            Gets the number of ranges in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelSelections"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelSelections.SyncRoot">
            <summary>
             Gets NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelSelections.IsSynchronized">
            <summary>
            Gets a value indicating whether Is Synchronized. Returns False.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelStyleDataExchange">
            <summary>
            Manages copy and paste of style objects in the grid. Allows you to add and remove selections, determine
            selection state of a specific cell, and more.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelStyleDataExchange.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelStyleDataExchange"/> object and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelStyleDataExchange.CopyCellsToDataObject(Syncfusion.Windows.Forms.Grid.GridData@,Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean,System.Int32,System.Int32@,System.Int32@)">
            <overload>
            Creates a  <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object and initializes it with style objects and covered cell information of a range of cells in the grid.
            </overload>
            <summary>
            Creates a  <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object and initializes it with style objects and covered cell information of a range of cells in the grid.
            </summary>
            <param name="data">A placeholder for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object that is created by the method.</param>
            <param name="range">The range of cells to be copied.</param>
            <param name="bLoadBaseStyles">True if information from base styles should also be copied; False if only
            the settings that were initialized for the cells should be copied.</param>
            <param name="dragDropFlags">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> with further options (currently ignored.)</param>
            <param name="rowCount">A placeholder where the number of copied rows is returned.</param>
            <param name="colCount">A placeholder where the number of copied columns is returned.</param>
            <returns>True if the operation completed successfully; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelStyleDataExchange.CopyCellsToDataObject(Syncfusion.Windows.Forms.Grid.GridData@,Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object and initializes it with style objects and covered cell information of a range of cells in the grid.
            </summary>
            <param name="data">A placeholder for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object that is created by the method.</param>
            <param name="rangeList">A collection with ranges of cells to be copied.</param>
            <param name="bLoadBaseStyles">(currently ignored.) True if information from base styles should also be copied; False if only
            the settings that were initialized for the cells should be copied.</param>
            <param name="dragDropFlags">(currently ignored.) A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> with further options.</param>
            <param name="rowCount">A placeholder where the number of copied rows is returned.</param>
            <param name="colCount">A placeholder where the number of copied columns is returned.</param>
            <returns>True if the operation completed successfully; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelStyleDataExchange.PasteCellsFromDataObject(Syncfusion.Windows.Forms.Grid.GridData,Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean,System.Int32)">
            <summary>
            Initializes a given range of cells in a grid with style objects and covered ranges information from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object.
            </summary>
            <param name="data">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object with cell styles and covered ranges.</param>
            <param name="range">The destination range where cell information should be copied to.</param>
            <param name="bIgnoreDiffRange">True if difference in width and height of <paramref name="range"/> and
            the row and column count of <paramref name="data"/> should be ignored; False if a message box should be displayed.</param>
            <param name="dragDropFlags"><see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> options let you specify if rows or columns can be appended 
            See <see cref="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.NoAppendRows"/> and <see cref="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.NoAppendCols"/>
            of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> class.</param>
            <returns>True if operation was successful; False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer">
            <summary>
            This class provides access to a grid column styles collection with
            an indexer.
            </summary>
            <remarks>
            You typically access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.GetEnumerator">
            <summary>
              <para>Returns an <see cref="T:System.Collections.IEnumerator"/> that can iterate through the column styles in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> instance.</para>
            </summary>
            <returns>
              <para>An <see cref="T:System.Collections.IEnumerator"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> instance.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.CopyTo(Syncfusion.Windows.Forms.Grid.GridStyleInfo[],System.Int32)">
            <summary>
              <para>Copies the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> elements to a one-dimensional <see cref="T:System.Array"/> at the specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the <see cref="T:System.Collections.DictionaryEntry"/> objects copied from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> instance. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.Item(System.Int32)">
            <overload>
            Gives you access to the column style information of a column.
            </overload>
            <summary>
            Gives you access to the column style information of a column.
            </summary>
            <remarks>
            The indexer provides you with a very simple way to query and change column style contents.
            </remarks>
            <example>
            The following example make some changes to the grid using the indexer:
            <code lang="C#">
                        model.ColStyles[2].Font.Bold = true;
                        model.ColStyles[2].Font.Size = 16;
                        model.ColStyles[2].HorizontalAlignment = GridHorizontalAlignment.Center;
                        model.ColStyles[2].VerticalAlignment = GridVerticalAlignment.Middle;
                        model.ColStyles[2].CellType = "Static";
                        model.ColStyles[2].Borders.All = new GridBorder(GridBorderStyle.Solid, Color.FromArgb(100, 238, 122, 3));
                        model.ColStyles[2].Interior = new BrushInfo(GradientStyle.PathEllipse, Color.FromArgb(100, 57, 73, 122), Color.FromArgb(237, 240, 247));
            </code>
            If you query for specific attributes in a cell and these attributes have not been explicitly set,
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that is return by the indexer is smart enough to query base styles for
            queried information.
            <code lang="C#">
                        model.ColStyles[1].TextColor = Color.FromArgb(0, 21, 84);
                            Color color = model[1, 1].TextColor;
                            // model[1, 1].TextColor will return Color.FromArgb(0, 21, 84));
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.Item(System.String)">
            <summary>
            Gives you access to the column style information of a column.
            </summary>
            <genoverload/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.Count">
            <summary>
              <para>Gets the number of columns in the grid <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColCount"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.IsSynchronized">
            <summary>
            Gets a value indicating whether Is Synchronized. Always false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer.SyncRoot">
            <summary>
            Gets a reference to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/> property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer">
            <summary>
            This class provides access to a grid row styles collection with
            an indexer.
            </summary>
            <remarks>
            You typically access this class from a grid with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.GetEnumerator">
            <summary>
              <para>Returns an <see cref="T:System.Collections.IEnumerator"/> that can iterate through the column styles in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> instance.</para>
            </summary>
            <returns>
              <para>An <see cref="T:System.Collections.IEnumerator"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> instance.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.CopyTo(Syncfusion.Windows.Forms.Grid.GridStyleInfo[],System.Int32)">
            <summary>
              <para>Copies the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> elements to a one-dimensional <see cref="T:System.Array"/> at the specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the <see cref="T:System.Collections.DictionaryEntry"/> objects copied from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelColStylesIndexer"/> instance. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.Item(System.Int32)">
            <overload>
            Gives you access to the row style information of a row.
            </overload>
            <summary>
            Gives you access to the row style information of a row.
            </summary>
            <remarks>
            The indexer provides you with a very simple way to query and change row style contents.
            </remarks>
            <example>
            The following example make some changes to the grid using the indexer:
            <code lang="C#">
                        model.RowStyles[2].Font.Bold = true;
                        model.RowStyles[2].Font.Size = 16;
                        model.RowStyles[2].HorizontalAlignment = GridHorizontalAlignment.Center;
                        model.RowStyles[2].VerticalAlignment = GridVerticalAlignment.Middle;
                        model.RowStyles[2].CellType = "Static";
                        model.RowStyles[2].Borders.All = new GridBorder(GridBorderStyle.Solid, Color.FromArgb(100, 238, 122, 3));
                        model.RowStyles[2].Interior = new BrushInfo(GradientStyle.PathEllipse, Color.FromArgb(100, 57, 73, 122), Color.FromArgb(237, 240, 247));
            </code>
            If you query for specific attributes in a cell and these attributes have not been explicitly set for the cell,
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that is returned by the indexer is smart enough to query base styles for
            queried information.
            <code lang="C#">
                        model.RowStyles[1].TextColor = Color.FromArgb(0, 21, 84);
                            Color color = model[1, 1].TextColor;
                            // model[1, 1].TextColor will return Color.FromArgb(0, 21, 84));
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.Item(System.String)">
            <summary>
            Gives you access to the row style information of a row.
            </summary>
            <genoverload/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.Count">
            <summary>
              <para>Gets the number of rows in the grid <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowCount"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.IsSynchronized">
            <summary>
            Gets a value indicating whether Is Synchronized. Always false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelRowStylesIndexer.SyncRoot">
            <summary>
            Gets a reference to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/> property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange">
            <summary>
            Manages text data exchange for the grid. Lets you copy cell text to a stream or clipboard and recreate the
            cell text at a later time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelStyleDataExchange"/> object and associates it 
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">A reference to the parent <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.CopyTextToBuffer(System.String@,Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Int32@,System.Int32@)">
            <summary>
            Creates a  <see cref="T:System.String"/> object and initializes it with style objects and covered cell information of a range of cells in the grid.
            </summary>
            <param name="buffer">A placeholder for the string buffer that is created by the method.</param>
            <param name="rangeList">The list with range of cells to be copied.</param>
            <param name="nRowsDone">A placeholder where the number of copied rows is returned.</param>
            <param name="nColsDone">A placeholder where the number of copied columns is returned.</param>
            <returns>True if the operation completed successfully; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.GetCopyTextRowCol(System.Int32,System.Int32)">
            <summary>
            Gets the formatted text from the specified row and column.
            </summary>
            <param name="rowIndex">The row index</param>
            <param name="colIndex">The colindex</param>
            <returns>returns formatted text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.PasteTextFromBuffer(System.String,Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32)">
            <summary>
            Pastes text from a string buffer with tab-delimited text into a range of cells.
            </summary>
            <param name="psz">The string buffer with tab-delimited cell's text.</param>
            <param name="range">The destination range where text should be pasted.</param>
            <param name="dragDropFlags"><see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> options let you specify if rows or columns can be appended. 
            See <see cref="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.NoAppendRows"/> and <see cref="F:Syncfusion.Windows.Forms.Grid.GridDragDropFlags.NoAppendCols"/>
            of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> class.</param>
            <returns>True if operation completed successfully; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.PasteTextRowCol(System.Int32,System.Int32,System.String)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/> event and calls GridStyleInfo.ApplyFormattedText for
            the specific cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="text">The text to be pasted.</param>
            <returns>True if text could be pasted; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.CreateTableFromCVSBuffer(System.String,System.Int32@,System.Int32@,Syncfusion.ComponentModel.OperationFeedback)">
            <summary>
            Creates an ArrayList of rows where each row is an ArrayList of values that belong to that row 
            from a tab-delimited input string.
            </summary>
            <param name="psz">Tab separated values as string. Newline characters indicate a new row.</param>
            <param name="nRows">The number of rows extracted from the string.</param>
            <param name="nCols">The number of columns extracted from the string</param>
            <param name="op">An OperationFeedback object.</param>
            <returns>The resulting ArrayList with rows and values for each row.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.CalcBufferDimension(System.String,System.Int32@,System.Int32@)">
            <summary>
            Determines the number of rows and columns in a tab-delimited string buffer.
            </summary>
            <param name="psz">The tab-delimited string buffer.</param>
            <param name="nRows">A placeholder where the calculated number of rows is returned.</param>
            <param name="nCols">A placeholder where the calculated number of columns is returned.</param>
            <returns>True if the passed in buffer is a valid tab-delimited text; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.ImportTabDelim">
            <summary>
            Gets or sets the character that is used for separating columns when importing text file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelTextDataExchange.ExportTabDelim">
            <summary>
            Gets or sets that is used for separating columns when exporting text file.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem">
            <summary>
                Used for Xml serialization, this struct contains information relating to shared expensive properties that could be
                the same in various places in the grid. For example, the BackgroundImage for cells, or the grid itself. Instead of 
                having multiple listings of the same expensive object, a <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object will contain the 
                Value of the item (could be a Base64 string) and a Name, which the cells could refer to. 
            </summary>
            <remarks>
                <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredImages"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredFonts"/> are a sample use of this.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem.#ctor(System.String,System.String)">
            <summary>
                Constructs a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> with the provided name and value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem.Name">
            <summary>
                Name of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem.Value">
            <summary>
                The string representation of the objects value that is stored in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object. 
            </summary>
            <remarks>
            <para/>    
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection">
            <summary>
                A collection that stores 'GridNamespaceGroupItem' objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.#ctor">
            <summary>
                Initializes a new instance of 'GridNamespaceGroupItemCollection'.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection)">
            <summary>
                Initializes a new instance of 'GridNamespaceGroupItemCollection' based on an already existing instance.
            </summary>
            <param name='styValue'>
                A 'GridNamespaceGroupItemCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem[])">
            <summary>
                Initializes a new instance of 'GridNamespaceGroupItemCollection' with an array of 'GridNamespaceGroupItem' objects.
            </summary>
            <param name='styValue'>
                An array of 'GridNamespaceGroupItem' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.Add(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem)">
            <summary>
                Adds a 'GridNamespaceGroupItem' item with the specified value to the 'GridNamespaceGroupItemCollection'
            </summary>
            <param name='styValue'>
                The 'GridNamespaceGroupItem' to add.
            </param>
            <returns>
                The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.Add(System.String)">
            <summary>
                Adds the base64 string value to the collection, returning the Name for the item. If the base64 string
                already exists, the current Name for the item is returned.
            </summary>
            <param name="base64Str" type="string">
                <para>
                    The base64 string to add
                </para>
            </param>
            <returns>
                The Name of the GridNamespaceGroupItem which contains this value
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'GridNamespaceGroupItemCollection'.
            </summary>
            <param name='styValue'>
                An array of 'GridNamespaceGroupItem' objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection)">
            <summary>
                Adds the contents of another 'GridNamespaceGroupItemCollection' at the end of this instance.
            </summary>
            <param name='styValue'>
                A 'GridNamespaceGroupItemCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.Contains(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem)">
            <summary>
                Gets a value indicating whether the 'GridNamespaceGroupItemCollection' contains the specified value.
            </summary>
            <param name='styValue'>
                The item to locate.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.ContainsValue(System.String)">
            <summary>
                Gets a value indicating whether the 'GridNamespaceGroupItemCollection' contains a <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object
                with the specified value.
            </summary>
            <param name="val">
                The value to find in the collection.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem[],System.Int32)">
            <summary>
                Copies the 'GridNamespaceGroupItemCollection' values to a one-dimensional System.Array
                instance starting at the specified array index.
            </summary>
            <param name='styArray'>
                The one-dimensional System.Array that represents the copy destination.
            </param>
            <param name='intIndex'>
                The index in the array where copying begins.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem)">
            <summary>
                Returns the index of a 'GridNamespaceGroupItem' object in the collection.
            </summary>
            <param name='styValue'>
                The 'GridNamespaceGroupItem' object whose index will be retrieved.
            </param>
            <returns>
                If found, the index of the value; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GetValueForName(System.String)">
            <summary>
                Retrieves the value of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object that has the supplied name.
            </summary>
            <param name="name" type="string">
                <para>
                    The name of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object.
                </para>
            </param>
            <returns>Current object's value for the given name.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GetNameForValue(System.String)">
            <summary>
                Retrieves the name of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object that has the supplied value.
            </summary>
            <param name="val" type="string">
                <para>
                    The value of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem"/> object in question.
                </para>
            </param>
            <returns>Current object's name for the specified value. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem)">
            <summary>
                Inserts an existing 'GridNamespaceGroupItem' into the collection at the specified index.
            </summary>
            <param name='intIndex'>
                The zero-based index where the new item should be inserted.
            </param>
            <param name='styValue'>
                The item to insert.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GetEnumerator">
            <summary>
                Returns an enumerator that can be used to iterate through
                the 'GridNamespaceGroupItemCollection'.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.Remove(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItem)">
            <summary>
                Removes a specific item from the 'GridNamespaceGroupItemCollection'.
            </summary>
            <param name='styValue'>
                The item to remove from the 'GridNamespaceGroupItemCollection'.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before setting an item in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.OnInsert(System.Int32,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before inserting a new item in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.Item(System.Int32)">
            <summary>
                Represents the 'GridNamespaceGroupItem' item at the specified index position.
            </summary>
            <param name='intIndex'>
                The zero-based index of the entry to locate in the collection.
            </param>
            <value>
                The entry at the specified index of the collection.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator">
            <summary>
                A strongly typed enumerator for 'GridNamespaceGroupItemCollection'
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection)">
            <summary>
                Enumerator constructor
            </summary>
            <param name="styMappings">A collection of GridNamespaceGroupItem objects.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator.MoveNext">
            <summary>
                Advances the enumerator to the next element of the collection
            </summary>
            <returns>True if next element exists.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator.Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator.Current">
            <summary>
                Gets the current element from the collection (strongly typed)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNamespaceGroupItemCollection.GridNamespaceGroupItemEnumerator.System#Collections#IEnumerator#Current">
            <summary>
                Gets the current element from the collection
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellsInRowCache">
            <summary>
            Defines the cache to save the style information for grid cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellsInRowCache.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowsCache">
            <summary>
            Defines the cache to save the style information for grid rows.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowsCache.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridVisibleCellLists">
            <summary>
            Defines the interface to maintain volatile data.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridVisibleCellLists.SetVisibleRowsList(System.Object,System.Collections.IDictionary)">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridVisibleCellLists.SetVisibleColumnsList(System.Object,System.Collections.IDictionary)">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNewVolatileData">
            <summary>
            GridVolatileData provides GridStyleInfo objects on demand that are returned by the 
            grid model's indexer. GridVolatileData caches the objects and their identity information 
            holding a weak reference to them.
            </summary>
            <remarks>
            GridModel holds a GridData object. This object contains the plain data with style settings 
            specific to a cell. When GridVolatileData creates a style object, it asks the grid to 
            return the cell settings from GridData and then associate these settings with identity
            information. This allows access to style properties using inheritance from base styles. 
            Identity information also ensures that changes to the style object will be written back 
            correctly to GridData.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridVolatileData">
            <summary>
            Defines the interface for a volatile data cache to be used with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.VolatileData"/>
            property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridData">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/> defines an interface that <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/>
            utilizes to query cell contents, base styles, look up cell types, and save changes back to the
            grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridData.GetBaseStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Int32,System.Int32)">
            <summary>
            Gets an array that consists of table, row, and column base styles for the specified row and column index.
            </summary>       
            <returns>returns GridStyleInfo array</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridData.LookupCellModel(System.String)">
            <summary>
            Looks up a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for a given cell type as specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>.
            </summary>
            <returns>returns GridCellModelBase</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridData.Item(System.Int32,System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> at a given row and column index. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridData.BaseStylesMap">
            <summary>
            Gets access to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> that is stored with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridVolatileData.Clear">
            <summary>
            Empty the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridVolatileData.ResetRowCount">
            <summary>
            Clears cached value for row count.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridVolatileData.ResetColCount">
            <summary>
            Clears cached value for column count.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridVolatileData.ResetItem(Syncfusion.Windows.Forms.Grid.GridCellPos)">
            <summary>
            Resets cache for a specific cell.
            </summary>
            <param name="cell">The cell coordinates.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridVolatileData.RowCount">
            <summary>
            Gets or sets a cached value for row count.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridVolatileData.HasRowCount">
            <summary>
            Gets a value indicating whether a value for row count has been cached.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridVolatileData.ColCount">
            <summary>
            Gets or sets a cached value for column count.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridVolatileData.HasColCount">
            <summary>
            Gets a value indicating whether a value for column count has been cached.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.SetVisibleRowsList(System.Object,System.Collections.IDictionary)">
            <summary>
            Saves row style information.
            </summary>
            <param name="view">Row identity information.</param>
            <param name="list">The row style settings to be saved.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.SetVisibleColumnsList(System.Object,System.Collections.IDictionary)">
            <summary>
            Saves column style information.
            </summary>
            <param name="view">Column identity information.</param>
            <param name="list">The column style settings to be saved.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Attaches the object to the GridModel.
            </summary>
            <param name="grid">The parent grid model that will access style information through this object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.Dispose">
            <summary>
            Disposes the object and collection items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.LookupCellModel(System.String)">
            <summary>
            Looks up a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for a given cell type as specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>.
            </summary>
            <param name="id">Cell type name.</param>
            <returns>Cell model.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.ResetRowCount">
            <summary>
            Clears cached value for row count.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.ResetColCount">
            <summary>
            Clears cached value for column count.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.GetItem(Syncfusion.Windows.Forms.Grid.GridCellPos)">
            <summary>
            Gets the cached style information for a specific cell.
            </summary>
            <param name="cell">The cell coordinate.</param>
            <returns>The cached GridStyleInfo; NULL if no cache entry was found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.SetItem(Syncfusion.Windows.Forms.Grid.GridCellPos,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Saves style information to be cached.
            </summary>
            <param name="cell">The cell coordinate.</param>
            <param name="style">The GridStyleInfo to be cached.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.ResetItem(Syncfusion.Windows.Forms.Grid.GridCellPos)">
            <summary>
            Resets cache for a specific cell.
            </summary>
            <param name="cell">The cell coordinates.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.Clear(Syncfusion.Windows.Forms.Grid.GridCellPos)">
            <summary>
            Resets cache for a specific cell.
            </summary>
            <param name="cell">The cell coordinates.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.Clear">
            <summary>
            Empty the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.GetBaseStylesMapStyles(System.String,System.Int32@)">
            <summary>
            Gets an array that consists of table, row, and column base styles for the specified row and column index.
            </summary>
            <param name="name">Name of the base style.</param>
            <param name="level">The maximum number of levels to look at when walking referenced base styles. </param>
            <returns>An array of table, row and column base styles.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.GetBaseStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Int32,System.Int32)">
            <summary>
            Gets an array that consists of table, row, and column base styles for the specified row and column index.
            </summary>
            <param name="thisStyleInfo">Cell style information.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <returns>An array of table, row and column base styles.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.BaseStylesMap">
            <summary>
            Gets the base styles map.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.Grid">
            <summary>
            Gets a reference to the parent grid model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.RowCount">
            <summary>
            Gets or sets a cached value for row count.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.HasRowCount">
            <summary>
            Gets a value indicating whether a value for row count has been cached.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.ColCount">
            <summary>
            Gets or sets a cached value for column count.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.HasColCount">
            <summary>
            Gets a value indicating whether a value for column count has been cached.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.Item(System.Int32,System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> at a given row and column index. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.RowStyles">
            <summary>
            Gets cached row styles within GridVolatileData.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.ColStyles">
            <summary>
            Gets cached column styles within GridVolatileData
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.TableStyle">
            <summary>
            Gets or sets access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> for the table style. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.RowStylesIndexer">
            <summary>
            Cached row styles within GridVolatileData.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.RowStylesIndexer.Item(System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> at a given row index. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.ColStylesIndexer">
            <summary>
            Cached column styles within GridVolatileData.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNewVolatileData.ColStylesIndexer.Item(System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> at a given column index. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridProperties">
            <summary>
            GridProperties holds various options that let you customize the appearance of the grid,
            such as window background, grid line colors, printer / page settings, and more.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProperties"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridProperties"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.#ctor">
            <summary>
            Initializes a new GridProperties object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProperties.Modified"/> flag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.ResetGridLineColor">
            <summary>
            Resets GridLineColor to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.ResetFixedLinesColor">
            <summary>
            Resets FixedLinesColor to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.ResetResizingCellsLinesColor">
            <summary>
            Resets ResizingCellsLinesColor to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.ResetBackgroundColor">
            <summary>
            Resets BackgroundColor to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.Clone">
            <summary>
                Creates a deep copy of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridProperties"/> object
            </summary>
            <returns>A duplicate of the current object.</returns>
            <remarks>
                This will copy the values of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridProperties"/> object, ignoring the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> references.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProperties.CopyPropertiesFrom(Syncfusion.Windows.Forms.Grid.GridProperties)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.Modified">
            <summary>
            Gets a value indicating whether the dictionary was modified.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridProperties.Changed">
            <summary>
            Occurs when any property in this object is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.Buttons3D">
            <summary>
            Gets or sets a value indicating whether row and column headers should appear raised or flat.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.DisplayVertLines">
            <summary>
            Gets or sets a value indicating whether vertical lines should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.DisplayHorzLines">
            <summary>
            Gets or sets a value indicating whether horizontal lines should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.MarkRowHeader">
            <summary>
            Gets or sets a value indicating whether the row header for the current cell should be highlighted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.MarkColHeader">
            <summary>
            Gets or sets a value indicating whether the column header for the current cell should be highlighted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.PrintRowHeader">
            <summary>
            Gets or sets a value indicating whether row headers should be printed when printing the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.PrintColHeader">
            <summary>
            Gets or sets a value indicating whether column headers should be printed when printing the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.Printing">
            <summary>
            Gets or sets a value indicating whether switch to printing mode for the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.CenterHorizontal">
            <summary>
            Gets or sets a value indicating whether the grid should be centered horizontally on the page when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.CenterVertical">
            <summary>
            Gets or sets a value indicating whether the grid should be centered vertically on the page when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.ColHeaders">
            <summary>
            Gets or sets a value indicating whether the grid should be display column headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.PrintHorzLines">
            <summary>
            Gets or sets a value indicating whether the grid should draw horizontal lines when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.RowHeaders">
            <summary>
            Gets or sets a value indicating whether row headers should be displayed or hidden. (Might be better to use HideCols[0] = false) instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.PrintVertLines">
            <summary>
            Gets or sets a value indicating whether the grid should draw vertical lines when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.PageOrder">
            <summary>
            Gets or sets the page order how the grid should be printed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.BlackWhite">
            <summary>
            Gets or sets a value indicating whether the grid should print only in black and white.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.PrintFrame">
            <summary>
            Gets or sets a value indicating whether a frame should be drawn around the grid when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.GridLineColor">
            <summary>
            Gets or sets the color of grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.GridLineColorString">
            <summary>
              Gets or sets GridLine Color String. Internal only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.FixedLinesColor">
            <summary>
            Gets or sets the color of frozen grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.FixedLinesColorString">
            <summary>
             Gets or sets Fixed Lines ColorString. Internal only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.ResizingCellsLinesColor">
            <summary>
            Gets or sets the color of the grid line marker when the user is resizing rows or columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.ResizingCellsLinesColorString">
            <summary>
             Gets or sets ResizingCells Lines ColorString. Internal only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.BackgroundColor">
            <summary>
            Gets or sets the color of the area below the last row and right of the last column inside the grid window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.AllowHiddenCellFloating">
            <summary>
            Gets / sets the values to enable floating over hidden cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProperties.BackgroundColorString">
            <summary>
             Gets or sets Background ColorString. Internal only.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEditor">
            <summary>
            Provides a collection editor that is tailored to adding and removing <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/> objects
            from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.RangeStyles"/> collection in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/>.
            </summary>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEditor"/> object.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm"/> to provide as the user interface for editing the collection.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/> objects. This collection is a wrapper collection
            for cells in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object. It provides support for modifying
            cells through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.ToString">
            <override/>
            <summary>Returns a string holding the current object.</summary>
            <returns>String representation of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.#ctor">
            <overload>
            Initializes a new empty collection.
            </overload>
            <summary>
            Initializes a new empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridRangeStyle[])">
            <summary>
            Adds multiple elements at the end of the collection.
            </summary>
            <param name="cellStyles">The Array with elements that should be added to the end of the collection. 
            The array and its elements cannot be NULL references (Nothing in Visual Basic). 
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.OnChanging(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Changing"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.OnChanged(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Changed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.InternalEquals(Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection)">
            <summary>
            Compares each element with the elements of another collection.
            </summary>
            <param name="other">The collection to compare to.</param>
            <returns>True if all elements are equal and in the same order; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Contains(Syncfusion.Windows.Forms.Grid.GridRangeStyle)">
            <summary>
            Determines if the element belongs to this collection.
            </summary>
            <param name="value">The Object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridRangeStyle)">
            <summary>
            Returns the zero-based index of the occurrence of the element in the collection.
            </summary>
            <param name="value">The element to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the element within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridRangeStyle[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ArrayList. The Array must have zero-based indexing. </param>
            <param name="index">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An IEnumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeStyle)">
            <summary>
            Inserts a descriptor element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the element should be inserted.</param>
            <param name="value">The element to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Remove(Syncfusion.Windows.Forms.Grid.GridRangeStyle)">
            <summary>
            Removes the specified descriptor element from the collection.
            </summary>
            <param name="value">The element to remove from the collection. If the value is NULL or the element is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Add(Syncfusion.Windows.Forms.Grid.GridRangeStyle)">
            <summary>
            Adds an object to the end of the collection.
            </summary>
            <param name="value">The element to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Dispose">
            <summary>
            Disposes the object and collection items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Changing">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Changed">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.AllowCombineCells">
            <exclude/>
            <summary>Gets or sets a value indicating whether to Allow Combine Cells. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.IsModified">
            <summary>
            Gets or sets a value indicating whether the collection is modified from its default state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Item(System.Int32)">
            <summary>
            Gets / sets the elements at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.SyncRoot">
            <summary>
            Gets SyncRoot. Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether collection has no fixed size. Normally False since this collection has no fixed size. Only when it is Read-only 
            IsFixedSize returns True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether Is Synchronized. Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection.Count">
            <summary>
            Gets the number of elements contained in the collection. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEnumerator">
            <summary>
            Enumerator class for <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/> elements of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection)">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollectionEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle">
            <summary>
            RangeStyles are managed by the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyle.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyle.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/>.
            </summary>
            <param name="rowIndex">The Row index.</param>
            <param name="colIndex">The Column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyle.#ctor(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/>.
            </summary>
            <param name="rowIndex">The Row Index.</param>
            <param name="colIndex">The Column Index.</param>
            <param name="styleStore">Style store.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/>.
            </summary>
            <param name="top">Top row index.</param>
            <param name="left">Left column index.</param>
            <param name="bottom">Bottom row index.</param>
            <param name="right">Right column index.</param>
            <param name="styleStore">Style store.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyle.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/>.
            </summary>
            <param name="range">The cell range.</param>
            <param name="styleStore">The style store.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyle.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyle.Dispose">
            <override/>
            <summary>Releases all the resources used by this component.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyle.StyleInfo">
            <summary>
            Gets or sets the cell information that should be applied to the range. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyle.Range">
            <summary>
            Gets or sets the range that the cell information should be applied to. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeStyle.RangeInfo">
            <internalonly/>
            <summary>Gets or sets RangeInfo. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleTypeConverter">
            <summary>
            The type converter for <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/> objects. <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyleTypeConverter"/> 
            is a <see cref="T:System.ComponentModel.ExpandableObjectConverter"/>. It overrides the default behavior of the 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/> method and adds support for design-time code serialization.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>       
            <param name="context">Format
            context. </param>
            <param name="destinationType">The
            type you want to convert to. </param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">Format
            context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The object to convert. </param>
            <param name="destinationType">The type to convert the
            value parameter to. </param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeStyleTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <override/>
            <summary>
            A list of properties for the specified object type.
            </summary>
            <param name="context">Graphics context.</param>
            <param name="value">An object that specifies the type.</param>
            <param name="attributes">An array of System.Attribute objects that will be used as a filter.</param>
            <returns>A collection of properties.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/> items with information about row height.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.#ctor">
            <overload>
            Initializes a new empty collection.
            </overload>
            <summary>
            Initializes a new empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridRowHeight[])">
            <summary>
            Adds multiple GridRowHeight items.
            </summary>
            <param name="rowHeights">The Array with elements that should be added to the end of the collection. 
            The array and its elements cannot be NULL references (Nothing in Visual Basic). 
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.OnChanging(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Changing"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.OnChanged(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Changed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.InternalEquals(Syncfusion.Windows.Forms.Grid.GridRowHeightCollection)">
            <summary>
            Compares each element with the element of another collection.
            </summary>
            <param name="other">The collection to compare to.</param>
            <returns>True if all elements are equal and in the same order; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Contains(Syncfusion.Windows.Forms.Grid.GridRowHeight)">
            <summary>
            Determines if the element belongs to this collection.
            </summary>
            <param name="value">The Object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridRowHeight)">
            <summary>
            Returns the zero-based index of the occurrence of the element in the collection.
            </summary>
            <param name="value">The element to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the element within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridRowHeight[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ArrayList. The Array must have zero-based indexing. </param>
            <param name="index">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An IEnumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridRowHeight)">
            <summary>
            Inserts a GridRowHeight element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the element should be inserted.</param>
            <param name="value">The element to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Remove(Syncfusion.Windows.Forms.Grid.GridRowHeight)">
            <summary>
            Removes the specified GridRowHeight element from the collection.
            </summary>
            <param name="value">The GridRowHeight to remove from the collection. If the value is NULL or the element is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Add(Syncfusion.Windows.Forms.Grid.GridRowHeight)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="value">The element to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The new count.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Dispose">
            <summary>
            Disposes the object and collection items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.IsModified">
            <summary>
            Gets or sets a value indicating whether the collection is modified from its default state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Item(System.Int32)">
            <summary>
            Gets / sets the element at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.SyncRoot">
            <summary>
            Gets SyncRoot. Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether this collection is fixed size. Normally False since this collection has no fixed size. Only when it is Read-only 
            IsFixedSize returns True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether Is Synchronized. Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection.Count">
            <summary>
            Gets the number of elements contained in the collection. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHeightCollectionEnumerator">
            <summary>
            Enumerator class for <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/> elements of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollectionEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridRowHeightCollection)">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightCollectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeightCollectionEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHeight">
            <summary>
            RowHeights are managed by the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeightCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeight.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeight.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeight.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/>.
            </summary>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeight.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/>.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="height">Row height.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeight.Height">
            <summary>
            Gets or sets the row height.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHeight.RowIndex">
            <summary>
            Gets or sets the RowIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHeightTypeConverter">
            <summary>
            The type converter for <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/> objects. <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeightTypeConverter"/> 
            is a <see cref="T:System.ComponentModel.ExpandableObjectConverter"/>. It overrides the default behavior of the 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridRowHeightTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/> method and adds support for design-time code serialization.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>       
            <param name="context">Format
            context. </param>
            <param name="destinationType">The
            type you want to convert to. </param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">Format
            context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The object to convert. </param>
            <param name="destinationType">The type to convert the
            value parameter to. </param>        
            <returns>
            An object that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHeightTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <override/>
            <summary>
            A collection of properties for the specified type.
            </summary>
            <param name="context">Format context.</param>
            <param name="value">The object specifying the type.</param>
            <param name="attributes">An array of System.Attribute objects that will be used as a filter.</param>
            <returns>A list of properties.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/> items with information about row hidden state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.#ctor">
            <overload>
            Initializes a new empty collection.
            </overload>
            <summary>
            Initializes a new empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridRowHidden[])">
            <summary>
            Adds multiple GridRowHidden items.
            </summary>
            <param name="rowHiddens">The Array with elements that should be added to the end of the collection. 
            The array and its elements cannot be NULL references (Nothing in Visual Basic). 
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.OnChanging(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Changing"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.OnChanged(Syncfusion.Collections.ListPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Changed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Collections.ListPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.InternalEquals(Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection)">
            <summary>
            Compares each element with the element of another collection.
            </summary>
            <param name="other">The collection to compare to.</param>
            <returns>True if all elements are equal and in the same order; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Contains(Syncfusion.Windows.Forms.Grid.GridRowHidden)">
            <summary>
            Determines if the element belongs to this collection.
            </summary>
            <param name="value">The Object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridRowHidden)">
            <summary>
            Returns the zero-based index of the occurrence of the element in the collection.
            </summary>
            <param name="value">The element to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the element within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridRowHidden[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ArrayList. The Array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An IEnumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridRowHidden)">
            <summary>
            Inserts a GridRowHidden element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the element should be inserted.</param>
            <param name="value">The element to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Remove(Syncfusion.Windows.Forms.Grid.GridRowHidden)">
            <summary>
            Removes the specified GridRowHidden element from the collection.
            </summary>
            <param name="value">The GridRowHidden to remove from the collection. If the value is NULL or the element is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Add(Syncfusion.Windows.Forms.Grid.GridRowHidden)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="value">The element to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The new Count.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Dispose">
            <summary>
            Disposes the object and collection items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.IsModified">
            <summary>
            Gets or sets a value indicating whether the collection is modified from its default state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Item(System.Int32)">
            <summary>
            Gets / sets the element at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.SyncRoot">
            <summary>
            Gets SyncRoot. Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether collection has fixed size. Returns normally False since this collection has no fixed size. Only when it is Read-only 
            IsFixedHide returns True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether is synchronized. Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection.Count">
            <summary>
            Gets the number of elements contained in the collection. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollectionEnumerator">
            <summary>
            Enumerator class for <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/> elements of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollectionEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection)">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollectionEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHidden">
            <summary>
            RowHiddens are managed by the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHiddenCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHidden.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHidden.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHidden.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/>.
            </summary>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowHidden.RowIndex">
            <summary>
            Gets or sets the RowIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowHiddenTypeConverter">
            <summary>
            The type converter for <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/> objects. <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHiddenTypeConverter"/> 
            is a <see cref="T:System.ComponentModel.ExpandableObjectConverter"/>. It overrides the default behavior of the 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/> method and adds support for design-time code serialization.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenTypeConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>
            <param name="context">Format
            context. </param>
            <param name="destinationType">The
            type you want to convert to. </param>       
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowHiddenTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">Format
            context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The value to convert. </param>
            <param name="destinationType">The type to convert the
            value parameter to. </param>        
            <returns>
            An object that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSpanCellPool.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridSpanCellPool"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridVolatileData">
            <summary>
            GridVolatileData provides GridStyleInfo objects on demand that are returned by the 
            grid model's indexer. GridVolatileData caches the objects and their identity information 
            holding a weak reference to them.
            </summary>
            <remarks>
            GridModel holds a GridData object. This object contains the plain data with style settings 
            specific to a cell. When GridVolatileData creates a style object, it asks the grid to 
            return the cell settings from GridData and then associate these settings with identity
            information. This allows access to style properties using inheritance from base styles. 
            Identity information also ensures that changes to the style object will be written back 
            correctly to GridData.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Attaches the object to the GridModel.
            </summary>
            <param name="grid">The parent grid model that will access style information through this object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.Dispose">
            <summary>
            Disposes the object and collection items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.LookupCellModel(System.String)">
            <summary>
            Looks up a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for a given cell type as specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>.
            </summary>
            <param name="id">Cell type name.</param>
            <returns>Cell model.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.Clear">
            <summary>
            Empty the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.ResetRowCount">
            <summary>
            Clears cached value for row count.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.ResetColCount">
            <summary>
            Clears cached value for column count.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.GetItem(Syncfusion.Windows.Forms.Grid.GridCellPos)">
            <summary>
            Gets the cached style information for a specific cell.
            </summary>
            <param name="cell">The cell coordinate.</param>
            <returns>The cached GridStyleInfo; NULL if no cache entry was found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.SetItem(Syncfusion.Windows.Forms.Grid.GridCellPos,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Saves style information to be cached.
            </summary>
            <param name="cell">The cell coordinate.</param>
            <param name="style">The GridStyleInfo to be cached.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.ResetItem(Syncfusion.Windows.Forms.Grid.GridCellPos)">
            <summary>
            Resets cache for a specific cell.
            </summary>
            <param name="cell">The cell coordinates.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.GetBaseStylesMapStyles(System.String,System.Int32@)">
            <summary>
            Gets an array that consists of table, row, and column base styles for the specified row and column index.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="level">The maximum number of levels to look at when walking reference base styles.</param>
            <returns>An array that consists of table, row, and column base styles.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridVolatileData.GetBaseStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Int32,System.Int32)">
            <summary>
            Gets an array that consists of table, row, and column base styles for the specified row and column index.
            </summary>
            <param name="thisStyleInfo">Cell style information.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <returns>An array that consists of table, row, and column base styles.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.BaseStylesMap">
            <summary>
            Gets the base styles map.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.Grid">
            <summary>
            Gets a reference to the parent grid model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.RowCount">
            <summary>
            Gets or sets a cached value for row count.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.HasRowCount">
            <summary>
            Gets a value indicating whether a value for row count has been cached.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.ColCount">
            <summary>
            Gets or sets a cached value for column count.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.HasColCount">
            <summary>
            Gets a value indicating whether a value for column count has been cached.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.Item(System.Int32,System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> at a given row and column index. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.RowStyles">
            <summary>
            Gets the cached row styles within GridVolatileData.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.ColStyles">
            <summary>
            Gets the cached column styles within GridVolatileData
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.TableStyle">
            <summary>
            Gets or sets access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> for the table style. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridVolatileData.RowStylesIndexer">
            <summary>
            Cached row styles within GridVolatileData.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.RowStylesIndexer.Item(System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> at a given row index. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridVolatileData.ColStylesIndexer">
            <summary>
            Cached column styles within GridVolatileData.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridVolatileData.ColStylesIndexer.Item(System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> at a given column index. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMouseController">
            <summary>
            A base class for MouseControllers in the grid that implements the IMouseController interface
            to be used with MouseControllerDispatcher.
            </summary>
            <remarks>
            Any Mouse Controller needs to implement the IMouseController interface.<para/>
            In its implementation of MouseController.HitTest, the mouse controller should determine whether your
            controller wants to handle the mouse events based current context.<para/>
            See MouseControllerDispatcher for further discussion.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMouseController"/> and attaches it to a grid.
            </summary>
            <param name="grid">The grid control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.MouseHoverEnter">
            <summary>
            MouseHoverEnter is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHoverEnter
            is called before the first time MouseHover is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.MouseHover(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseHover is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHover
            is called after MouseHoverEnter.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.MouseHoverLeave(System.EventArgs)">
            <summary>
            MouseHoverLeave is called when hovering ends either because user dragged mouse out of the hit-test area or
            when context changes (e.g. user pressed the mouse button).
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.CancelMode">
            <summary>
            CancelMode is called for the active controller after a MouseDown message when the mouse operation is cancelled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <remarks>
            The current winner of the vote is specified through the controller paramter. Your implementation of HitTest
            can decide if it wants to override the existing vote or leave it.
            </remarks>
            <param name="mouseEventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data..</param>
            <param name="controller">A <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> that has indicated to handle the mouse event.</param>
            <returns>A non-zero value if the button can and wants to handle the mouse event; 0 if the
            mouse event is unrelated for this button.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMouseController.GetAllowFixFocus">
            <summary>
            Override this method in your <see cref="T:Syncfusion.Windows.Forms.Grid.GridMouseController"/> and return False if it would interfere with your 
            controller's state when the current cell would be focused and possibly scrolled into view.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> (True by default) that indicates if the grid is allowed to set the focus onto the current cells <see cref="T:System.Windows.Forms.Control"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMouseController.Name">
            <summary>
            Gets the name of this mouse controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMouseController.Cursor">
            <summary>
            Gets the cursor to be displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizingCellsMode.None">
            <summary>
            Represents None
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizingCellsMode.ResizeRow">
            <summary>
            Represents Resize Row
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridResizingCellsMode.ResizeColumn">
            <summary>
            Represents Resize Column
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController">
            <summary>
            Implements the dragging of selected rows or columns in a grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.GetAllowFixFocus">
            <override/>
            <summary>
            Override this method in your <see cref="T:Syncfusion.Windows.Forms.Grid.GridMouseController"/> and return False if it would interfere with your
            controller's state when the current cell would be focused and possibly scrolled into view.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> (True by default) that indicates if the grid is allowed to set the focus onto the current cells <see cref="T:System.Windows.Forms.Control"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new GridResizeCellsMouseController and attaches it to a grid.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.MouseHoverEnter">
            <override/>
            <summary>
            MouseHoverEnter is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHoverEnter
            is called before the first time MouseHover is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.MouseHover(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseHover is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHover
            is called after MouseHoverEnter.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.MouseHoverLeave(System.EventArgs)">
            <override/>
            <summary>
            MouseHoverLeave is called when hovering ends either because user dragged mouse out of the hit-test area or
            when context changes (e.g. user pressed the mouse button).
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.CancelMode">
            <override/>
            <summary>
            CancelMode is called for the active controller after a MouseDown message when the mouse operation is cancelled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <override/>
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <remarks>
            The current winner of the vote is specified through the controller paramter. Your implementation of HitTest
            can decide if it wants to override the existing vote or leave it.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data..</param>
            <param name="controller">A <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> that has indicated to handle the mouse event.</param>
            <returns>A non-zero value if the button can and wants to handle the mouse event; 0 if the
            mouse event is unrelated for this button.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.Name">
            <override/>
            <summary>
            The name of this mouse controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridResizeCellsMouseController.Cursor">
            <override/>
            <summary>
            The cursor to be displayed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragLineWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragLineWindow.CreateParams">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController">
            <summary>
            Implements the cell selection behavior of a grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new GridSelectCellsMouseController and attaches it to a grid.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.GetAllowFixFocus">
            <override/>
            <summary>
            Override this method in your <see cref="T:Syncfusion.Windows.Forms.Grid.GridMouseController"/> and return False if it would interfere with your
            controller's state when the current cell would be focused and possibly scrolled into view.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> (True by default) that indicates if the grid is allowed to set the focus onto the current cells <see cref="T:System.Windows.Forms.Control"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.GridCurrentCellExternalMove(Syncfusion.Windows.Forms.Grid.GridDirectionType,System.Int32,System.Boolean)">
            <summary>
            Grids the current cell external move.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.ProcessSetCurrentCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridSetCurrentCellOptions)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.MouseHoverEnter">
            <override/>
            <summary>
            MouseHoverEnter is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHoverEnter
            is called before the first time MouseHover is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.MouseHover(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseHover is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHover
            is called after MouseHoverEnter.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.MouseHoverLeave(System.EventArgs)">
            <override/>
            <summary>
            MouseHoverLeave is called when hovering ends either because user dragged mouse out of the hit-test area or
            when context changes (e.g. user pressed the mouse button).
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.CancelMode">
            <override/>
            <summary>
            CancelMode is called for the active controller after a MouseDown message when the mouse operation is cancelled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <override/>
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <remarks>
            The current winner of the vote is specified through the controller paramter. Your implementation of HitTest
            can decide if it wants to override the existing vote or leave it.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data..</param>
            <param name="controller">A <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> that has indicated to handle the mouse event.</param>
            <returns>A non-zero value if the button can and wants to handle the mouse event; 0 if the
            mouse event is unrelated for this button.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.MultiExtendedShouldMoveCurrentCell">
            <internalonly/>
            <summary>Gets or sets a value indicating whether MultiExtended Should Move CurrentCell. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.Name">
            <override/>
            <summary>
            The name of this mouse controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController.Cursor">
            <override/>
            <summary>
            The cursor to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo">
            <summary>
               Defines a range of cells in the grid. Possible range types are: Row(s), Column(s), Cell(s), Table or Empty.
               GridRangeInfo is immutable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty">
            <summary>
              <para>Represents a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with its properties left uninitialized and range type set to GridRangeInfoType.Empty.</para>
            </summary>
            <remarks>
              <para>A range is defined by its coordinates and range type. If uninitialized, the range type is GridRangeInfoType.Empty</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.#ctor">
            <overload>
              <para>Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object.</para>
            </overload>
            <summary>
              <para>Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object.</para>
            </summary>
            <remarks>
              <para>This constructor initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object with empty range type.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object.
            </summary>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.CopyAllMembers(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.FromTlhw(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object with the specified bounds.
            </summary>
            <param name="top">
              The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
              The column index of the upper-left corner of the cell range.
            </param>
            <param name="height">
              Number of rows to span. 
            </param>
            <param name="width">
              Number of columns to span.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Cell(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the specified row and column index.
            </summary>
            <param name="row">
              The row index.
            </param>
            <param name="col">
              The column index.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Cells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object with the specified bounds.
            </summary>
            <param name="top">
              The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
              The column index of the upper-left corner of the cell range.
            </param>
            <param name="bottom">
              The row index of the bottom-right corner of the cell range.
            </param>
            <param name="right">
              The column index of the bottom-right corner of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Row(System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the specified row index.
            </summary>
            <param name="rowIndex">
              The row index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Rows(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the specified rows.
            </summary>
            <param name="top">
              The top row index of the cell range.
            </param>
            <param name="bottom">
              The bottom row index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Col(System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the specified column.
            </summary>
            <param name="colIndex">
              The column index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Cols(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the specified columns.
            </summary>
            <param name="left">
              The left column index of the cell range.
            </param>
            <param name="right">
              The right column index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.EmptyRange">
            <summary>
            Returns <see cref="F:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Empty"/> that is an empty range.
            </summary>
            <returns>An empty range object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Table">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the whole table.
            </summary>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Auto(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the specified row and column.
            </summary>
            <param name="rowIndex">
            The row index. -1 to create a range of columns or whole table.
            </param>
            <param name="colIndex">
            The column index. -1 to create a range of rows or whole table.
            </param>
            <remarks>
            If both row and column index are less than zero, a table will be created.
            If row index is less than zero and column index greater or equal to zero, a column range will be created.
            If row index is greater or equal to zero and column index less than zero, a row range will be created.
            Otherwise a cell range is created.
            </remarks>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Auto(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object for the specified rows and columns.
            </summary>
            <param name="top">
            The row index. -1 to create a range of columns or whole table.
            </param>
            <param name="left">
            The column index. -1 to create a range of rows or whole table.
            </param>
            <param name="bottom">
            Bottom row index. 
            </param>
            <param name="right">
            Right column index. 
            </param>
            <remarks>
            If both row and column index are less than zero, a table will be created.
            If row index is less than zero and column index greater or equal to zero, a column range will be created.
            If row index is greater or equal to zero and column index less than zero, a row range will be created.
            Otherwise a cell range is created.
            </remarks>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.GetFirstCell(System.Int32@,System.Int32@)">
            <summary>
            Enumerate through all cells in range object. 
            </summary>
            <param name="top">
            The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
            The column index of the upper-left corner of the cell range.
            </param>
            <returns>This method returns the first cell in the range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.GetNextCell(System.Int32@,System.Int32@)">
            <overload>
            This method returns the adjacent cell in the range for the given row and column index.
            </overload>
            <summary>
            This method returns the adjacent cell in the range for the given row and column index.
            </summary>
            <param name="nRow">
              The row index.
            </param>
            <param name="nCol">
              The column index.
            </param>
            <returns>
            <see langword="true"/> if an adjacent cell in this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object coud be found; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.GetNextCell(System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            This method returns the adjacent cell in the range for the given row and column index.
            </summary>
            <param name="nRow">
              The row index.
            </param>
            <param name="nCol">
              The column index.
            </param>
            <param name="bSortByRow">
            <see langword="true"/> if the range should be traversed by row; <see langword="false"/> if the range should be traversed by column.
            </param>
            <returns>
            <see langword="true"/> if an adjacent cell in this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object could be found; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.ExpandRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert column and row ranges into cell ranges with the specified bounds.
            (Could also be done through IntersectRange ... if nFirstRow &gt;= nFirstCol &gt;= 0). 
            </summary>
            /<remarks>
            Column ranges will be converted to cell ranges using nFirstRow and nRowCount. 
            Row ranges will be converted to cell ranges using nFirstCol and nColCount. 
            Column ranges will be converted to cell ranges using all input parameters. 
            </remarks>
            <param name="nFirstRow">Row index for the first non-label cell in grid area.</param>
            <param name="nFirstCol">Column index for the first non-label cell in grid area.</param>
            <param name="nRowCount">Last row in the grid.</param>
            <param name="nColCount">Last column in the grid</param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.OffsetRange(System.Int32,System.Int32)">
            <summary>
            Adjusts the location of this range by the specified amount.
            </summary>
            <param name="rowOffset">Amount of rows to offset the location.</param>
            <param name="colOffset">Amount of columns to offset the location.</param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IntersectsWith(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
              <para>Determines if this range intersects with <paramref name="range"/>.</para>
            </summary>
            <param name="range">
              The range to test.
            </param>
            <example>
              <para>The following example creates two cell ranges and tests whether they intersect:</para>
              <code lang="C#">
              GridRangeInfo firstRange = new GridRangeInfo(1, 1, 100, 100);
              ...
              </code>
            </example>
            <returns>
              <para><see langword="true"/> if there is any intersection.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Contains(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            <para>Determines if this range fully contains all of <paramref name="range"/>.</para>
            </summary>
            <param name="range">
              The range to test.
            </param>
            <returns>
              <para><see langword="true"/> if range is a subset of this range.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IntersectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
              <para>Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the intersection of itself and the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </summary>
            <overload>
              <para>Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the intersection of itself and the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </overload>
            <param name="range">
              The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with which to intersect.
            </param>
            <example>
              <para>The following example creates two <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> objects and creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with their intersection:</para>
              <code lang="C#">GridRangeInfo firstRange = new GridRangeInfo(0, 0, 100, 100);
              </code>
            </example>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IntersectRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
              <para>Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with the intersection of two <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> parameters.</para>
            </summary>
            <param name="r1">
              The first <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with which to intersect.
            </param>
            <param name="r2">
              The second <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with which to intersect.
            </param>
            <example>
              <para>The following example creates two <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> objects and creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with their intersection:</para>
              <code lang="C#">GridRangeInfo firstRange = new GridRangeInfo(0, 0, 100, 100);
              </code>
            </example>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.UnionRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <overload>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that represents the union of itself and another range.
            </overload>
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that represents the union of itself and another range.
            </summary>
            <param name="range">
            A range to union.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.UnionRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that represents the union of two ranges.
            </summary>
            <param name="r1">
            A range to union.
            </param>
            <param name="r2">
            A range to union with previous range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Equals(System.Object)">
            <override/>
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />. </param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.GetHashCode">
            <override/>
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.op_Equality(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <override/>
            <summary>Determines whether the given GridRangeInfo objects are equivalent.</summary>
            <param name="r1">First GridRangeInfo object to compare.</param>
            <param name="r2">Second GridRangeInfo object to compare.</param>
            <returns>True if they are equivalent; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.op_Inequality(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <override/>
            <summary>
            Determines whether the specified GridRangeInfo objects are not equivalent.
            </summary>
            <param name="r1">First GridRangeInfo object to compare.</param>
            <param name="r2">Second GridRangeInfo object to compare.</param>
            <returns>True if they are not equivalent; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Compare(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary cref="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Equals(System.Object)">
                   Compares two range objects and returns if they are both equal. 
            </summary>
            <param name="r1">The left-hand side of the operator.</param>
            <param name="r2">The right-hand side of the operator.</param>
            <returns>
            reutrns bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.GetAlphaLabel(System.Int32)">
            <summary>
            Returns a string in the format "A, B, C, ... AA, AB ..." to be used for column labels.
            </summary>
            <param name="nCol">The column index.</param>
            <returns>
              <para>A string that contains the column label for the column index.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.GetNumericLabel(System.Int32)">
            <summary>
            Returns a numeric string in the format to be used for row labels.
            </summary>
            <param name="nRow">The row index.</param>
            <returns>
              <para>A string that contains the row label for the row index.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.ToString">
            <overload>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a human-readable string.</para>
            </overload>
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <remarks>
            The generate string will be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            </remarks>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.ToString(System.IFormatProvider)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.ToString(System.String)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="format">The parameter ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.ToString(System.String,System.IFormatProvider)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="format">The parameter ignored.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>        
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Parse(System.String)">
            <summary>
            Creates a range object from a string.
            </summary>
            <param name="parseText">The text with text representation of the range.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> with coordinates specified in the string.</returns>
            <remarks>
            The method parses a string that was previously created with <see cref="M:Syncfusion.Windows.Forms.Grid.GridRangeInfo.ToString"/>.
            <para/>
            The string should be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.RangeType">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoType"/> of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IsTable">
            <summary>
             Gets a value indicating whether <para><see langword="true"/> if this represents a table.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IsRows">
            <summary>
            Gets a value indicating whether <para><see langword="true"/> if this represents a range of rows.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IsCols">
            <summary>
            Gets a value indicating whether <para><see langword="true"/> if this represents a range of columns.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IsCells">
            <summary>
            Gets a value indicating whether <para><see langword="true"/> if this represents a range of individual cells.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Top">
            <summary>
             Gets the row index of the upper-left corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Left">
            <summary>
             Gets the column index of the upper-left corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Bottom">
            <summary>
             Gets the row index of the bottom-right corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Right">
            <summary>
            Gets the column index of the bottom-right corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.IsEmpty">
            <summary>
            <para>Gets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> has a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoType"/> of Empty.</para>
            </summary>
            <value>
            <para><see langword="true"/> if <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoType"/> is Empty; otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Width">
            <summary>
              <para>Gets the width of the range defined by this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Height">
            <summary>
              <para>Gets the height of the range defined by this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.Info">
            <summary>
            Gets results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter">
            <summary>
                 GridRangeInfoConverter is a class that can be used to convert
                 ranges from one data type to another. Access this
                 class through the TypeDescriptor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert an object of the given type to the
            type of this converter, using the specified context.
            </summary>       
            <param name="context">Format
            context. </param>
            <param name="sourceType">The type
            you want to convert from. </param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <override/>
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>        
            <param name="context">Format
            context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The object to convert. </param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>        
            <param name="context">Format
            context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The object to convert. </param>   
            <param name="destinationType">The type to convert the
            value parameter to. </param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <override/>
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"/> is associated with, using the
            specified context, given a set of property values for the object.
            </summary>
            <param name="context">Format
            context. </param>
            <param name="propertyValues">A collection
            of new property values. </param>
            <returns>
            An <see cref="T:System.Object"/> representing the given <see cref="T:System.Collections.IDictionary"/>, or null if the object cannot be
            created. This method always returns null.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value, using the specified context.
            </summary>
            <param name="context">Format
            context. </param>
            <returns>
            returns true.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <override/>
            <summary>
            Returns a collection of properties for the specified object type.
            </summary>
            <param name="context">Format context.</param>
            <param name="value">The object that represents the type.</param>
            <param name="attributes">An array of System.Attibute objects that will be used as a filter.</param>
            <returns>A list of properties.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">Format
            context. </param>
            <returns>
            returns true.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoCodeDomSerializer">
            <summary>
                 GridRangeInfoCodeDomSerializer serializes a GridRangeInfo object
                 into a series of CodeDOM statements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoCodeDomSerializer.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <override/>
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
            <param name="manager">A serialization manager interface that is used during the
            deserialization process. </param>
            <param name="codeObject">A serialized CodeDOM object to deserialize. </param>
            <returns>
            The deserialized CodeDOM object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <override/>
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
            <param name="manager">The serialization manager to use during serialization.
            </param>
            <param name="value">The object to serialize. </param>
            <returns>
            A CodeDOM object representing the object that has been serialized.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfoCodeDomSerializer.Default">
            <internalonly/>
            <summary>Gets default. Internal only.</summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoListEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoListEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoListEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoDropDownUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoDropDownUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoDropDownUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Empty">
            <summary>
            An empty and Read-only list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.AddRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo[])">
            <summary>
            Adds <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> elements from an array to the range list.
            </summary>
            <param name="value">An array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> objects.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Add(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            <para>Adds <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to the end of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to be added to the list.</param>
            <returns>The index of the new element.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Inserts a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> at a specified position.
            </summary>
            <param name="index">The index where the value should be inserted.</param>
            <param name="value">The value to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.IndexOf(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Returns the position of a specific range in the list that equals a specified range.
            </summary>
            <param name="value">The range to be searched for.</param>
            <returns>The position of the range; - 1 if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Contains(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Checks if the range list contains a range object that equals the specified range.
            </summary>
            <param name="value">The range to be searched for.</param>
            <returns>True if range was found; False if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Remove(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Removes a specific range from the range list.
            </summary>
            <param name="value">The range to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.CopyTo(Syncfusion.Windows.Forms.Grid.GridRangeInfo[],System.Int32)">
            <overload>
            Copies all range objects into an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> starting at specified index.
            </overload>
            <summary>
            Copies all range objects into an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> starting at specified index.
            </summary>
            <param name="array">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all range objects into an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> starting at specified index.
            </summary>
            <param name="array">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.CopyTo(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Int32)">
            <summary>
            Copies all range objects into a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> starting at specified index.
            </summary>
            <param name="rl">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination list.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Clone">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with duplicated <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> objects.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.RemoveEmptyRanges">
            <summary>
            Removes any empty ranges from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.GetRangesContaining(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> that contain a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.GetRangesIntersecting(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> that intersect with a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.GetRangesContained(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> that are contained in a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.GetOuterRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that spans over all ranges that intersect with a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that contains the original <paramref name="range"/> and
            the outer bounds of all ranges that intersect with <paramref name="range"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.AnyRangeContains(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Determines if a range in the range list contains the specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>True if any range contains the specified range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.AnyRangeIntersects(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Determines if a range in the range list intersects with the specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>True if any range contains the specified range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.InsertRows(System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows have been inserted in the grid.
            </summary>
            <param name="row">The row index where rows have been inserted.</param>
            <param name="count">The number of rows that were inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.InsertCols(System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns have been inserted in the grid.
            </summary>
            <param name="col">The column index where columns have been inserted.</param>
            <param name="count">The number of columns that were inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.RemoveRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows were removed from the grid.
            </summary>
            <param name="from">The first row index.</param>
            <param name="last">The last row index.</param>
            <param name="maxrow">The new row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.RemoveCols(System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns were removed from the grid.
            </summary>
            <param name="from">The first column index.</param>
            <param name="last">The last column index.</param>
            <param name="maxcol">The new column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.MoveRows(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows were moved in the grid.
            </summary>
            <param name="nFromRow">The first row index.</param>
            <param name="nToRow">The last row index.</param>
            <param name="nDestRow">The destination row index.</param>
            <param name="maxrow">The new row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.MoveCols(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns were moved in the grid.
            </summary>
            <param name="nFromCol">The first column index.</param>
            <param name="nToCol">The last column index.</param>
            <param name="nDestCol">The destination column index.</param>
            <param name="maxcol">The new column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.FilterRangeType(Syncfusion.Windows.Forms.Grid.GridRangeInfoType)">
            <summary>
            Returns a range list with ranges that match a specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoType"/>.
            </summary>
            <param name="filter">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoType"/> to search for.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with ranges that match the above criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ExpandRanges(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a range list and convert column and row ranges into cell ranges with the specified bounds.
            </summary>
            <param name="nFirstRow">Row index for the first non-label cell in grid area.</param>
            <param name="nFirstCol">Column index for the first non-label cell in grid area.</param>
            <param name="nRowCount">Last row in the grid.</param>
            <param name="nColCount">Last column in the grid</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> objects that this method creates.</returns>
            /<remarks>
            Column ranges will be converted to cell ranges using nFirstRow and nRowCount. 
            Row ranges will be converted to cell ranges using nFirstCol and nColCount. 
            Column ranges will be converted to cell ranges using all input parameters. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.GetColRanges(Syncfusion.Windows.Forms.Grid.GridRangeInfoType)">
            <summary>
            Creates a range list with column ranges that match a specified criteria.
            </summary>
            <param name="filter">The filter criteria.</param>
            <returns>The range list with column ranges.</returns>
            <remarks>
            Use <para/>
            rangeList.GetColRanges(GridRangeInfoType.Cells|GridRangeInfoType.Cols);<para/>
            if you want to get column ranges for both ranges that are cells or column ranges.<para/>
            Use <para/>
            rangeList.GetColRanges(GridRangeInfoType.Cols);<para/>
            if you only want to get column ranges and not cell ranges.<para/>
            Neighboring ranges will be combined if they intersect or have the same border (e.g. C4:C5 and C6:C7 will be combined into C4:C7).
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.GetRowRanges(Syncfusion.Windows.Forms.Grid.GridRangeInfoType)">
            <summary>
            Creates a range list with row ranges that match a specified criteria.
            </summary>
            <param name="filter">The filter criteria.</param>
            <returns>The range list with row ranges.</returns>
            <remarks>
            Use <para/>
            rangeList.GetRowRanges(GridRangeInfoType.Cells|GridRangeInfoType.Rows);<para/>
            if you want to get row ranges for both ranges that are cells or row ranges.<para/>
            Use <para/>
            rangeList.GetRowRanges(GridRangeInfoType.Rows);<para/>
            if you only want to get row ranges and not cell ranges.<para/>
            Neighboring ranges will be combined if they intersect or have the same border (e.g. R4:R5 and R6:R7 will be combined into R4:R7).
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Parse(System.String)">
            <summary>
            Creates a range list from a string with comma separated range descriptions.
            </summary>
            <param name="parseText">The text to be parsed.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoList"/> with range objects described in the string.</returns>
            <remarks>
            The method parses a string that was previously created with <see cref="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ToString"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ToString">
            <overload>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </overload>
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <remarks>
            The generate string will be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            Each range object will be comma separated. For example: "R3:R5,R8:R10,R14:R15".<para/>
            </remarks>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ToString(System.IFormatProvider)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ToString(System.String)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="format">The string Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ToString(System.String,System.IFormatProvider)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>       
            <param name="format">The string Ignored.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Item(System.Int32)">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> at a specific index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.ActiveRange">
            <summary>
            Gets the last range in the range list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRangeInfoList.Info">
            <summary>
            Gets the results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoListConverter">
            <summary>
                 GridRangeInfoListConverter is a class that can be used to convert
                 a range list to a string or vice versa. Access this
                 class through the TypeDescriptor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoListConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert an object of the given type to the
            type of this converter, using the specified context.
            </summary>       
            <param name="context">Format
            context. </param>
            <param name="sourceType">The type
            you want to convert from. </param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRangeInfoListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <override/>
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>      
            <param name="context">Format
            context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The object to convert. </param>
            <returns>
            An object that represents the converted value.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRangeInfoType">
            <summary>
            Identifies the range type for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoType.Empty">
            <summary>
            Range is empty.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoType.Cells">
            <summary>
            Range of cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoType.Rows">
            <summary>
            Range with rows.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoType.Cols">
            <summary>
            Range with columns.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRangeInfoType.Table">
            <summary>
            Range is a whole table.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo">
            <summary>
            GridNonImmutableRangeInfo is derived from <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> and lets
            you change Top, Left, Bottom, and Right properties of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.Clone">
            <summary>
                Creates a deep copy of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo"/> object.
            </summary>
            <returns>A duplicate of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.ToRangeInfo">
            <summary>
                Returns a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> based on the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo"/> object.
            </summary>
            <returns>The new GridRangeInfo.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.#ctor">
            <summary>
            Initializes an empty instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.#ctor(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo"/> and copies data from an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.
            </summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that holds data to be copied from.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.RangeType">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridRangeInfo.RangeType"/>
            <summary>Gets or sets the GridRangeInfoType for this GridRangeInfo object.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.Top">
            <summary>
            Gets or sets the top row index of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.Left">
            <summary>
            Gets or sets the left column index of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.Bottom">
            <summary>
            Gets or sets the bottom row index of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo.Right">
            <summary>
            Gets or sets the right column index of the range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection">
            <summary>
            A collection that stores 'GridNonImmutableRangeInfo' objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.#ctor">
            <summary>
            Initializes a new instance of 'GridNonImmutableRangeInfoCollection'.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection)">
            <summary>
                Initializes a new instance of 'GridNonImmutableRangeInfoCollection' based on an already existing instance.
            </summary>
            <param name='covValue'>
                A 'GridNonImmutableRangeInfoCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo[])">
            <summary>
                Initializes a new instance of 'GridNonImmutableRangeInfoCollection' with an array of 'GridNonImmutableRangeInfo' objects.
            </summary>
            <param name='covValue'>
                An array of 'GridNonImmutableRangeInfo' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.Add(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo)">
            <summary>
                Adds a 'GridNonImmutableRangeInfo' item with the specified value to the 'GridNonImmutableRangeInfoCollection'
            </summary>
            <param name='covValue'>
                The 'GridNonImmutableRangeInfo' to add.
            </param>
            <returns>
                The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'GridNonImmutableRangeInfoCollection'.
            </summary>
            <param name='covValue'>
                An array of 'GridNonImmutableRangeInfo' objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection)">
            <summary>
                Adds the contents of another 'GridNonImmutableRangeInfoCollection' at the end of this instance.
            </summary>
            <param name='covValue'>
                A 'GridNonImmutableRangeInfoCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.Contains(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo)">
            <summary>
                Gets a value indicating whether the 'GridNonImmutableRangeInfoCollection' contains the specified value.
            </summary>
            <param name='covValue'>
                The item to locate.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo[],System.Int32)">
            <summary>
                Copies the 'GridNonImmutableRangeInfoCollection' values to a one-dimensional System.Array
                instance starting at the specified array index.
            </summary>
            <param name='covArray'>
                The one-dimensional System.Array that represents the copy destination.
            </param>
            <param name='intIndex'>
                The index in the array where copying begins.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo)">
            <summary>
                Returns the index of a 'GridNonImmutableRangeInfo' object in the collection.
            </summary>
            <param name='covValue'>
                The 'GridNonImmutableRangeInfo' object whose index will be retrieved.
            </param>
            <returns>
                If found, the index of the value; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo)">
            <summary>
                Inserts an existing 'GridNonImmutableRangeInfo' into the collection at the specified index.
            </summary>
            <param name='intIndex'>
                The zero-based index where the new item should be inserted.
            </param>
            <param name='covValue'>
                The item to insert.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GetEnumerator">
            <summary>
                Returns an enumerator that can be used to iterate through
                the 'GridNonImmutableRangeInfoCollection'.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.Remove(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo)">
            <summary>
                Removes a specific item from the 'GridNonImmutableRangeInfoCollection'.
            </summary>
            <param name='covValue'>
                The item to remove from the 'GridNonImmutableRangeInfoCollection'.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before setting an item in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.OnInsert(System.Int32,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before inserting a new item in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.Item(System.Int32)">
            <summary>
                Represents the 'GridNonImmutableRangeInfo' item at the specified index position.
            </summary>
            <param name='intIndex'>
                The zero-based index of the entry to locate in the collection.
            </param>
            <value>
                The entry at the specified index of the collection.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator">
            <summary>
            A strongly typed enumerator for 'GridNonImmutableRangeInfoCollection'
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection)">
            <summary>
                Enumerator constructor
            </summary>
            <param name="covMappings">A list of GridNonImmutableRangeInfo objects.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator.MoveNext">
            <summary>
                Advances the enumerator to the next element of the collection
            </summary>
            <returns>True if next element exists.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator.Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator.Current">
            <summary>
             Gets the current element from the collection (strongly typed)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfoCollection.GridNonImmutableRangeInfoEnumerator.System#Collections#IEnumerator#Current">
            <summary>
                Gets the current element from the collection
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCursors">
            <summary>
            Provides you with default cursors for the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCursors.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCursors.ColumnWidthCursor">
            <summary>
            Gets or sets cursor for resizing columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCursors.RowHeightCursor">
            <summary>
            Gets or sets cursor for resizing rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCursors.SelectColumnCursor">
            <summary>
            Gets or sets cursor for selecting columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCursors.SelectRowCursor">
            <summary>
            Gets or sets cursor for selecting rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCursors.SelectRowRTLCursor">
            <summary>
            Gets or sets cursor for selecting rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCursors.DragSelectionCursor">
            <summary>
            Gets or sets cursor for dragging a selection of columns or rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPaintTriangle">
            <summary>
            This class encapsulates the painting logic for a triangle. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintTriangle.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintTriangle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridTriangleDirection,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Boolean)">
            <summary>
            Paints a triangle to a given graphics canvas.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="dir">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridTriangleDirection"/> which indicates the sort order.</param>
            <param name="backBrush">Brush to paint the inner region of the triangle.</param>
            <param name="backPen1">Pen 1 to draw a traingle boundary.</param>
            <param name="backPen2">Pen 2 to draw a traingle boundary.</param>
            <param name="backPen3">Pen 3 to draw a traingle boundary.</param>
            <param name="opaque">Specifies if the triangle should be drawn transparent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintTriangle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridTriangleDirection,System.Drawing.Brush,System.Drawing.Pen,System.Boolean)">
            <summary>
            Paints a triangle to a given graphics canvas.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="dir">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridTriangleDirection"/> which indicates the sort order.</param>
            <param name="backBrush">Brush to paint the inner region of the triangle.</param>
            <param name="backPen">Pen to draw a traingle boundary.</param>
            <param name="opaque">Specifies if the triangle should be drawn transparent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintTriangle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridTriangleDirection,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Paints a triangle to a given graphics canvas.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="dir">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridTriangleDirection"/> which indicates the sort order.</param>
            <param name="backBrush">Brush to paint the inner region of the triangle.</param>
            <param name="backPen">Pen to draw a traingle boundary.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel">
            <summary>
            Implements the data / model part of a column header with sort indicator.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <summary>
            This is called from GridStyleInfo.GetFormattedText. 
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">textInfo is a hint who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>The formatted test for the gives value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer">
            <summary>
            Implements the renderer part of a column header with sort indicator.
            </summary>
            <remarks>
            The header cell is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is True.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> registers "ColumnHeaderCell" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>
            of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell.
            <para/>
            The sort indicator is defined through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>. The
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> will be cast to <see cref="T:System.ComponentModel.ListSortDirection"/>.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            <para/>
            The following table lists some characteristics about the SortColumnHeader cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>SortColumnHeaderCell</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Click Only</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>When set to <see cref="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Flat"/>, the header will be drawn with slightly raised edges typical for cell headers. If the grid is XP Themes enabled, the headers will be drawn with XP Themes look. If you specify Sunken or Raised, the header will be drawn with sunken or raised edges and not XP Themed. (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>ColumnHeaderCell (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>If empty, the standard header text will be drawn as specified with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedRowHeaders"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedColHeaders"/> properties in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> is not NULL, the cell value will be displayed as header text.  (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the header cell can be activated as current cell when the user clicks onto the header. Usually you do not want a header to be activated as current cell unless you want to have editing capabilities such as allowing user to rename header text in place. (You would have to implement a custom header cell for this.) (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description>Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. If grid is XP Themes enabled, this color will be ignored and the header will be drawn with default XP Themes header background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for an individual cell when merging cells' features have been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> (<see cref="T:System.Object"/>)</term>
                    <description>The sort indicator is defined through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>. The
             <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> will be cast to <see cref="T:System.ComponentModel.ListSortDirection"/>. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>If empty, the standard header text will be drawn as specified with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedRowHeaders"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedColHeaders"/> properties in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> is not NULL, the cell value will be displayed as header text.  (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: true)</description>
                </item>
            </list>
            <para/>
             <para/>
             <para/>
             <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridSortColumnHeaderCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase, 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer.OnDrawDisplayText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSortInfo">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSortInfo.#ctor">
            <internalonly/>
            <summary>Internal only.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTriangleDirection">
            <summary>
            Specifies the direction of a triangle when drawing triangle with <see cref="M:Syncfusion.Windows.Forms.Grid.GridPaintTriangle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridTriangleDirection,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen,System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTriangleDirection.Up">
            <summary>
            A triangle pointing up.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTriangleDirection.Down">
            <summary>
            A triangle pointing down.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTriangleDirection.Left">
            <summary>
            A triangle pointing to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTriangleDirection.Right">
            <summary>
            A triangle pointing to the right.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor">
            <summary>
            Provides a collection editor that is tailored to adding, removing, and changing base styles from
            the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/> in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <example>
            The following code shows the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor"/> in a dialog using the
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.ShowGridBaseStylesMapDialog(System.Object,System.String)"/> method of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>
            class:
            <code lang="C#">
                   GridControlBase grid = ActiveGrid;
                   if (grid != null)
                   {
                       GridBaseStylesMap.ShowGridBaseStylesMapDialog(grid.Model, "BaseStylesMap");
                       grid.Model.Refresh();
                   }
            </code>
            </example>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor"/> with a
            type to create instances for collection items.
            </summary>
            <param name="type">Type for collection item.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor.CreateCollectionItemType">
            <summary>
            Gets the data type that this collection contains.
            </summary>
            <returns>
            The data type of the items in the collection, or an <see cref="T:System.Object"/> if no Item property can be located on the collection.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            Indicates whether original members of the collection can be removed.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>
            true if it is permissible to remove this value from the collection; otherwise, false. The default implementation always returns true.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of the specified collection item type.
            </summary>
            <param name="itemType">The type of item to create.</param>
            <returns>A new instance of the specified object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <override/>
            <summary>
            Edits the value of the specified object using the specified service provider and
            context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to
            gain additional context information. </param>
            <param name="provider">A service provider object through which editing services
            can be obtained. </param>
            <param name="value">The object to edit the value of. </param>       
            <returns>
            The new value of the object. If the value of the object has not changed, this
            should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor.IntEditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="context">The context.</param>
            <param name="provider">The provider.</param>
            <param name="value">The value.</param>
            <returns>returns object</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm"/> to provide as the user interface for editing the collection.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleConverter">
            <summary>
               <para>Provides
                  a type converter to convert expandable objects to and from various
                  other representations.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
               <para>Gets a value indicating whether this converter can
                  convert an object to the given destination type using the context.</para>
            </summary>
            <param name="context">Format context.</param>
            <param name="destinationType">Target type.</param>
            <returns>True if this conversion is possible; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
               <para>Converts the given value object to
                  the specified destination type using the specified context and arguments.</para>
            </summary>
            <param name="context">Format context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Target type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleNameConverter">
            <summary>
            This is a <see cref="T:System.ComponentModel.TypeConverter"/> for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            </summary>
            <remarks>
            This calls for registered base styles in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/>
            and displayed them in a drop-down list in a <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleNameConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert an object of the given type to the
            type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format
            context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type
            you want to convert from. </param>      
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <override/>
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>
            <param name="context">Format context. </param>
            <param name="culture">Current culture information. </param>
            <param name="value">The object to convert. </param>     
            <returns>
            Converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns a collection of standard values for the data type this type converter is
            designed for when provided with a format context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context that can be used to extract additional information about the environment
            from which this converter is invoked. This parameter or properties of this
            parameter can be null. </param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
            that holds a standard set of valid values, or null if the data type does not
            support a standard set of values.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether the collection of standard values returned from <see
            cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an
            exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <returns>
            true if the <see
            cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
            returned from <see
            cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an
            exhaustive list of possible values; false if other values are possible.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether this object supports a standard set of values that can be picked
            from a list, using the specified context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />
            should be called to find a common set of values the object supports; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleIdentity.Dispose">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>
            An array of style objects that are base styles for the current style object.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleIdentity.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyleIdentity.Info">
            <summary>
            Gets of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle">
            <summary>
            GridBaseStyle represents base styles in the grid. A base style has a name and holds the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object
            with style information. Cells in the grid can reference a base style with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/>.
            </summary>
            <remarks>
            The grid has four system-defined base styles:
            <list type="table">
            <listheader><term>Name</term><description>Descriptions</description></listheader>
            <item><term>Standard</term><description>Holds cell information for all cells.</description></item>
            <item><term>Header</term><description>Holds cell information for row and column headers.</description></item>
            <item><term>Row Header</term><description>Holds cell information specific to row headers.</description></item>
            <item><term>Column Header</term><description>Holds cell information specific to column headers.</description></item>
            </list>
            You can format each cell in the grid individually, but settings that have not been initialized will be inherited from a base style
            whereas the standard style is the style that any cell will inherit information from.
            <para/>
            You can register custom base styles with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> map that you can access with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/>.
            <para/>
            Base styles themselves can be inherited from other base styles. The "Row Header" base style is derived from the "Header" base style for example.
            </remarks>
            <example>
            The following example shows how to modify base styles and how to add a new custom base style:
            <code lang="C#">
                GridStyleInfo standard = model.BaseStylesMap["Standard"].StyleInfo;
                GridStyleInfo header = model.BaseStylesMap["Header"].StyleInfo;
                GridStyleInfo rowHeader = model.BaseStylesMap["Row Header"].StyleInfo;
                GridStyleInfo colHeader = model.BaseStylesMap["Column Header"].StyleInfo;
            <para/>
                standard.TextColor = Color.FromArgb(0, 21, 84);
                header.Interior = new BrushInfo(GradientStyle.Vertical, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                rowHeader.Interior = new BrushInfo(GradientStyle.Horizontal, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                standard.Font.Facename = "Helvetica";
                standard.Interior = new BrushInfo(Color.FromArgb(237, 240, 247));
            <para/> 
            <para/> 
                GridStyleInfo customStyle = model.BaseStylesMap["Custom Style"].StyleInfo;
                standard.Interior = new BrushInfo(Color.Green);
                    model[1, 1].BaseStyle = "Custom Style";
            </code>
            </example>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.#ctor(System.String,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore,Syncfusion.Windows.Forms.Grid.GridBaseStylesMap)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> with name and style information and associates it with a base styles map.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
            <param name="styleInfoStore">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> with style settings.</param>
            <param name="styleInfoMap">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> for this base style.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.#ctor(System.String,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> with name and style information.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
            <param name="styleInfoStore">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> with style settings.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.#ctor(System.String,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> with name and style information.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
            <param name="styleInfo">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> with style settings.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> with a name.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.Clone">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> object and copies all properties from this object.
            </summary>
            <returns>The new created <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyle.ToString">
            <summary>Returns a string holding the current object.</summary>
            <returns>String representation of the current object.</returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyle.Name">
            <summary>
            Gets or sets the base style name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyle.IsSystem">
            <summary>
            Gets a value indicating whether this a system style that cannot be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyle.BaseStylesMap">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> this base style belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyle.StyleInfo">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> with style settings for this base style.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> returned by this property is simply a wrapper for
            the settings in <see cref="P:Syncfusion.Windows.Forms.Grid.GridBaseStyle.StyleInfoStore"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyle.StyleInfoStore">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> with style settings for this base style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap">
            <summary>
            GridBaseStylesMap holds a collection of base styles for a grid and lets you add, remove, and change base styles.
            </summary>
            <remarks>
            A base style has a name and holds the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object
            with style information. Cells in the grid can reference a base style with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/>.
            <para/>
            The grid has four system-defined base styles as discussed in <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> overview. The
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.RegisterStandardStyles"/> method adds these system styles to the collection.
            <para/>
            You can register custom base styles with the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> map that you can access with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/>.
            <para/>
            Use <see cref="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.ShowGridBaseStylesMapDialog(System.Object,System.String)"/> to let users customize base styles at run-time.
            </remarks>
            <example>
            The following example shows how to modify base styles and how to add a new custom base style:
            <code lang="C#">
                GridStyleInfo standard = model.BaseStylesMap["Standard"].StyleInfo;
                GridStyleInfo header = model.BaseStylesMap["Header"].StyleInfo;
                GridStyleInfo rowHeader = model.BaseStylesMap["Row Header"].StyleInfo;
                GridStyleInfo colHeader = model.BaseStylesMap["Column Header"].StyleInfo;
            <para/>
                standard.TextColor = Color.FromArgb(0, 21, 84);
                header.Interior = new BrushInfo(GradientStyle.Vertical, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                rowHeader.Interior = new BrushInfo(GradientStyle.Horizontal, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                standard.Font.Facename = "Helvetica";
                standard.Interior = new BrushInfo(Color.FromArgb(237, 240, 247));
             <para/>
             <para/>
                GridStyleInfo customStyle = model.BaseStylesMap["Custom Style"].StyleInfo;
                standard.Interior = new BrushInfo(Color.Green);
                    model[1, 1].BaseStyle = "Custom Style";
            </code>
            </example>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.ToString">
            <override/>
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see
            cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.ShowGridBaseStylesMapDialog(System.Object,System.String)">
            <summary>
            Shows a dialog with a collection editor that allows the end-user to add
            and remove base styles.
            </summary>
            <param name="instance">The instance with a property that references a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.</param>
            <param name="propertyName">The name of the property, e.g. "BaseStylesMap".</param>
            <returns>The <see cref="T:System.Windows.Forms.DialogResult"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.ShowGridBaseStylesMapDialog(System.Object,System.String,System.IServiceProvider)">
            <summary>
            Shows a dialog with a collection editor that allows the end-user to add
            and remove base styles.
            </summary>
            <param name="instance">The instance with a property that references a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.</param>
            <param name="propertyName">The name of the property, e.g. "BaseStylesMap".</param>
            <param name="provider">A IServiceProvider. Can be NULL.</param>
            <returns>The <see cref="T:System.Windows.Forms.DialogResult"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.#ctor(Syncfusion.Windows.Forms.Grid.GridBaseStyle[])">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> and copies an array of base styles.
            </summary>
            <param name="baseStyles">An array with <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> styles.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Clone">
            <summary>
            Creates a new instance <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/> and initializes it with all base styles from this collection.
            </summary>
            <returns>The new GridBaseStylesMap object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.GetBaseStylesMapStyles(System.String,System.Int32@)">
            <summary>
            Copies a base style and all base styles it depends on into an array.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="level">The maximum number of levels to look at when walking referenced
            base styles.</param>
            <returns>An array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> objects with the first base style and all base styles it depends on.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.RegisterStandardStyles">
            <summary>
            Adds "Standard", "Header", "Row Header", and "Column Header" base styles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.GetNewBaseStyleName">
            <summary>
            Gets a suggestion for a new base style name, e.g. when the user adds a new
            base style in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollectionEditor"/>.
            </summary>
            <returns>A string for a new base style name.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Add(Syncfusion.Windows.Forms.Grid.GridBaseStyle)">
            <summary>
            Adds a base style to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.
            </summary>
            <param name="baseStyle">The base style to be added.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Remove(System.String)">
            <summary>
            Removes the base style with the specified name.
            </summary>
            <param name="name">The name of the base style to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.AddRange(Syncfusion.Windows.Forms.Grid.GridBaseStyle[])">
            <summary>
            Adds a range of base styles to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.
            </summary>
            <param name="value">Array of base styles.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.CopyTo(System.Array,System.Int32)">
            <overload>
            Copies the base style collection elements to a one-dimensional Array instance at the specified index.
            </overload>
            <summary>
            Copies the base style collection elements to a one-dimensional Array instance at the specified index.
            </summary>
            <param name="array">The Array.</param>
            <param name="index">Index to copy.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.CopyTo(Syncfusion.Windows.Forms.Grid.GridBaseStyle[],System.Int32)">
            <summary>
            Copies all base styles into an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> starting at specified index.
            </summary>
            <param name="values">The array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.GetEnumerator">
            <summary>
            Returns an enumerator that can enumerate through the base styles object in this collection.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Standard">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> for Standard style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Header">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> for Header style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.ColumnHeader">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> for column header style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.RowHeader">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> for row header style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.CellTypes">
            <summary>
            Gets an <see cref="T:System.Collections.ArrayList"/> will cell type names as strings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Modified">
            <summary>
            Gets or sets a value indicating whether to modify property(bool)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.InCollectionEditor">
            <summary>Gets a value indicating whether in CollectionEditor. For internal use.</summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Item(System.String)">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> for the specified name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Item(System.Int32)">
            <summary>
            Gets / sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.Count">
            <summary>
            Gets the number of base styles in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to base styles table.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.IsReadOnly">
            <summary>
            Gets a value indicating whether the base styles collection is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStylesMap.IsSynchronized">
            <summary>
            Gets a value indicating whether the base styles collection is synchronized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo">
            <summary>
            GridStyleInfo holds all information stored for a cell.
            </summary>
            <remarks>
            GridStyleInfo provides user-friendly access to all properties stored
            in GridStyleInfoStore. It also has Identity information and can inherit
            properties from base styles (row styles, column styles, table style).
            <para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> provides a very simple way to query and change cell contents
            using the indexer.
            <para/>
            A cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImage"/> (<see cref="T:System.Drawing.Image"/>)</term>
                    <description>Gets / sets the image that the cell displays as background. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageMode"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBackgroundImageMode"/>)</term>
                    <description>Indicates how the background image is displayed. (Default: GridBackgroundImageMode)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>The cell type for this style instance. Cell types are accessed in the grid through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> which returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> object. To access cell renderers, use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CellRenderers"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> instance. (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CharacterCasing"/> (<see cref="T:System.Windows.Forms.CharacterCasing"/>)</term>
                    <description>Specifies if cell control modifies the case of characters as they are typed when the cell's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> is "OriginalTextBox". (Default: CharacterCasing.Normal)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CheckBoxOptions"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>)</term>
                    <description>Gets / sets flat look and values that represent checked, unchecked, and indeterminated state of the check box. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> (<see cref="T:System.Collections.Specialized.StringCollection"/>)</term>
                    <description>Specifies items to be displayed in a drop-down list. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the user can click on any cell button elements in this renderer. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control"/> (<see cref="T:System.Windows.Forms.Control"/>)</term>
                    <description>A custom control you can associate with a cell. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cells value. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CurrencyEdit"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>)</term>
                    <description>A nested object with currency text box properties for a cell.  (Default: GridCurrencyEditInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> (<see cref="T:System.Object"/>)</term>
                    <description>Specifies a data source that holds items to be displayed in a drop-down list. A datasource can be specified instead of manually filling the choicelist with string entries. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the text that is shown in check box or pushbuttons. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/> (<see cref="T:System.String"/>)</term>
                    <description>Names the property in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> that holds the text to be displayed in a cell that depends on a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStyle"/>)</term>
                    <description>Specifies if user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>. (Default: GridDropDownStyle.Editable)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>.  (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if text can float into the boundaries of a neighboring cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if this cell can be flooded by a previous cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormulaTag"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaTag"/>)</term>
                    <description>A formula tag that is associated with a cell. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background.  (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaskEdit"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/>)</term>
                    <description>A nested object with masked edit properties for a cell. (Default: GridMaskEditInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for an individual cell when merging cells feature has been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/>)</term>
                    <description><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> lets you specify the step, minimum, and maximum value
            and if the value should start over when you reach the maximum value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PasswordChar"/> (<see cref="T:System.Char"/>)</term>
                    <description>The character used to mask characters of a password in a password-entry cell. The cell's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> must be "OriginalTextBox". (Default: Blank)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ProgressBar"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>)</term>
                    <description>A nested object with ProgressBar properties for a cell. Default: GridProgressBarInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the cell buttons. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Indicates whether an exception should be thrown in the <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> method if the formatted text can not be parsed and converted to the type specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> (<see cref="T:System.Object"/>)</term>
                    <description>A custom tag you can associate with a cell. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for combo boxes). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TriState"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if this is a Tristate check box that has an additional indeterminated state. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cells style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets a string that specifies the property of the data source from which to draw the value. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text box should show a vertical scrollbar when text is being edited and does not fit in cell. WrapText must be initialized to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            <para/>
            <para/>
            </remarks>
            <para/>
            <example>
            The following example makes some changes to the grid using the indexer:
            <code lang="C#">
                        model[2, 2].Text = "Grid Demo";
                        model[2, 2].Font.Bold = True;
                        model[2, 2].Font.Size = 16;
                        model[2, 2].HorizontalAlignment = GridHorizontalAlignment.Center;
                        model[2, 2].VerticalAlignment = GridVerticalAlignment.Middle;
                        model[2, 2].CellType = "Static";
                        model[2, 2].Borders.All = new GridBorder(GridBorderStyle.Solid, Color.FromArgb(100, 238, 122, 3));
                        model[2, 2].Interior = new BrushInfo(GradientStyle.PathEllipse, Color.FromArgb(100, 57, 73, 122), Color.FromArgb(237, 240, 247));
            </code>
            If you query for specific attributes in a cell and these attributes have not been explicitly set for the cell,
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that is return by the indexer is smart enough to query base styles for
            queried information.
            <code lang="C#">
                        GridStyleInfo standard = model.BaseStylesMap["Standard"].StyleInfo;
                        standard.TextColor = Color.FromArgb(0, 21, 84);
                            Color color = model[1, 1].TextColor;
                            // model[1, 1].TextColor will return Color.FromArgb(0, 21, 84));
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Empty">
            <summary>
            An empty style object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.#ctor">
            <summary>
            Initalizes a new style object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.#ctor(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initalizes a new style object and copies all data from an existing style object.
            </summary>
            <param name="style">The style object that contains the original data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.#ctor(Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <summary>
            Initalizes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.#ctor(Syncfusion.Styles.StyleInfoIdentityBase)">
            <summary>
            Initalizes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.#ctor(Syncfusion.Styles.StyleInfoIdentityBase,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore)">
            <summary>
            Initalizes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.#ctor(Syncfusion.Styles.StyleInfoIdentityBase,Syncfusion.Windows.Forms.Grid.GridStyleInfoStore,System.Boolean)">
            <summary>
            Initalizes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetGridModel">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this style or NULL if style is used outside a grid model.
            </summary>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this style belongs to or NULL.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetActiveGridView">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> for this style or NULL if style is used outside a grid model.
            </summary>
            <returns>The active <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> for the grid model this style belongs to or NULL.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ModifyStyle(Syncfusion.Styles.IStyleInfo,Syncfusion.Styles.StyleModifyType)">
            <override/>
            <summary>
            Applies the specified changes to the style object.
            </summary>
            <param name="istyle">The style object to modify.</param>
            <param name="mt">Defines the style operations for the given style object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CreateSubObjectIdentity(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>
            Creates a product-specific identity object for the sub object.
            </summary>
            <param name="sip">StyleInfoProperty descriptor for this sub object.</param>
            <returns>Identity for the sub object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetOffLineCopy">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> and copies its cell and identity information from the current object. The new
            instance will be made offline so that changes in this style object are not be stored in the GridData
            </summary>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> instance.</returns>
            <remarks>
            Lets a style object load base styles and default values but disables
            saving changes back to the grid. (see OnStyleChanged below)
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetFont">
            <summary>
            Resets font information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetBorders">
            <summary>
            Resets the borders information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetInterior">
            <summary>
            Resets interior information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetBackColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> back to default.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetTextColor">
            <summary>
            Resets text color information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetReadOnly">
            <summary>
            Resets Read-only information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetRightToLeft">
            <summary>
            Resets Read-only information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetThemed">
            <summary>
            Resets Read-only information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetClickable">
            <summary>
            Resets the clickable information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetHotkeyPrefix">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetTrimming">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetHorizontalAlignment">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCharacterCasing">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CharacterCasing"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetVerticalAlignment">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetTextAlign">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetBaseStyle">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetWrapText">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetVerticalScrollbar">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetAutoSize">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetAllowEnter">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetEnabled">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetTriState">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TriState"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetExclusiveChoiceList">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetDropDownStyle">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.IsAutoComplete">
            <summary>
            Used internally.
            </summary>
            <returns>
            <c>true</c> if [is auto complete]; otherwise, <c>false</c>.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetAutoComplete">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoComplete"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetAutoCompleteInEditMode">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoComplete"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetFloatCell">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetFloodCell">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetMergeCell">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCellAppearance">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetAutoFit" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetAutoFitChar" -->
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetMaxLength">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCellType">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetChoiceList">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetDescription">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetFormat">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetDisplayMember">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetValueMember">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetDataSource">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetPropertyDescriptor">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PropertyDescriptor"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetText">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCellValue">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCellValueType">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetImageFromByteArray">
            <summary>
            Resets Read-only information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetError">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetStrictValueType">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetTag">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetControl">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetFormulaTag">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormulaTag"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetCulture(System.Boolean)">
            <summary>
            Gets the culture information from the style object or returns CultureInfo.CurrentCulture
            if <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> is NULL.
            </summary>
            <param name="useCurrentCultureIfNull">True if CultureInfo.CurrentUICulture should be returned
            when <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> is NULL.</param>
            <returns>The culture information with rules for parsing and formatting the cell's value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCultureInfo">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetValidateValue">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCurrencyEdit">
            <summary>
            Resets CurrencyEdit state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetMaskEdit">
            <summary>
            Resets MaskedEdit state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetProgressBar">
            <summary>
            Resets ProgressBar state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetNumericUpDown">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCheckBoxOptions">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CheckBoxOptions"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetTextMargins">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetBorderMargins">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BorderMargins"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetShowButtons">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetPasswordChar">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PasswordChar"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetCellTipText">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetImageIndex">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetImageSizeMode">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageSizeMode"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetImageList">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetBackgroundImageMode">
            <summary>
            Resets BackgroundImageMode state
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetBackgroundImageID">
            <summary>
            Resets BackgroundImageID state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetBackgroundImage">
            <summary>
            Resets BackgroundImage state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ResetParseFormats">
            <summary>
            Resets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ParseFormats"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetFormattedText(System.Object)">
            <overload>
            Return formatted text for the specified value.
            GridStyleInfo.CultureInfo is used for conversion to string.
            </overload>
            <summary>
            Return formatted text for the specified value.
            </summary>
            <param name="value">The value to be formatted.</param>
            <returns>A string that holds the formatted text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)">
            <overload>
            Parses the formatted text using Format and cell value type information stored in the current style object.
            The text is parsed using GridStyleInfo.CultureInfo information.
            </overload>
            <summary>
            Parses the formatted text using Format and cell value type information stored in the current style object.
            The text is parsed using GridStyleInfo.CultureInfo information.
            </summary>
            <param name="text">The formatted text.</param>
            <returns>True if the text could be parsed correctly and converted to a cell value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetFormattedText(System.Object,System.Int32)">
            <summary>
            Return formatted text for the specified value.
            GridStyleInfo.CultureInfo is used for conversion to string.
            </summary>
            <param name="value">The value to be formatted.</param>
            <param name="textInfo">A hint that specifies the current action why the text is formatted.</param>
            <returns>A string that holds the formatted text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String,System.Int32)">
            <summary>
            Parses the formatted text using Format and cell value type information stored in the current style object.
            The text is parsed using GridStyleInfo.CultureInfo information.
            </summary>
            <param name="text">The formatted text.</param>
            <param name="textInfo">A hint that specifies the current action why the text is parsed.</param>
            <returns>True if the text could be parsed correctly and converted to a cell value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GetText(System.Object)">
            <summary>
            Returns text for the specified value (ignoring any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> settings).
            CultureInfo.CurrentCulture is used for conversion to string.
            </summary>
            <param name="value">The value to be converted to string.</param>
            <returns>A string that represents the value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyText(System.String)">
            <summary>
            Parses the text (ignoring any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> settings) and assigns it to CellValue.
            The text is parsed using CultureInfo.CurrentCulture information.
            </summary>
            <param name="text">The text to be parsed.</param>
            <returns>True if the text could be parsed correctly and converted to a cell value.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellIdentity">
            <summary>
            Gets or sets identity information such as row and column index for the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Store">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CustomProperties">
            <summary>
            Gets a collection of custom property objects that have
            at least one initialized value. The primary purpose of this
            collection is to support design-time code serialization of
            custom properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default">
            <summary>
            Gets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> with default settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellModel">
            <summary>
            Gets the associated <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.GdipFont">
            <summary>
            Gets returns or creates a cached GDI+ font generated from font information of
            the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnlyFont">
            <internalonly/>
            <summary>Gets readonly font. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font">
            <summary>
            Gets or sets the font for drawing text.
            </summary>
            <remarks>
            <para/>
            The default value for the font property is GridFontInfo.Default.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasFont">
            <summary>
            Gets a value indicating whether font information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders">
            <summary>
            Gets or sets Top, left, bottom, and right border settings.
            </summary>
            <remarks>
            <para/>
            The default value for the Borders property is GridBordersInfo.Default.
            <para/>
            The property affects the behavior or appearance of the following cell types:
            <para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnlyBorders">
            <internalonly/>
            <summary>Gets readonly readonly borders. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FixSubObjectsDerivedFromRowandColStyle">
            <summary>
            Gets or sets a value indicating whether the cells are derived from row and column styles. In the case that the base style that implements
            a specific subobject (e.g. Borders, Font, ...) is a row style
            the column style would be ignored if we return here the subobject row of the row style
            in the optimized ReadOnlyBorders property. Returning the normal Borders objects instead
            fixes this problem.
            </summary>
            <remarks>
            Default value is true. You can set it false if you relied on previous fault behavior.
            </remarks>
            <example>
            <code lang="C#">
            this.gridControl1.Model.RowStyles[row - 1].Borders.Bottom = new GridBorder(GridBorderStyle.Solid, c, GridBorderWeight.ExtraExtraThick);
            this.gridControl1.Model.ColStyles[col - 1].Borders.Right = new GridBorder(GridBorderStyle.Solid, c, GridBorderWeight.ExtraExtraThick);
            GridBordersInfo b = this.gridControl1.Model[row - 1, col - 1].ReadOnlyBorders;
            Console.WriteLine(b.Right); // will return Default since ReadOnlyBorders is RowStyles[row - 1].Borders which
            has no knowledge about ColStyles if FixSubObjectsDerivedFromRowandColStyle = false.
             <para/>
            Setting FixSubObjectsDerivedFromRowandColStyle = true fixes the problem.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasBorders">
            <summary>
            Gets a value indicating whether border information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior">
            <summary>
            Gets or sets a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's background.
            </summary>
            <remarks>
            <para/>
            The default value for the Interior property is SystemColors.Window.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasInterior">
            <summary>
            Gets a value indicating whether interior information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackColor">
            <summary>
            Gets or sets a shortcut to get the backcolor of a cell instead of using <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor">
            <summary>
            Gets or sets the color for drawing the cell text.
            </summary>
            <remarks>
            <para/>
            The default value for the TextColor property is SystemColors.WindowText.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasTextColor">
            <summary>
            Gets a value indicating whether text color has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly">
            <summary>
            Gets or sets a value indicating whether cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.IgnoreReadOnly"/> to True.
            </summary>
            <remarks>
            <para/>
            The default value for the Read-Only property is False.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasReadOnly">
            <summary>
            Gets a value indicating whether Read-only information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.RightToLeft">
            <summary>
            Gets or sets if cell contents read from right to left.
            </summary>
            <remarks>
            <para/>
            The default value for the RightToLeft property is False.<para/>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasRightToLeft">
            <summary>
            Gets a value indicating whether Read-only information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed">
            <summary>
            Gets or sets a value indicating whether cell types that support Windows XP themes should be drawn themed.
            </summary>
            <remarks>
            <para/>
            The default value for the Themed property is True.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="RichText"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ProgressBar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasThemed">
            <summary>
            Gets a value indicating whether Read-only information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable">
            <summary>
            Gets or sets a value indicating whether the user can click on any cell button elements in this renderer.
            </summary>
            <remarks>
            <para/>
            The default value for the Clickable property is True.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasClickable">
            <summary>
            Gets a value indicating whether clickable information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix">
            <summary>
            Gets or sets how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand).
            When you enable the hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not
            be displayed.
            </summary>
            <remarks>
            <para/>
            The default value for the HotkeyPrefix property is HotkeyPrefix.None.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasHotkeyPrefix">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming">
            <summary>
            Gets or sets how text is trimmed when it exceeds the edges of the cell text rectangle.
            </summary>
            <remarks>
            <para/>
            The default value for the Trimming property is StringTrimming.Character.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasTrimming">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment of text in the cell.
            </summary>
            <remarks>
            <para/>
            The default value for the HorizontalAlignment property is GridHorizontalAlignment.Left.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasHorizontalAlignment">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CharacterCasing">
            <summary>
            Gets or sets if cell control modifies the case of characters as they are typed when
            the cell's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> is "OriginalTextBox".
            </summary>
            <remarks>
            <para/>
            The default value for the CharacterCasing property is CharacterCasing.Normal.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="OriginalTextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCharacterCasing">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CharacterCasing"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment">
            <summary>
            Gets or sets vertical alignment of text in the cell.
            </summary>
            <remarks>
            <para/>
            The default value for the VerticalAlignment property is GridVerticalAlignment.Top.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasVerticalAlignment">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign">
            <summary>
            Gets or sets Align text left of button elements (which is typical for combo boxes). Or align text right of button elements.
            See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> how to align text left, centered, and right inside a cell rectangle.
            </summary>
            <remarks>
            Don't confuse this with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/>. <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> specifies if text should be
            displayed left or right of any cell button elements.
            <para/>
            <para/>
            The default value for the TextAlign property is GridTextAlign.Default.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasTextAlign">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle">
            <summary>
            Gets or sets the base style for this style instance with default values for properties that are not initialized for this style object.
            </summary>
            <remarks>
            <para/>
            The default value for the BaseStyle property is String.Empty.
            <para/>
            The property affects the behavior or appearance of the following cell types:
            <para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasBaseStyle">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText">
            <summary>
            Gets or sets a value indicating whether text should be wrapped when it does not fit into a single line.
            </summary>
            <remarks>
            <para/>
            The default value for the WrapText property is True.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasWrapText">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar">
            <summary>
            Gets or sets a value indicating whether text box should show a vertical scrollbar when text is being edited and does not fit in cell. WrapText must be initialized to True.
            </summary>
            <remarks>
            <para/>
            The default value for the VerticalScrollbar property is False.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasVerticalScrollbar">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize">
            <summary>
            Gets or sets a value indicating whether the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width.
            </summary>
            <para/>
            <remarks>
            <para/>
            The default value for the AutoSize property is False.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasAutoSize">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter">
            <summary>
            Gets or sets a value indicating whether pressing the &lt;Enter&gt;-Key should insert a new line into the edited text.
            </summary>
            <remarks>
            <para/>
            The default value for the AllowEnter property is False.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasAllowEnter">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled">
            <summary>
            Gets or sets a value indicating whether the cell can be activated as current cell or if the cell should be skipped when moving the current cell.
            </summary>
            <remarks>
            <para/>
            The default value for the Enabled property is True.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasEnabled">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TriState">
            <summary>
            Gets or sets a value indicating whether this checkbox is a Tristate check box that has an additional indeterminated state.
            </summary>
            <remarks>
            <para/>
            The default value for the TriState property is False.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasTriState">
            <summary>
            Gets a value indicating whetherf <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TriState"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList">
            <summary>
            Gets or sets a value indicating whether user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>.
            Use <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/> instead.<para/>
            </summary>
            <remarks>
            <para/>
            The default value for the ExclusiveChoiceList property is False.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasExclusiveChoiceList">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle">
            <summary>
            Gets or sets if user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>.
            </summary>
            <remarks>
            <para/>
            The default value for the DropDownStyle property is GridDropDownStyle.Editable.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasDropDownStyle">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoComplete">
            <summary>
            Gets or sets a value indicating whether user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasAutoComplete">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoComplete"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoCompleteInEditMode">
            <summary>
            Gets or sets the value whether the cell can have AutoComplete, AutoSuggest, Both and None behavior in Editable mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasAutoCompleteInEditMode">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoCompleteInEditMode"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell">
            <summary>
            Gets or sets a value indicating whether text can float into the boundaries of a neighboring cell.
            </summary>
            <remarks>
            <para/>
            The default value for the FloatCell property is True.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasFloatCell">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell">
            <summary>
            Gets or sets a value indicating whether this cell can be flooded by a previous cell.
            </summary>
            <remarks>
            <para/>
            The default value for the FloodCell property is True.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasFloodCell">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell">
            <summary>
            Gets or sets if cell edges shall be drawn raised, sunken, or flat (default).
            </summary>
            <remarks>
            <para/>
            The default value for the MergeCell property is GridMergeCellDirection.Flat.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasMergeCell">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance">
            <summary>
            Gets or sets if cell edges shall be drawn raised, sunken, or flat (default).
            </summary>
            <remarks>
            <para/>
            The default value for the CellAppearance property is GridCellAppearance.Flat.
            <para/>
            The property affects the behavior or appearance of the following cell types:
            <para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCellAppearance">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoFit">
            <summary>
            Provides an option for displaying the cell with symbols when the contents in cell exceeds it's width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasAutoFit">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoFit"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoFitChar">
            <summary>
            Obtains the desired character to be displayed in cell when the contents in cell exceeds the width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasAutoFitChar">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoFitChar"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength">
            <summary>
            Gets or sets Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side.
            </summary>
            <remarks>
            <para/>
            The default value for the MaxLength property is 0.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasMaxLength">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType">
            <summary>
            Gets or sets the cell type for this style instance. Cell types are accessed in the grid through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> which returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> object. To access cell renderers
            use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.CellRenderers"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> instance.
            </summary>
            <remarks>
            <para/>
            The default value for the CellType property is Text Box.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Currency"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="MaskEdit"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="FormulaCell"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="RichText"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Control"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="OriginalTextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ProgressBar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="RadioButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCellType">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList">
            <summary>
            Gets or sets items to be displayed in a drop-down list.
            </summary>
            <remarks>
            <para/>
            The default value for the ChoiceList property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasChoiceList">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description">
            <summary>
            Gets or sets the text that is shown in check box or pushbuttons.
            </summary>
            <remarks>
            <para/>
            The default value for the Description property is String.Empty.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasDescription">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format">
            <summary>
            Gets or sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers"
            of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm)
            </summary>
            <remarks>
            <para/>
            The default value for the Format property is String.Empty.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasFormat">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember">
            <summary>
             Gets or sets the Name the property in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> that holds the text to be displayed in a cell that depends on a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/>.
            </summary>
            <remarks>
            <para/>
            The default value for the DisplayMember property is String.Empty.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasDisplayMember">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember">
            <summary>
              <para>Gets or sets a string that
            specifies the property of the data source from which to draw
            the value.</para>
            </summary>
            <remarks>
            <para/>
            The default value for the ValueMember property is String.Empty.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasValueMember">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource">
            <summary>
            Gets or sets a data source that holds items to be displayed in a drop-down list. A datasource can be specified instead of manually filling the choicelist with string entries.
            </summary>
            <remarks>
            <para/>
            The default value for the DataSource property is null.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasDataSource">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PropertyDescriptor">
            <summary>
            Gets or sets a property descriptor that can be used by UITypeEditCell, PropertyGridCell, and StandardValuesCell cell types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasPropertyDescriptor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PropertyDescriptor"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text">
            <summary>
            Gets or sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using CultureInfo.CurrentCulture
            information.
            </summary>
            <remarks>
            <para/>
            The default value for the Text property is String.Empty.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasText">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue">
            <summary>
            Gets or sets the cell value. Although the cell value is typically a string, it
            can also be any other primitive type such as int, byte, enum, or any custom type that
            is derived from <see cref="T:System.Object"/>.
            </summary>
            <remarks>
            <para/>
            The default value for the CellValue property is String.Empty.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            TODO: Explain how to set StylePropertyInfo.IsCloneable = false and StylePropertyInfo.IsDisposable = false
            or implement IStyleCloneable to avoid cloning and disposing of objects assigned to Tag.
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCellValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType">
            <summary>
            Gets or sets the preferred <see cref="T:System.Type"/> for cell values. When you assign a value
            to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the
            value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information.
            </summary>
            <remarks>
            <para/>
            The default value for the CellValueType property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCellValueType">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageFromByteArray">
            <summary>
            Gets or sets a value indicating whether cells should check whether a byte array can be
            converted to a image.
            </summary>
            <remarks>
            <para/>
            The default value for the ImageFromByteArray property is True.<para/>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasImageFromByteArray">
            <summary>
            Gets a value indicating whether Read-only information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error">
            <summary>
            Gets or sets error information if a text could not be converted to the <see cref="T:System.Type"/> specified
             with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> in
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> setter.
            </summary>
            <remarks>
            <para/>
            The default value for the Error property is String.Empty.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasError">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType">
            <summary>
            Gets or sets a value indicating whether an exception should be thrown in the <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> method
            if the formatted text can not be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> method will be called when the user enters text into
            a text box. The method checks if there are event handlers for <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>.
            If not, it will continue with its default behavior and try to convert the input text into
            the type specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>.
            <para/>
            If this conversion fails, <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> will check <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/>. If it
            is True, an exception is thrown which itself results in a warning message displayed to the user at the
            time from <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellValidating"/>.
            <para/>
            If you set <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/> to False, <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ApplyFormattedText(System.String)"/> will not throw
            an exception; it will simply store the text as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>.
            <para/>
            If you need a more specialized customization of this behavior, you should handle the
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/> event. This lets you parse the text input
            and change the cell's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> at run-time. See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>
            for an example how to do this.
            <para/>
            The default value for the StrictValueType property is True.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Currency"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="MaskEdit"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="FormulaCell"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="RichText"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Control"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="OriginalTextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ProgressBar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="RadioButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer"/>)</term>
                </item>
                </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasStrictValueType">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag">
            <summary>
            Gets or sets a custom tag you can associate with a cell.
            </summary>
            <remarks>
            <para/>
            The default value for the Tag property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            TODO: Explain how to set StylePropertyInfo.IsCloneable = false and StylePropertyInfo.IsDisposable = false
            or implement IStyleCloneable to avoid cloning and disposing of objects assigned to Tag.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasTag">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control">
            <summary>
            Gets or sets a custom control you can associate with a cell.
            </summary>
            <remarks>
            <para/>
            The default value for the Control property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="Control"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasControl">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control"/> has been initialized for the current Control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormulaTag">
            <summary>
            Gets or sets a formula tag that is associated with a cell.
            </summary>
            <remarks>
            <para/>
            The default value for the FormulaTag property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="FormulaCell"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasFormulaTag">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormulaTag"/> has been initialized for the current FormulaTag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo">
            <summary>
            Gets or sets the culture information holds rules for parsing and formatting the cell's value.
            </summary>
            <remarks>
            <para/>
            The default value for the CultureInfo property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCultureInfo">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue">
            <summary>
            Gets or sets validation rules for the cell value that are being checked before any user changes are committed to the grid cell's style object.
            </summary>
            <remarks>
            <para/>
            The default value for the ValidateValue property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnlyValidateValue">
            <internalonly/>
            <summary>Gets readonly validate value. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasValidateValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CurrencyEdit">
            <summary>
            Gets or sets CurrencyEdit state. CurrencyEdit is itself an expandable object
            with several properties that can be set individually and participate
            in style inheritance mechanism.
            </summary>
            <remarks>
            <para/>
            The default value for the CurrencyEdit property is GridCurrencyEditInfo.Default.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="Currency"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCurrencyEdit">
            <summary>
            Gets a value indicating whether CurrencyEdit state has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaskEdit">
            <summary>
            Gets or sets MaskedEdit state. MaskedEdit is itself an expandable object
            with several properties that can be set individually and participate
            in style inheritance mechanism.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasMaskEdit">
            <summary>
            Gets a value indicating whether MaskedEdit state has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ProgressBar">
            <summary>
            Gets or sets ProgressBar state. ProgressBar is itself an expandable object
            with several properties that can be set individually and participate
            in style inheritance mechanism.
            </summary>
            <remarks>
            <para/>
            The default value for the ProgressBar property is GridProgressBarInfo.Default.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ProgressBar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasProgressBar">
            <summary>
            Gets a value indicating whether ProgressBar state has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown">
            <summary>
            Gets or sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> to specify the step, minimum, and maximum value
            and if the value should start over when you reach the maximum value.
            </summary>
            <remarks>
            <para/>
            The default value for the NumericUpDown property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnlyNumericUpDown">
            <internalonly/>
            <summary>Gets readonly numeric updown. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasNumericUpDown">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CheckBoxOptions">
            <summary>
            Gets or sets flat look and values that represent checked, unchecked, and indeterminated state of the check box.
            </summary>
            <remarks>
            <para/>
            The default value for the CheckBoxOptions property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnlyCheckBoxOptions">
            <internalonly/>
            <summary>Gets readonly Checkbox options. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCheckBoxOptions">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CheckBoxOptions"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins">
            <summary>
            Gets or sets text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons.
            </summary>
            <remarks>
            <para/>
            The default value for the TextMargins property is GridMarginsInfo.Default.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnlyTextMargins">
            <internalonly/>
            <summary>Gets readonly text margins. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasTextMargins">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BorderMargins">
            <summary>
            Gets or sets extra border margins in pixels. When drawing a cell, this specifies the area between the
            cell rectangle without border and the inner rectangle of the cell with cell buttons. Is most
            useful if you want to customize <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellFrameAppearance"/>
            </summary>
            <remarks>
            <para/>
            The default value for the BorderMargins property is GridMarginsInfo.Empty.<para/>
            The property affects the behavior or appearance of call cell types:<para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnlyBorderMargins">
            <internalonly/>
            <summary>Gets readonly border margins. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasBorderMargins">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BorderMargins"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons">
            <summary>
            Gets or sets when to show or display the cell buttons. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons.
            </summary>
            <remarks>
            <para/>
            The default value for the ShowButtons property is GridShowButtons.Show.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasShowButtons">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PasswordChar">
            <summary>
            Gets or sets the character used to mask characters of a password in a password-entry cell. The
            cells <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> must be "OriginalTextBox".
            </summary>
            <remarks>
            <para/>
            The default value for the PasswordChar property is blank.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="OriginalTextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasPasswordChar">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PasswordChar"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText">
            <summary>
            Gets or sets ToolTip text to be displayed when user hovers mouse over cell.
            </summary>
            <remarks>
            <para/>
            The default value for the CellTipText property is String.Empty.
            <para/>
            The property affects the behavior or appearance of the following cell types:
            <para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="PushButton"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridPushButtonCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasCellTipText">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex">
            <summary>
            Gets or sets an image index that specifies an image inside a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/>.
            </summary>
            <remarks>
            <para/>
            The default value for the ImageIndex property is -1.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasImageIndex">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageSizeMode">
            <summary>
            Gets or sets how the image is displayed.
            </summary>
            <remarks>
            Valid values for this property are taken from the PictureBoxSizeMode
            enumeration. By default, in PictureBoxSizeMode.Normal mode, the Image
            is placed in the upper left corner of the PictureBox, and any part of
            the image too big for the PictureBox is clipped. Using the
            PictureBoxSizeMode.StretchImage value causes the image to stretch to
            fit the PictureBox.
            <para/>
            Using the PictureBoxSizeMode.AutoSize value causes the control to resize
            to always fit the image. Using the PictureBoxSizeMode.CenterImage value
            causes the image to be centered in the client area.
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasImageSizeMode">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageSizeMode"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList">
            <summary>
            Gets or sets an <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> instance.
            </summary>
            <remarks>
            <para/>
            The default value for the ImageList property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasImageList">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageMode">
            <summary>
            Gets or sets how the background image is displayed.
            </summary>
            <remarks>
            Valid values for this property are taken from the GridBackgroundImageMode
            enumeration. By default, in BackgroundImageModeMode.Normal mode, the Image
            is placed in the upper left corner of the cell(s), and any part of
            the image too big for the cell(s) is clipped. Using the
            GridBackgroundImageModeMode.StretchImage value causes the image to stretch to
            fit the cell(s).
            <para/>
            The default value for the BackgroundImageMode property is GridBackgroundImageMode.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Currency"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="MaskEdit"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="FormulaCell"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="OriginalTextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasBackgroundImageMode">
            <summary>
            Gets a value indicating whether BackgroundImageMode state has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageID">
            <summary>
            Gets or sets the Namespace ID that contains the cell's background information id.
            </summary>
            <remarks>
            <para/>
            The default value for the BackgroundImageID property is "".<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Currency"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="MaskEdit"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="FormulaCell"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="OriginalTextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasBackgroundImageID">
            <summary>
            Gets a value indicating whether BackgroundImage state has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImage">
            <summary>
            Gets or sets the image that the cell displays as background.
            </summary>
            <remarks>
            <para/>
            The default value for the BackgroundImage property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            <list type="bullet">
                <item>
                    <term><see langword="CheckBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="ComboBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridComboBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DataBoundRowHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownColorUI"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGrid"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownGridListControl"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="DropDownMonthCalendar"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Header"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="NumericUpDown"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="SortColumnHeader"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridSortColumnHeaderCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Static"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="TextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="Currency"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="MaskEdit"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="FormulaCell"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/>)</term>
                </item>
                <item>
                    <term><see langword="OriginalTextBox"/>  (<see cref="T:Syncfusion.Windows.Forms.Grid.GridOriginalTextBoxCellRenderer"/>)</term>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasBackgroundImage">
            <summary>
            Gets a value indicating whether BackgroundImage state has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ParseFormats">
            <summary>
            Gets or sets the permissible formats used to parse user entries of cell values.
            </summary>
            <remarks>
            <para/>
            The default value for the ParseFormats property is NULL.<para/>
            The property affects the behavior or appearance of the following cell types:<para/>
            It can be used to specify various DateTime formats that are allowed when the user enters a DateTime cell value.
            <para/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HasParseFormats">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ParseFormats"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormatPreview">
            <summary>
            Gets a formatted text for the default value for a specified <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormattedText">
            <summary>
            Gets or sets the value formatted with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> mask and custom formatting of the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)"/> method of the associated <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> or sets the value by calling the <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellModelBase.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)"/> of the associated <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection">
            <summary>
                A collection that stores 'GridBaseStyle' objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.#ctor">
            <summary>
                Initializes a new instance of 'GridBaseStyleCollection'.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection)">
            <summary>
                Initializes a new instance of 'GridBaseStyleCollection' based on an already existing instance.
            </summary>
            <param name='griValue'>
                A 'GridBaseStyleCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.#ctor(Syncfusion.Windows.Forms.Grid.GridBaseStyle[])">
            <summary>
                Initializes a new instance of 'GridBaseStyleCollection' with an array of 'GridBaseStyle' objects.
            </summary>
            <param name='griValue'>
                An array of 'GridBaseStyle' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.Add(Syncfusion.Windows.Forms.Grid.GridBaseStyle)">
            <summary>
                Adds a 'GridBaseStyle' item with the specified value to the 'GridBaseStyleCollection'
            </summary>
            <param name='griValue'>
                The 'GridBaseStyle' to add.
            </param>
            <returns>
                The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridBaseStyle[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'GridBaseStyleCollection'.
            </summary>
            <param name='griValue'>
                An array of 'GridBaseStyle' objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection)">
            <summary>
                Adds the contents of another 'GridBaseStyleCollection' at the end of this instance.
            </summary>
            <param name='griValue'>
                A 'GridBaseStyleCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.Contains(Syncfusion.Windows.Forms.Grid.GridBaseStyle)">
            <summary>
                Gets a value indicating whether the 'GridBaseStyleCollection' contains the specified value.
            </summary>
            <param name='griValue'>
                The item to locate.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridBaseStyle[],System.Int32)">
            <summary>
                Copies the 'GridBaseStyleCollection' values to a one-dimensional System.Array
                instance starting at the specified array index.
            </summary>
            <param name='griArray'>
                The one-dimensional System.Array that represents the copy destination.
            </param>
            <param name='intIndex'>
                The index in the array where copying begins.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridBaseStyle)">
            <summary>
                Returns the index of a 'GridBaseStyle' object in the collection.
            </summary>
            <param name='griValue'>
                The 'GridBaseStyle' object whose index will be retrieved.
            </param>
            <returns>
                If found, the index of the value; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridBaseStyle)">
            <summary>
                Inserts an existing 'GridBaseStyle' into the collection at the specified index.
            </summary>
            <param name='intIndex'>
                The zero-based index where the new item should be inserted.
            </param>
            <param name='griValue'>
                The item to insert.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GetEnumerator">
            <summary>
                Returns an enumerator that can be used to iterate through
                the 'GridBaseStyleCollection'.
            </summary>
            <returns>Enumerator for GridBaseStyle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.Remove(Syncfusion.Windows.Forms.Grid.GridBaseStyle)">
            <summary>
                Removes a specific item from the 'GridBaseStyleCollection'.
            </summary>
            <param name='griValue'>
                The item to remove from the 'GridBaseStyleCollection'.
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.Item(System.Int32)">
            <summary>
                Represents the 'GridBaseStyle' item at the specified index position.
            </summary>
            <param name='intIndex'>
                The zero-based index of the entry to locate in the collection.
            </param>
            <value>
                The entry at the specified index of the collection.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator">
            <summary>
                A strongly typed enumerator for 'GridBaseStyleCollection'
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection)">
            <summary>
                Enumerator constructor
            </summary>
            <param name="griMappings">A collection of GridBaseStyle objects.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator.MoveNext">
            <summary>
                Advances the enumerator to the next element of the collection
            </summary>
            <returns>True if the operation is successful; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator.Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator.Current">
            <summary>
                Gets the current element from the collection (strongly typed)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection.GridBaseStyleEnumerator.System#Collections#IEnumerator#Current">
            <summary>
                Gets the current element from the collection
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle">
            <summary>
                   Specifies the style of a specific cell border in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.NotSet">
            <summary>
                   No edge style is set.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.None">
            <summary>
                   No border is drawn on the cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.Dashed">
            <summary>
                   Border style that consists of a dotted line: ...........
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.Dotted">
            <summary>
                   Border style that consists of a dash and a dot: _._._.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.DashDot">
            <summary>
                   Border style that consists of a series of dashed lines: --------
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.DashDotDot">
            <summary>
                   Border style that consists of a dash and two dots: _.._.._..
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.Solid">
            <summary>
                   Border style that consists of a solid line: ___________
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.Standard">
            <summary>
                   Use border as specified in grid property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderWeight">
            <summary>
                   Specifies the weight of a specific cell border in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderWeight.ExtraThin">
            <summary>
                   A line with 0.25 point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderWeight.Thin">
            <summary>
                   A line with 0.5 point.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderWeight.Medium">
            <summary>
                   A line with 1 point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderWeight.Thick">
            <summary>
                   A line with 1.5 points.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderWeight.ExtraThick">
            <summary>
                   A line with 2.0 points.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderWeight.ExtraExtraThick">
            <summary>
                   A line with 3.0 points.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorder">
            <summary>
            The immutable GridBorder class holds formatting information for individual borders of a cell.
            </summary>
            <remarks>
            You can assign <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> objects to individual borders of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/>
            object in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object.<para/> The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/> class lets you assign
            a different <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> to each <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderSide"/>.
            <para/>
            GridBorder is serializable and ToString and IFormattable are implemented.
            </remarks>
            <example>
            The following code changes border information for cells:
            <code lang="C#">
            <para/>
                        GridBorder border = new GridBorder(GridBorderStyle.Solid, Color.FromArgb(57, 73, 122));
                        model[rowIndex, colIndex].Borders.Bottom = border;
                        model[rowIndex, colIndex].Borders.Right = border;
            </code>
            The following code hides grid lines for specific cells:
            <code lang="C#">
                        GridBorder border = new GridBorder(GridBorderStyle.None);
                        model[rowIndex, colIndex].Borders.Bottom = border;
                        model[rowIndex, colIndex].Borders.Right = border;
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorder.Empty">
            <summary>
            An empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.Clone">
            <summary>
            Creates an exact copy of this object.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.#ctor">
            <overload>
                   Initializes a new instance of the GridBorder class.
            </overload>
            <summary>
                   Initializes a new instance of the GridBorder class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.#ctor(Syncfusion.Windows.Forms.Grid.GridBorderStyle)">
            <summary>
                   Initializes a new instance of the GridBorder class with the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/>.
            </summary>
            <param name="style">
                   The line style to be be applied to the specific border in a cell.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.#ctor(Syncfusion.Windows.Forms.Grid.GridBorderStyle,System.Drawing.Color)">
            <summary>
                   Initializes a new instance of the GridBorder class with the
                   specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> and
                   <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="style">
                   A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> to be be applied to the specific border in a cell.
            </param>
            <param name="color">
                   A <see cref="T:System.Drawing.Color"/> specifying the color of the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.#ctor(Syncfusion.Windows.Forms.Grid.GridBorderStyle,System.Drawing.Color,Syncfusion.Windows.Forms.Grid.GridBorderWeight)">
            <summary>
                   Initializes a new instance of the GridBorder class with the
                   specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> and
                   <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="style">
                   A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> to be be applied to the specific border in a cell.
            </param>
            <param name="color">
                   A <see cref="T:System.Drawing.Color"/> specifying the color of the border.
            </param>
            <param name="weight">
                   A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderWeight"/> specifying the thickness of the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.MakeBlackAndWhite">
            <summary>
            Returns a copy of this border object replacing the color with <see cref="P:System.Drawing.Color.Black"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> with black color.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.ToString">
            <overload>
                   Returns a compact string representation of the GridBorder.
                   All information in GridBorder will be encoded.
            </overload>
            <summary>
                   Returns a compact string representation of the GridBorder.
                   All information in GridBorder will be encoded.
            </summary>
            <returns>
                   A String that can be passed to <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Parse(System.String)"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.ToString(System.IFormatProvider)">
            <summary>
                   Returns a compact string representation of the GridBorder.
                   All information in GridBorder will be encoded.
            </summary>
            <param name="provider">The Format Provider. Ignored.</param>
            <returns>
              A String that can be passed to <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Parse(System.String)"/>.
            </returns>      
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.ToString(System.String)">
            <summary>
                   Returns a compact string representation of the GridBorder.
                   All information in GridBorder will be encoded.
            </summary>
            <returns>
                   A String that can be passed to <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Parse(System.String)"/>.
            </returns>
            <param name="format">"Compact" for compact text; default is full text version.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.ToString(System.String,System.IFormatProvider)">
            <summary>
                   Returns a compact string representation of the GridBorder.
                   All information in GridBorder will be encoded.
            </summary>
            <param name="format">"Compact" for compact text; default is full text version.</param>
            <param name="formatProvider">Format Provider. Ignored.</param>
            <returns>
                   A String that can be passed to <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Parse(System.String)"/>.
            </returns>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.Parse(System.String)">
            <summary>
                   Creates a GridBorder from a string.
            </summary>
            <remarks>
                   The output from <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.ToString"/> should be consumable by <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Parse(System.String)"/>.
            </remarks>
            <param name="parseStr">The string to parse.</param>
            <returns>
                   A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> that corresponds to parseStr.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.Equals(System.Object)">
            <summary>
                   Return True if the GridBorder object passed is equal.
            </summary>
            <param name="o">The object to compare to.</param>
            <returns>
                   True if it is equal; False otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.op_Equality(Syncfusion.Windows.Forms.Grid.GridBorder,Syncfusion.Windows.Forms.Grid.GridBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Equals(System.Object)">
                   The basic == operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
                 returns bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.op_Inequality(Syncfusion.Windows.Forms.Grid.GridBorder,Syncfusion.Windows.Forms.Grid.GridBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Equals(System.Object)">
                   The basic != operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
              returns bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.Compare(Syncfusion.Windows.Forms.Grid.GridBorder,Syncfusion.Windows.Forms.Grid.GridBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Grid.GridBorder.Equals(System.Object)">
                   The basic == operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
             returns bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.GetHashCode">
            <summary>
                   Returns the hash code for the current GridBorder instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the contents of this object into an XML stream.
            </summary>
            <param name="writer">Represents the XML stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Not implemented and returns NULL.
            </summary>
            <returns>returns xml schema</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorder.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the contents of this object from an XML stream.
            </summary>
            <param name="reader">Represents the XML stream.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBorder.Info">
            <summary>
            Gets of ToString method.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBorder.IsEmpty">
            <summary>
             Gets a value indicating whether this GridBorder is uninitialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBorder.Style">
            <summary>
                Gets what type of border line the cell has. This value
                comes from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> enumeration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBorder.Weight">
            <summary>
                Gets the weight of the border the cell has. This value
                comes from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderWeight"/> enumeration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBorder.Color">
            <summary>
                Gets the color to be used for the cell border. This value
                comes from the <see cref="T:System.Drawing.Color"/> enumeration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBorder.Width">
            <summary>
               Gets the width in pixels for the cell border.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderCodeDomSerializer">
            <summary>
                   A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer"/> for <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderCodeDomSerializer.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <override/>
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
            <param name="manager">A serialization manager interface that is used during the
            deserialization process. </param>
            <param name="codeObject">A serialized CodeDOM object to deserialize. </param>
            <returns>
            The deserialized CodeDOM object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <override/>
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
            <param name="manager">The serialization manager to use during serialization.
            </param>
            <param name="value">The object to serialize. </param>
            <returns>
            A CodeDOM object representing the object that has been serialized.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBorderCodeDomSerializer.Default">
            <summary>
            Gets a default global instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderCodeDomSerializer"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderConverter">
            <summary>
                 GridBorderConverter is a class that can be used to convert
                 border from one data type to another. Access this
                 class through the TypeDescriptor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.#ctor">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the
            type you want to convert to. </param>       
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If
            null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the
            value parameter to. </param>       
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert an object of the given type to the
            type of this converter, using the specified context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type
            you want to convert from. </param>       
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <override/>
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to
            use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>        
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <override/>
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"/> is associated with, using the
            specified context, given a set of property values for the object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format
            context. </param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary"/>
            of new property values. </param>
            <returns>
            An <see cref="T:System.Object"/> representing the given <see cref="T:System.Collections.IDictionary"/>, or null if the object cannot be
            created. This method always returns null.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format
            context. </param>
            <returns>
            true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value; otherwise, false. Always returns true.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <override/>
            <summary>
            Returns a collection of preoperties for the type specified.
            </summary>
            <param name="context">Format context.</param>
            <param name="value">The value Type.</param>
            <param name="attributes">An array of System.Attribute that will be used as a filter.</param>
            <returns>Property descriptor collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">Format context. </param>
            <returns>
            true if this method should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderPaint">
            <summary>
            Provides the <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorderPaint.DrawRectangle(System.Drawing.Graphics,Syncfusion.Windows.Forms.Grid.GridBorder,System.Drawing.Rectangle,System.Drawing.Color,Syncfusion.Windows.Forms.Grid.GridBorderSide)"/> routine for drawing a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderPaint.DrawRectangle(System.Drawing.Graphics,Syncfusion.Windows.Forms.Grid.GridBorder,System.Drawing.Rectangle,System.Drawing.Color,Syncfusion.Windows.Forms.Grid.GridBorderSide)">
            <overload>
            Draws a rectangle with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.
            </overload>
            <summary>
            Draws a rectangle with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context</param>
            <param name="border">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.</param>
            <param name="r"><see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill. </param>
            <param name="backColor">The back color.</param>
            <param name="borderSide">Specifies which border sides to draw.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderPaint.DrawRectangle(System.Drawing.Graphics,Syncfusion.Windows.Forms.Grid.GridBorder,System.Drawing.Rectangle,System.Drawing.Color,Syncfusion.Windows.Forms.Grid.GridBorderSide,System.Boolean)">
            <summary>
            Draws a rectangle with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="border">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/>.</param>
            <param name="r"><see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill. </param>
            <param name="backColor">The back color.</param>
            <param name="borderSide">Specifies which border sides to draw.</param>
            <param name="usePenForThinLines">True if a <see cref="T:System.Drawing.Pen"/> should be used for thin lines instead
            of an optimized method that uses brushes.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderSide">
            <summary>
            Specifies the sides of a rectangle to apply a border to.
            </summary>
            <remarks>
                  Use the members of this enumeration with the <see cref="M:Syncfusion.Windows.Forms.Grid.GridBorderPaint.DrawRectangle(System.Drawing.Graphics,Syncfusion.Windows.Forms.Grid.GridBorder,System.Drawing.Rectangle,System.Drawing.Color,Syncfusion.Windows.Forms.Grid.GridBorderSide)"/>
                  method. 
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderSide.Left">
            <summary>
               <para>
                  A three-dimensional border on
                  the left edge
                  of the control.
               </para>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderSide.Top">
            <summary>
               <para>
                  A three-dimensional border on
                  the top edge
                  of the rectangle.
               </para>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderSide.Right">
            <summary>
               <para>
                  A three-dimensional border on
                  the right side
                  of the rectangle.
               </para>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderSide.Bottom">
            <summary>
               <para>
                  A three-dimensional border on
                  the bottom side
                  of the rectangle.
               </para>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBorderSide.All">
            <summary>
               <para>
                  A three-dimensional border on all four
                  edges and fill the middle of
                  the rectangle with
                  the color defined for three-dimensional controls.
               </para>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.TopProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Top"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.LeftProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Left"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.BottomProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Bottom"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.RightProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Right"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore"/>
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.Clone">
            <override/>
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>Copy of current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for borders in a cell. Each border side of
            the cell can be configured individually with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> value. Border sides that
            have not been initialized will inherit default values from a base style.
            </summary>
            <example>
            The following code changes border information for cells:
            <code lang="C#">
            <para/>
                        GridBorder border = new GridBorder(GridBorderStyle.Solid, Color.FromArgb(57, 73, 122));
                        model[rowIndex, colIndex].Borders.Bottom = border;
                        model[rowIndex, colIndex].Borders.Right = border;
            </code>
            The following code hides grid lines for specific cells:
            <code lang="C#">
                        GridBorder border = new GridBorder(GridBorderStyle.None);
                        model[rowIndex, colIndex].Borders.Bottom = border;
                        model[rowIndex, colIndex].Borders.Right = border;
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject"/> is an abstract base class for classes
            to be used as sub-objects in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject"/> is derived from <see cref="T:Syncfusion.Styles.StyleInfoBase"/>
            and thus provides the same easy way to provide properties that can inherit values
            from base styles at run-time.<para/>
            The difference is that <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject"/> supports this inheritance
            mechanism as a sub-object from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>. A sub-object needs to
            have knowledge about its parent object and be able to walk the base styles from the
            parent object.<para/>
            Examples for implementation of <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject"/> are the font and border
            classes in Essential Grid.<para/>
            Programmers can derive their own style classes from <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject"/>
            and add type-safe (and intelli-sense)
            supported custom properties to the style class. If you write your own
            SpinButton class that needs individual properties, simply add a CellSpinButtonInfo
            class as subobject. If you derive CellSpinButtonInfo from GridStyleInfoSubObject,
            your new object will support property inheritance from base styles.
            <para/>
            See the overview for <see cref="T:Syncfusion.Styles.StyleInfoBase"/> for further discussion about style objects.
            </remarks>
            <example>The following example shows how you can use the GridFontInfo class in Essential Grid:
            <code lang="C#">
                    standard.Font.Facename = "Helvetica";
                    model[1, 3].Font.Bold = true;
                    string faceName = model[1, 3].Font.Facename; // any cell inherits standard style
                    Console.WriteLIne(faceName); // will output "Helvetica"
                    Console.WriteLIne(model[1, 3].Font.Bold); // will output "true"
                    Console.WriteLIne(model[1, 3].Font.HasFaceName); // will output "False"
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoStore"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Styles.StyleInfoBase"/>.
            <param name="store">A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> that holds data for this object.</param>
            All changes in this style object will saved in the <see cref="T:Syncfusion.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.#ctor(Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.GetGridStyleInfo">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> this subobject belongs to.
            </summary>
            <returns>The parent style object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.GetCellIdentity">
            <summary>
            Return the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> with identity information about the parent style.
            </summary>
            <returns>The parent style's identity object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.GetGridModel">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this style belongs to or NULL if the style is used outside a grid model.
            </summary>
            <returns>A reference to the grid model or NULL if the style is used outside a grid model.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.GetActiveGridView">
            <summary>
            Returns the active <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this style belongs to or NULL
            if the style is used outside a grid model.
            </summary>
            <returns>A reference to the grid control base or NULL if the style is used outside a grid model.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.ToString">
            <override/>
            <summary>
            Returns a string holding the current object.
            </summary>
            <returns>String representation of the current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObject.Info">
            <summary>
            Gets results of ToString method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridBordersInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/></param>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>The copy of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Default"/>
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.ResetAll">
            <summary>
            Resets all four border sides with one command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.ResetTop">
            <summary>
            Resets the top border
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.ResetLeft">
            <summary>
            Resets the left border
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.ResetBottom">
            <summary>
            Resets the bottom border
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.ResetRight">
            <summary>
            Resets the right border
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the default border info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridBordersInfo.GetDefaultStyle"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.All">
            <summary>
            Sets all four border sides with one command.
            </summary>
            <example>
            <code lang="C#">
            model[2, 2].Borders.All = new GridBorder(GridBorderStyle.Solid, Color.FromArgb(100, 238, 122, 3));
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Item(Syncfusion.Windows.Forms.Grid.GridBorderSide)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorder"/> for the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderSide"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Top">
            <summary>
            Gets or sets the top border
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.HasTop">
            <summary>
            Gets a value indicating whether the top border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Left">
            <summary>
            Gets or sets the left border
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.HasLeft">
            <summary>
            Gets a value indicating whether the left border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Bottom">
            <summary>
            Gets or sets the bottom border
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.HasBottom">
            <summary>
            Gets a value indicating whether the bottom border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.Right">
            <summary>
            Gets or sets the right border
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBordersInfo.HasRight">
            <summary>
            Gets a value indicating whether the right border has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderStyleEditor">
            <summary>
               Provides a <see cref="T:System.Drawing.Design.UITypeEditor"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> enumeration.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderStyleEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"/> is implemented; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderStyleEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBorderWeightEditor">
            <summary>
               Provides a <see cref="T:System.Drawing.Design.UITypeEditor"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderWeight"/> enumeration.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderWeightEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"/> is implemented; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBorderWeightEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance">
            <summary>
            Specifies the 3D-look for a cell.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/> enumeration represents the different options for the appearance of a cell
            that you can specify with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Flat">
            <summary>
            Specifies that the cell is drawn flat (default).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Raised">
            <summary>
            Specifies that the cell is drawn with a raised border (default for row and column headers).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Sunken">
            <summary>
            Specifies that the cell is drawn with a sunken border.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellFormatEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellFormatEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellFormatEditor.FormatMask.Mask">
            <summary>
            Gets or sets this is the format string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellFormatEditor.FormatMask.Description">
            <summary>
            Gets or sets this is the format description.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellFormatEditor.FormatMask.Type">
            <summary>
            Gets or sets this is the type.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellFormatEditor.FormatUI.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellFormatEditor.FormatUI.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>
            Process Key Preview
            </summary>
            <param name="m">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the window message to process.</param>
            <returns>
            true if the message was processed by the control; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter"/> implements a <see cref="T:System.ComponentModel.TypeConverter"/>
            for <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            </summary>
            <remarks>
            In its current implementation, the cell type name converter loads all cell
            types from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/>. So, in order to make
            new cell types appear in a property grid, <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/>
            provides a mechanism to register cell type names. TODO: Is this correct?
            <para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter"/> returns a list of cell types. If you display
            a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> in a <see cref="T:System.Windows.Forms.PropertyGrid"/>, you will be able
            to drop-down a choicelist with cell types for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> 
            property.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Returns whether this converter can convert an object of the given type to the
            type of this converter, using the specified context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type
            you want to convert from. </param>        
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <override/>
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to
            use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>       
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns a collection of standard values for the data type this type converter is
            designed for when provided with a format context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context that can be used to extract additional information about the environment
            from which this converter is invoked. This parameter or properties of this
            parameter can be null. </param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
            that holds a standard set of valid values, or null if the data type does not
            support a standard set of values.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter.GetStylesMap(Syncfusion.Styles.StyleInfoIdentityBase)">
            <summary>
            To get the base styles map.
            </summary>
            <param name="identity">cell style identifier.</param>
            <returns>An object of type GridBaseStylesMap.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether the collection of standard values returned from <see
            cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an
            exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <returns>returns False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellTypeNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <override/>
            <summary>
            Returns whether this object supports a standard set of values that can be picked
            from a list, using the specified context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format
            context. </param>
            <returns>returns True.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.NumberRequiredProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.NumberRequired"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.MinimumProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Minimum"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.MaximumProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Maximum"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.ErrorMessageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ErrorMessage"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.Clone">
            <override/>
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>A copy of the current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for validation of text entry in a cell. 
            <para/>Each property in this sub object can be configured individually. Properties that
            have not been initialized will inherit default values from a base style.
            </summary>
            <example>
            The following code changes validation information for cells:
            <code lang="C#">
                        model[rowIndex, 1].Text = "Positive numbers";
                        RowStyles[rowIndex].CustomStyleProperties.Add(new GridValidateNumberStyleProperty(true, 1, float.NaN, "Please enter a number greater than 0!"));
                        model.RowStyles[rowIndex].ValidateValue.NumberRequired = true;
                        model.RowStyles[rowIndex].ValidateValue.Minimum = 0;
                        model.RowStyles[rowIndex].ValidateValue.Maximum = float.NaN;
                        model.RowStyles[rowIndex].ValidateValue.ErrorMessage = "Please enter a number greater than 0!";
                        rowIndex++;
                        model[rowIndex, 1].Text = "Validation (1-100 valid range)";
                        model.RowStyles[rowIndex].ValidateValue = new GridCellValidateValueInfo(true, 1, 100, "Please enter a number between 1 and 100!");
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.#ctor(System.Boolean,System.Double,System.Double,System.String)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/> object.
            </overload>
            <summary>
            Initializes a new GridCellValidateValueInfo object with validation criteria.
            </summary>
            <param name="numberRequired">true if only number allows; false if any characters</param>
            <param name="minimum">The minimum value allowed for the cell.</param>
            <param name="maximum">The maximum value allowed for the cell.</param>
            <param name="errorMessage">A error message to be displayed if entered text does not meet criteria.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.#ctor">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>Makes an exact copy of the current object.</summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">Identifier for this object.</param>
            <returns>Copy of current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Default"/>
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ResetNumberRequired">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.NumberRequired"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ResetMinimum">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Minimum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ResetMaximum">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Maximum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ResetErrorMessage">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ErrorMessage"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the validation info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.GetDefaultStyle"/>.
            <para/>
            Default settings are: <para/>
            <list type="table">
            <listheader><term>Property</term><description>Value</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.NumberRequired"/></term><description>false</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Minimum"/></term><description>double.MinValue</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Maximum"/></term><description>double.MaxValue</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ErrorMessage"/></term><description>"Value is out of range"</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.NumberRequired">
            <summary>
            Gets or sets a value indicating whether numeric entry is allowed. True if only numeric entry is allowed; false if any characters are allowed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.HasNumberRequired">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.NumberRequired"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Minimum">
            <summary>
            Gets or sets the minimum value allowed for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.HasMinimum">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Minimum"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Maximum">
            <summary>
            Gets or sets the maximum value allowed for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.HasMaximum">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.Maximum"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ErrorMessage">
            <summary>
            Gets or sets the mimium value allowed for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.HasErrorMessage">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo.ErrorMessage"/> property is initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.CheckedValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.CheckedValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.UncheckedValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.UncheckedValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.IndetermValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.IndetermValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.FlatLookProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.FlatLook"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.Clone">
            <override/>
            <summary>Creates an exact copy of the current object.</summary>
            <returns>Copy of current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object with options to customize
            checkbox cell type behavior in a cell. <para/>
            Each property in this sub object can be configured individually. Properties that
            have not been initialized will inherit default values from a base style.
            </summary>
            <example>
            The following code changes checkbox behavior for cells:
            <code lang="C#">
                        model.TableStyle.CheckBoxOptions = new GridCheckBoxCellInfo("True", "False", string.Empty, false);
                        model[rowIndex, 1].CheckBoxOptions.FlatLook = true;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.#ctor(System.String,System.String,System.String,System.Boolean)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/> object.
            </overload>
            <summary>
            Initializes a new GridCellValidateValueInfo object with checkbox options.
            </summary>
            <param name="checkedValue">The text value that represents checked state.</param>
            <param name="uncheckedValue">The text value that represents unchecked state.</param>
            <param name="indetermValue">The text value that represents indeterminated state.</param>
            <param name="flatLook">true if you want to draw flat checkbox; false otherwise.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.#ctor">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">the identifier for this object.</param>
            <returns>A copy of current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.Default"/>
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.ResetFlatLook">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.FlatLook"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.ResetCheckedValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.CheckedValue"/> property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.ResetUncheckedValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.UncheckedValue"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.ResetIndetermValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.IndetermValue"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the default border info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.GetDefaultStyle"/>.
            <para/>
            Default settings are: <para/>
            <list type="table">
            <listheader><term>Property</term><description>Value</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.CheckedValue"/></term><description>"1"</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.UncheckedValue"/></term><description>"0"</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.IndetermValue"/></term><description>""</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.FlatLook"/></term><description>true</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.FlatLook">
            <summary>
            Gets or sets a value indicating whether checkbox shall be drawn with flat-look
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.HasFlatLook">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.FlatLook"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.CheckedValue">
            <summary>
            Gets or sets the text value that represents checked state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.HasCheckedValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.CheckedValue"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.UncheckedValue">
            <summary>
            Gets or sets the text value that represents unchecked state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.HasUncheckedValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.UncheckedValue"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.IndetermValue">
            <summary>
            Gets or sets the text value that represents indeterminated state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.HasIndetermValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo.IndetermValue"/> property has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for currency textbox properties in a cell. 
            <para/>Each property in this sub object can be configured individually. Properties that
            have not been initialized will inherit default values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.#ctor">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>Copy of current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.Default"/>
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencyDecimalDigits">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalDigits"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetNegativeSign">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeSign"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencyDecimalSeparator">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalSeparator"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencyGroupSeparator">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSeparator"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencyGroupSizes">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSizes"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencyNegativePattern">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNegativePattern"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencyPositivePattern">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyPositivePattern"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencySymbol">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencySymbol"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetCurrencyNumberDigits">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNumberDigits"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetUseCultureInfo">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.UseCultureInfo"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetNegativeColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetPositiveColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.PositiveColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetClipMode">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ClipMode"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetNullString">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullString"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ResetNullValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullValue"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the validation info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.GetDefaultStyle"/>.
            <para/>
            Default settings for US culture are: <para/>
            <list type="table">
            <listheader><term>Property</term><description>Value</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.UseCultureInfo"/></term><description>false</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalDigits"/></term><description>2</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeSign"/></term><description>"-"</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalSeparator"/></term><description>"."</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSeparator"/></term><description>","</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSizes"/></term><description></description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNegativePattern"/></term><description>0</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyPositivePattern"/></term><description>0</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencySymbol"/></term><description>"$"</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNumberDigits"/></term><description>27</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeColor"/></term><description>Red</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.PositiveColor"/></term><description>Black</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ClipMode"/></term><description>ExcludeFormatting</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullString"/></term><description>"0"</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NumberFormatInfoObject">
            <summary>
            Gets or sets the NumberFormaInfo object that will be used for formatting the
            currency string.
            </summary>
            <remarks>
            This property will affect or reflect the settings of the following properties
            in this object:
            <list type="table">
            <listheader><term>Property</term><description>Default Value</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalDigits"/></term><description>2</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeSign"/></term><description>"-"</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalSeparator"/></term><description>"."</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSeparator"/></term><description>","</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSizes"/></term><description></description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNegativePattern"/></term><description>0</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyPositivePattern"/></term><description>0</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencySymbol"/></term><description>"$"</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalDigits">
            <summary>
            Gets or sets the maximum number of digits for the decimal portion of the currency.
            </summary>
            <remarks>
            The US dollar requires 2 decimal points to accommodate the smallest 
            denomination and this property will have the value 2 in this case. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencyDecimalDigits">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalDigits"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeSign">
            <summary>
            Gets or sets the sign that is to be used to indicate a negative value.
            </summary>
            <remarks>
            This value is initially set from the <see cref="T:System.Globalization.NumberFormatInfo"/> 
            and can be changed based on your requirements or based on the locale.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasNegativeSign">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeSign"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalSeparator">
            <summary>
            Gets or sets the decimal separator character that will be used for the display.
            </summary>
            <remarks>
            This value is initially set from the <see cref="T:System.Globalization.NumberFormatInfo"/> 
            and can be changed based on your requirements or based on the locale.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencyDecimalSeparator">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalSeparator"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSeparator">
            <summary>
            Gets or sets this property specifies the separator to be used for grouping digits.
            </summary>
            <remarks>
            This value is initially set from the <see cref="T:System.Globalization.NumberFormatInfo"/> 
            and can be changed based on your requirements or based on the locale.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencyGroupSeparator">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSeparator"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSizes">
            <summary>
            Gets or sets this property specifies the grouping of CurrencyDigits in the CurrencyTextBox.
            </summary>
            <remarks>
            This value is initially set from the <see cref="T:System.Globalization.NumberFormatInfo"/> 
            and can be changed based on your requirements or based on the locale.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencyGroupSizes">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSizes"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNegativePattern">
            <summary>
            Gets or sets this property specifies the pattern to use when the value is negative.
            </summary>
            <remarks>
            This value is initially set from the <see cref="T:System.Globalization.NumberFormatInfo"/> 
            and can be changed based on your requirements or based on the locale.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencyNegativePattern">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNegativePattern"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyPositivePattern">
            <summary>
            Gets or sets this property specifies the pattern to use when the value is positive.
            </summary>
            <remarks>
            This value is initially set from the <see cref="T:System.Globalization.NumberFormatInfo"/> 
            and can be changed based on your requirements or based on the locale.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencyPositivePattern">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyPositivePattern"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencySymbol">
            <summary>
            Gets or sets this property specifies the currency symbol to be used in the CurrencyTextBox.
            </summary>
            <remarks>
            This value is initially set from the <see cref="T:System.Globalization.NumberFormatInfo"/> 
            and can be changed based on your requirements or based on the locale.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencySymbol">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencySymbol"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNumberDigits">
            <summary>
            Gets or sets the number of digits for the number part. This is not part of the globalization structure.
            </summary>
            <remarks>
            This value is initially set based on the maximum value of the
            Currency data type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasCurrencyNumberDigits">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNumberDigits"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.UseCultureInfo">
            <summary>
            Gets or sets a value indicating whether NumberFormat should be based on Grid's Style or individual properties of this object
            true if <see cref="T:System.Globalization.NumberFormatInfo"/> should be based on <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>;
            false if <see cref="T:System.Globalization.NumberFormatInfo"/> should be based on individual properties of this object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasUseCultureInfo">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.UseCultureInfo"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeColor">
            <summary>
            Gets or sets this property specifies the forecolor when the current value is negative.
            </summary>
            <remarks>
            You can customize the look and provide feedback to the user by defining
            a different color for the negative numbers.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasNegativeColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.PositiveColor">
            <summary>
            Gets or sets this property specifies the forecolor when the current value is positive.
            </summary>
            <remarks>
            You can customize the look and provide feedback to the user by defining
            a different color for the positive numbers.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasPositiveColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.PositiveColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ClipMode">
            <summary>
            Gets or sets whether to include or exclude the literal characters in the input mask when doing a  or copy command.
            </summary>
            <remarks>
            This property is used when copying to the clipboard and also the
            <see cref="P:System.Windows.Forms.Control.Text"/> property.
            <para>
            When databinding the Text property it is advisable to have the ClipMode
            set to <see cref="F:Syncfusion.Windows.Forms.Tools.CurrencyClipModes.ExcludeFormatting"/> in cases where
            the data source does not accept the formatted text.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasClipMode">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ClipMode"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullString">
            <summary>
            Gets or sets the null string to be displayed
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasNullString">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullString"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullValue">
            <summary>
            Gets or sets the value to be saved when the modified display text matches the null string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.HasNullValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullValue"/> property is initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencyDecimalDigitsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalDigits"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.NegativeSignProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeSign"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencyDecimalSeparatorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyDecimalSeparator"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencyGroupSeparatorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSeparator"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencyGroupSizesProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyGroupSizes"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencyNegativePatternProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNegativePattern"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencyPositivePatternProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyPositivePattern"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencySymbolProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencySymbol"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.CurrencyNumberDigitsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.CurrencyNumberDigits"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.UseCultureInfoProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.UseCultureInfo"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.NegativeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NegativeColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.PositiveColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.PositiveColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.ClipModeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.ClipMode"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.NullStringProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullString"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.NullValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo.NullValue"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.Clone">
            <override/>
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>Copied object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFontInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.FacenameProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Facename"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.SizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Size"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.BoldProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Bold"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.ItalicProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Italic"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.UnderlineProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Underline"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.StrikeoutProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Strikeout"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.OrientationProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Orientation"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.UnitProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Unit"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfoStore"/>
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.Clone">
            <override/>
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>Copied object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFontInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for font settings in a cell. 
            Each font property of the cell can be configured individually. <para/>
            Font properties that have not been initialized will inherit default 
            values from a base style.
            </summary>
            <example>
            The following code changes font information for cells:
            <code lang="C#">
            <para/>
                        model[rowIndex, colIndex].Font.Facename = "Arial";
                        model[rowIndex, colIndex].Font.Bold = true;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.Dispose">
            <summary>
            Releases the all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridFontInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/></param>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.#ctor(System.Drawing.Font)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>  object and initializes its FaceName, FontStyle, Size and
            Unit from the specified font object.
            </summary>
            <param name="font">A <see cref="T:System.Drawing.Font"/> with font information.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">Identifier for this object.</param>
            <returns>Copy of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.SizeInWorldUnit(System.Drawing.Font)">
            <summary>
            Gets the em-size of the specified font object in world-units.
            </summary>
            <param name="font">The font object.</param>
            <returns>The size in world units.</returns>
            <remarks>
            If you need to have the grid clip text in cells device-independent, thus
            making the print output look exactly the same as screen output you should
            specify GraphicsUnit.World for <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Unit"/> of the standard
            styles <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> object.
            </remarks>
            <example>
            In the following code snippet, the GraphicsUnit for standard font for a grid control
            is change to GraphicsUnit.World.
            <code lang="C#">
            GridStyleInfo standard = model.BaseStylesMap["Standard"].StyleInfo;
            Font dfont = Control.DefaultFont;
            standard.Font.Unit = GraphicsUnit.World;
            standard.Font.Facename = dfont.Name;
            standard.Font.Size = GridFontInfo.SizeInWorldUnit(dfont);
            </code>
            <code lang="VB">
            Dim standard As GridStyleInfo = model.BaseStylesMap("Standard").StyleInfo
            Dim dfont As Font = Control.DefaultFont
            standard.Font.Unit = GraphicsUnit.World
            standard.Font.Facename = dfont.Name
            standard.Font.Size = GridFontInfo.SizeInWorldUnit(dfont)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetGdipFont">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetFacename">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Facename"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetSize">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Size"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetOrientation">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetBold">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Bold"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetItalic">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Italic"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetUnderline">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Underline"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetStrikeout">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Strikeout"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.ResetUnit">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Unit"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the default border info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridFontInfo.GetDefaultStyle"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.GdipFont">
            <summary>
            Gets or creates a cached GDI+ Font generated from font information of
            this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.FontStyle">
            <summary>
            Gets or sets style information for the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Facename">
            <summary>
            Gets or sets the face name of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasFacename">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Facename"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Size">
            <summary>
            Gets or sets the size in pixels of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasSize">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Size"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Orientation">
            <summary>
            Gets or sets the orientation of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasOrientation">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Orientation"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Bold">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object is bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasBold">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Bold"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Italic">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object is italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasItalic">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Italic"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Underline">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object is underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasUnderline">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Underline"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Strikeout">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object 
            should draw a horizontal line through the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasStrikeout">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Strikeout"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Unit">
            <summary>
            Gets or sets the  graphics unit of this <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.HasUnit">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFontInfo.Unit"/> property has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFontInfoEditor">
            <summary>
              Provides a user interface to select and configure a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfoEditor.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfoEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
              <para>Gets the editor style used by the <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</para>
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <returns>
              <para>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that
            indicates the style of editor used by <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />. </para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFontInfoEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
              <para>Edits the value of the specified object using the editor style
            indicated by <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</para>
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
              <para> The new value of the object. If the value of the object has not changed,
            this should return the same object that was passed to it.</para>
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaTag">
            <summary>
            Support class that encapsulates the parsed formula and computed value
            for a cell.
            </summary>
            <remarks>
            This class holds the parsed value of the formula in its Formula property,
            and holds the computed value of the formula in its Text property. Each
            cell that is a formula cell stores a GridFormulaTag object in its GridStyleInfo.FormulaTag
            property. When the cell is drawn, if its GridFormulaTag.Formula property is empty,
            the formula in the GridStyleInfo.Text property is parsed, and placed into the
            GridFormulaTag.Formula property. If the GridFormulaTag.Text property is empty, the 
            GridFormulaTag.Formula is computed, and the computed value is stored in GridFormulaTag.Text.
            Thus, formulas are parsed and computed only when the GridFormulaTag member is empty,
            otherwise, the stored values are used. Emptying these properties is how the
            Formula Engine initiates a refresh of the calculated values when dependent
            cells are modified.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaTag.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaTag.#ctor(System.String,System.String)">
            <summary>
            Constructor for GridFormulaTag.
            </summary>
            <param name="formula">The parsed formula.</param>
            <param name="text">The computed value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaTag.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for GridFormulaTag.
            </summary>
            <param name="formula">The parsed formula.</param>
            <param name="text">The computed value.</param>
            /// <param name="row">The row at which this formula is being parsed.</param>
            <param name="col">The col at which this formula is being parsed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaTag.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaTag"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaTag.ToString">
            <summary>
            Overriden ToString method.
            </summary>
            <returns>Displays the parsed formula and computed value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaTag.Clone">
            <summary>
            Creates a copy of this object.
            </summary>
            <returns>A copy of this object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaTag.Formula">
            <summary>
            Gets or sets the parsed formula.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaTag.ParsedRow">
            <summary>
            Gets or sets the column where the formula was last parsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaTag.ParsedCol">
            <summary>
            Gets or sets the column where the formula was last parsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaTag.Text">
            <summary>
            Gets or sets text representing the computed value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment">
            <summary>
            Specifies the horizontal alignment of contents in a cell.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/> enumeration represents the different horizontal alignment options for contents of a cell
            that you can specify with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment.Left">
            <summary>
            Specifies that the contents of a cell are aligned with the left.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment.Right">
            <summary>
            Specifies that the contents of a cell are aligned with the right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment.Center">
            <summary>
            Specifies that the contents of a cell are aligned with the center.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.LeftProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Left"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.TopProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Top"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.RightProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Right"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.BottomProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Bottom"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore"/>
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.Clone">
            <override/>
            <summary>Creates a copy of the current object.</summary>
            <returns>A duplicate of current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for margins in a cell. Each margin side of
            the cell can be configured individually with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> value. Margin sides that
            have not been initialized will inherit default values from a base style.
            </summary>
            <example>
            The following code changes margin information for cells:
            <code lang="C#">
            <para/>
                        GridMargins margins = new GridMargins(1, 1, 2, 2);
                        model[rowIndex, colIndex].Margins = new GridMarginsInfo(margins);
                        model[rowIndex, colIndex+1].Margins.Right = 2;
                        model[rowIndex, colIndex+1].Margins.Left = 2;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/> and saves left, top, right and bottom margins.
            </summary>
            <param name="left">Left margin.</param>
            <param name="top">The top margin.</param>
            <param name="right">The right margin.</param>
            <param name="bottom">The bottom margin.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.#ctor(Syncfusion.Windows.Forms.Grid.GridMargins)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/> and copies settings from a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> object.
            </summary>
            <param name="margins">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> object used to initialize the current object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.#ctor">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.ToMargins">
            <summary>
            Converts this object to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> object.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> object filled with the current objects settings.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>Creates an exact copy of the current object.</summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">An identifier for this object.</param>
            <returns>A duplicate object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.ResetTop">
            <summary>
            Resets the top margin
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.ResetLeft">
            <summary>
            Resets the left margin
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.ResetBottom">
            <summary>
            Resets the bottom margin
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.ResetRight">
            <summary>
            Resets the right margin
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the default margin info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.GetDefaultStyle"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Empty">
            <summary>
            Gets a empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Top">
            <summary>
            Gets or sets the top margin
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.HasTop">
            <summary>
            Gets a value indicating whether the top margin has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Left">
            <summary>
            Gets or sets the left margin
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.HasLeft">
            <summary>
            Gets a value indicating whether the left margin has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Bottom">
            <summary>
            Gets or sets the bottom margin
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.HasBottom">
            <summary>
            Gets a value indicating whether the bottom margin has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.Right">
            <summary>
            Gets or sets the right margin
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMarginsInfo.HasRight">
            <summary>
            Gets a value indicating whether the right margin has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMargins">
            <summary>
            This is an immutable object that provides storage for top, left
            bottom and right margins in a cell.
            </summary>
            <remarks>
            This is different from <see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>. This is a stand-alone
            class that does not implement any inheritance mechanism. It simply holds the
            specified values.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> object.
            </overload>
            <summary>
              <para> Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> class.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              <para> Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> class with the specified left, right, top, and bottom
            margins.</para>
            </summary>
            <param name="left">The left margin.</param>        
            <param name="top">The top margin.</param>
            <param name="right">The right margin.</param>
            <param name="bottom">The bottom margin.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.SwapRightToLeft">
            <summary>
            Swaps right and left margins.
            </summary>
            <returns> A copy of this object with right and left margins swapped.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.Clone">
            <summary>
              <para>
             Retrieves a duplicate of this object, member by member.
            </para>
            </summary>
            <returns>
              <para>
             A duplicate of this object.
            </para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.GetHashCode">
            <override/>
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.Equals(System.Object)">
            <override/>
            <summary>Checks if the specified object and the current object are equal.</summary>
            <param name="obj">An object to compare.</param>
            <returns>True if they are equal; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.ToString">
            <override/>
            <summary>Returns a string holding the current object.</summary>
            <returns>String representation of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.AddMargins(System.Drawing.Size,Syncfusion.Windows.Forms.Grid.GridMargins)">
            <overload>
            Adds margins to a given <see cref="T:System.Drawing.Size"/> or <see cref="T:System.Drawing.Rectangle"/>
            </overload>
            <summary>
            Adds margins to a given <see cref="T:System.Drawing.Size"/>
            </summary>
            <param name="size">The origial <see cref="T:System.Drawing.Size"/>.</param>
            <param name="margins">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> to be added.</param>
            <returns>The resulting <see cref="T:System.Drawing.Size"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.RemoveMargins(System.Drawing.Size,Syncfusion.Windows.Forms.Grid.GridMargins)">
            <overload>
            Removes margins from a given <see cref="T:System.Drawing.Size"/> or <see cref="T:System.Drawing.Rectangle"/>
            </overload>
            <summary>
            Removes margins from a given <see cref="T:System.Drawing.Size"/>
            </summary>
            <param name="size">The origial <see cref="T:System.Drawing.Size"/>.</param>
            <param name="margins">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> to be removed.</param>
            <returns>The resulting <see cref="T:System.Drawing.Size"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.AddMargins(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridMargins)">
            <summary>
            Adds margins to a given <see cref="T:System.Drawing.Rectangle"/>
            </summary>
            <param name="bounds">The origial <see cref="T:System.Drawing.Rectangle"/>.</param>
            <param name="margins">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> to be added.</param>
            <returns>The resulting <see cref="T:System.Drawing.Rectangle"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMargins.RemoveMargins(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridMargins)">
            <summary>
            Removes margins from a given <see cref="T:System.Drawing.Rectangle"/>
            </summary>
            <param name="bounds">The origial <see cref="T:System.Drawing.Rectangle"/>.</param>
            <param name="margins">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridMargins"/> to be removed.</param>
            <returns>The resulting <see cref="T:System.Drawing.Rectangle"/>.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMargins.Info">
            <summary>
            Gets results of ToString method.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMargins.Left">
            <summary>
            <para>Gets the left margin.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMargins.Right">
            <summary>
            Gets the right margin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMargins.Top">
            <summary>
              <para> Gets the top margin.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMargins.Bottom">
            <summary>
              <para> Gets the bottom margin.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMargins.Width">
            <summary>
            Gets the total of the left and right margin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMargins.Height">
            <summary>
            Gets the total of the top and bottom margin.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for masked edit properties in a cell. 
            <para/>Each property in this sub object can be configured individually. Properties that
            have not been initialized will inherit default values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.#ctor">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>Creates an exact copy of the current object.</summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">An identifier for the current object.</param>
            <returns>A copy of the current object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.Default"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetAllowPrompt">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.AllowPrompt"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetClipMode">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ClipMode"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetDateSeparator">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateSeparator"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetDateTimeFormatInfoObject">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateTimeFormatInfoObject"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetDecimalSeparator">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DecimalSeparator"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetMask">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.Mask"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetMaxValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MaxValue"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetMinValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MinValue"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetNumberFormatInfoObject">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.NumberFormatInfoObject"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetPaddingCharacter">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PaddingCharacter"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetPassivePromptCharacter">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PassivePromptCharacter"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetPromptCharacter">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PromptCharacter"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetSpecialCultureValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.SpecialCultureValue"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetThousandSeparator">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ThousandSeparator"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetTimeSeparator">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.TimeSeparator"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetUsageMode">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UsageMode"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetUseLocaleDefault">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseLocaleDefault"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ResetUseUserOverride">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseUserOverride"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the validation info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.GetDefaultStyle"/>.
            <para/>
            Default settings are: <para/>
            <list type="table">
            <listheader><term>Property</term><description>Value</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.AllowPrompt"/></term><description>False</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ClipMode"/></term><description>ClipModes.IncludeInternals</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateSeparator"/></term><description>'/'</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateTimeFormatInfoObject"/></term><description>Culture.DateTimeFormat</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DecimalSeparator"/></term><description>'.'</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.Mask"/></term><description>String.Empty</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MaxValue"/></term><description>int.MaxValue</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MinValue"/></term><description>0</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.NumberFormatInfoObject"/></term><description>Culture.NumberFormatInfo</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PaddingCharacter"/></term><description>' '</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PassivePromptCharacter"/></term><description>' '</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.SpecialCultureValue"/></term><description>SpecialCultureValues.None</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ThousandSeparator"/></term><description>','</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.TimeSeparator"/></term><description>':'</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UsageMode"/></term><description>MaskedUsageMode.Normal</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseLocaleDefault"/></term><description>false</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseUserOverride"/></term><description>true</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.AllowPrompt">
            <summary>
            Gets or sets a value indicating whether the prompt character can be allowed to be entered as an input character.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasAllowPrompt">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.AllowPrompt"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ClipMode">
            <summary>
            Gets or sets the format of the text that will be returned by the MaskedEditBox control. The nature of the formatting is set the the <see cref="T:Syncfusion.Windows.Forms.Tools.ClipModes"/> type.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasClipMode">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ClipMode"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateSeparator">
            <summary>
            Gets or sets the character to use when a date separator position is specified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasDateSeparator">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateSeparator"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateTimeFormatInfoObject">
            <summary>
            Gets or sets the <see cref="T:System.Globalization.DateTimeFormatInfo"/> provides the necessary globalization information for the properties that rely on the datetime settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasDateTimeFormatInfoObject">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateTimeFormatInfoObject"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DecimalSeparator">
            <summary>
            Gets or sets the character to use when a decimal separator position is specified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasDecimalSeparator">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DecimalSeparator"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.Mask">
            <summary>
            Gets or sets the mask string for the MaskedEditBox control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasMask">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.Mask"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MaxValue">
            <summary>
            Gets or sets the Maximum Value that can be set through the MaskedEditBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasMaxValue">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MaxValue"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MinValue">
            <summary>
            Gets or sets the Minimum Value that can be set through the MaskedEditBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasMinValue">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MinValue"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.NumberFormatInfoObject">
            <summary>
            Gets or sets the <see cref="T:System.Globalization.NumberFormatInfo"/> provides the necessary globalization information for the properties that rely on these settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasNumberFormatInfoObject">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.NumberFormatInfoObject"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PaddingCharacter">
            <summary>
            Gets or sets the character that will be used instead of mask characters when the mask position has not been filled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasPaddingCharacter">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PaddingCharacter"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PassivePromptCharacter">
            <summary>
            Gets or sets the character that will be used instead of mask characters when the mask position has not been filled (when the control does not have the focus).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasPassivePromptCharacter">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PassivePromptCharacter"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PromptCharacter">
            <summary>
            Gets or sets the character that will be used instead of mask characters when the mask position has not been filled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasPromptCharacter">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PromptCharacter"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.SpecialCultureValue">
            <summary>
            Gets or sets the mode for the cultures.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasSpecialCultureValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.SpecialCultureValue"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ThousandSeparator">
            <summary>
            Gets or sets the character to use when a thousands separator position is specified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasThousandSeparator">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ThousandSeparator"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.TimeSeparator">
            <summary>
            Gets or sets the character to use when a time separator position is specified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasTimeSeparator">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.TimeSeparator"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UsageMode">
            <summary>
            Gets or sets the usage mode for the MaskedEditBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasUsageMode">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UsageMode"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseLocaleDefault">
            <summary>
            Gets or sets a value indicating whether the individual globalization property changes are to be ignored. If set to True, the individual values will be ignored and the locale default will be used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasUseLocaleDefault">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseLocaleDefault"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseUserOverride">
            <summary>
            Gets or sets a value indicating whether to UseUserOverride parameter for CultureInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.HasUseUserOverride">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseUserOverride"/> property is initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.AllowPromptProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.AllowPrompt"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.ClipModeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ClipMode"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.DateSeparatorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateSeparator"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.DateTimeFormatInfoObjectProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DateTimeFormatInfoObject"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.DecimalSeparatorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.DecimalSeparator"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.MaskProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.Mask"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.MaxValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MaxValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.MinValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.MinValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.NumberFormatInfoObjectProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.NumberFormatInfoObject"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.PaddingCharacterProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PaddingCharacter"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.PassivePromptCharacterProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PassivePromptCharacter"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.PromptCharacterProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.PromptCharacter"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.SpecialCultureValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.SpecialCultureValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.ThousandSeparatorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.ThousandSeparator"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.TimeSeparatorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.TimeSeparator"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.UsageModeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UsageMode"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.UseLocaleDefaultProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseLocaleDefault"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.UseUserOverrideProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo.UseUserOverride"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.Clone">
            <override/>
            <summary>Creates a copy of current object.</summary>
            <returns>A duplicate of current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskEditInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.MinimumProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Minimum"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.MaximumProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Maximum"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.StepProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Step"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.StartValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.StartValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.WrapValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.WrapValue"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for customization of NumericUpDown cells.
            <para/>Each property in this sub object can be configured individually. Properties that
            have not been initialized will inherit default values from a base style.
            </summary>
            <example>
            The following code changes numeric up / down information for cells:
            <code lang="C#">
                        model.TableStyle.NumericUpDown = new GridNumericUpDownCellInfo(0, 25, 1, 1, true);
                        model[rowIndex, 1].Text = "NumericUpDown";
                        // Wrapping, Range 0-1000
                        model[rowIndex, 3].CellType = "NumericUpDown";
                        model[rowIndex, 3].NumericUpDown = new GridNumericUpDownCellInfo(0, 1000, 0, 1, true);
                        // Disabled
                        model[rowIndex, 4].CellType = "NumericUpDown";
                        model[rowIndex, 4].Enabled = false;
                        model[rowIndex, 4].Text = "5";
                        // No wrapping, Range 1-20
                        model[rowIndex, 5].CellType = "NumericUpDown";
                        model[rowIndex, 5].NumericUpDown = new GridNumericUpDownCellInfo(1, 20, 1, 1, false);
                        rowIndex++;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <overload>
            Initializes a new GridNumericUpDownCellInfo object.
            </overload>
            <summary>
            Initializes a new GridNumericUpDownCellInfo object with numeric up / down information.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <param name="start">Start value. This is the first value when you press up or down in an empty cell.</param>
            <param name="num">The step to increase or decrease when clicking up or down buttons.</param>
            <param name="wrap">True if value should be starting over when value reaches maximum or minimum.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.#ctor">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/>.
            </param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>Creates an exact copy of the current object.</summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">An identifier for this object.</param>
            <returns>Copied object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.ResetWrapValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.WrapValue"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.ResetMinimum">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Minimum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.ResetMaximum">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Maximum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.ResetStep">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Step"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.ResetStartValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.StartValue"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the default numeric up / down info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.GetDefaultStyle"/>.
            <para/>
            Default settings are: <para/>
            <list type="table">
            <listheader><term>Property</term><description>Value</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Minimum"/></term><description>0</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Maximum"/></term><description>int.MaxValue</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.WrapValue"/></term><description>false</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Step"/></term><description>1</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.StartValue"/></term><description>0</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.WrapValue">
            <summary>
            Gets or sets a value indicating whether to wrap. True if value should be starting over when value reaches maximum or minimum.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.HasWrapValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.WrapValue"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Minimum">
            <summary>
            Gets or sets minimum value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.HasMinimum">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Minimum"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Maximum">
            <summary>
            Gets or sets maximum value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.HasMaximum">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Maximum"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Step">
            <summary>
            Gets or sets the step to increase or decrease when clicking up or down buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.HasStep">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.Step"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.StartValue">
            <summary>
            Gets or sets start value. This is the first value when you press up or down in an empty cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.HasStartValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo.StartValue"/> property is initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.ProgressValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.MinimumProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.MaximumProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.StepProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Step"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.ForeSegmentsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeSegments"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.StretchMultGradProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchMultGrad"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.MultipleColorsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.MultipleColors"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.GradientStartColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientStartColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.GradientEndColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientEndColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.TubeStartColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeStartColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.TubeEndColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeEndColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackSegmentsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackSegments"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackMultipleColorsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackMultipleColors"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackGradientStartColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientStartColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackGradientEndColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientEndColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackTubeStartColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeStartColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackTubeEndColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeEndColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.StretchImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.ForegroundImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForegroundImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackgroundImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.SegmentWidthProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.SegmentWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.FontColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.FontColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.ForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.TextVisibleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextVisible"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.TextStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.ProgressOrientationProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressOrientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.TextShadowProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextShadow"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.ProgressStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.ProgressFallbackStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressFallbackStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackgroundStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.BackgroundFallbackStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundFallbackStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.Clone">
            <override/>
            <summary>Creates an exact copy of the current object.</summary>
            <returns>A duplicate of the current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for progressbar properties in a cell. 
            <para/>Each property in this sub object can be configured individually. Properties that
            have not been initialized will inherit default values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.#ctor">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>Creates an exact copy of the current object.</summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">An identifier for this object.</param>
            <returns>Copied object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Default"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetProgressValue">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressValue"/> property.
            </summary>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetMinimum">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Minimum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetMaximum">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Maximum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetStep">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Step"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetForeSegments">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeSegments"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetStretchMultGrad">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchMultGrad"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetMultipleColors">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.MultipleColors"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetGradientStartColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientStartColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetGradientEndColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientEndColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetTubeStartColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeStartColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetTubeEndColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeEndColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackSegments">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackSegments"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackMultipleColors">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackMultipleColors"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackGradientStartColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientStartColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackGradientEndColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientEndColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackTubeStartColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeStartColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackTubeEndColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeEndColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetStretchImage">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchImage"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetForegroundImage">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForegroundImage"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackgroundImage">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundImage"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetSegmentWidth">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.SegmentWidth"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetFontColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.FontColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetForeColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetTextVisible">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextVisible"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetTextStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetProgressOrientation">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressOrientation"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetTextShadow">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextShadow"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetProgressStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetProgressFallbackStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressFallbackStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackgroundStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ResetBackgroundFallbackStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundFallbackStyle"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class
            will return the validation info that this method generates through its
            overriden version of <see cref="M:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GetDefaultStyle"/>.
            <para/>
            Default settings are: <para/>
            <list type="table">
            <listheader><term>Property</term><description>Value</description></listheader>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressValue"/></term><description>50</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Minimum"/></term><description>0</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Maximum"/></term><description>100</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Step"/></term><description>10</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeSegments"/></term><description>True</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchMultGrad"/></term><description>True</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.MultipleColors"/></term><description>False</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientStartColor"/></term><description>Color.Red</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientEndColor"/></term><description>Color.Lime</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeStartColor"/></term><description>Color.Red</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeEndColor"/></term><description>Color.Black</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackSegments"/></term><description>False</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackMultipleColors"/></term><description>False</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientStartColor"/></term><description>Color.LightGray</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientEndColor"/></term><description>Color.White</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeStartColor"/></term><description>Color.LightGray</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeEndColor"/></term><description>Color.White</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchImage"/></term><description>True</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundImage"/></term><description>NULL</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.SegmentWidth"/></term><description>12</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.FontColor"/></term><description>Color.White</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeColor"/></term><description>Color.DarkCyan</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextVisible"/></term><description>True</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextStyle"/></term><description>ProgressBarTextStyles.Percentage</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextShadow"/></term><description>True</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressStyle"/></term><description>ProgressBarStyles.Constant</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressFallbackStyle"/></term><description>ProgressBarStyles.Constant</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundStyle"/></term><description>ProgressBarBackgroundStyles.None</description></item>
            <item><term><see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundFallbackStyle"/></term><description>ProgressBarBackgroundStyles.None</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressValue">
            <summary>
            Gets or sets the value between Minimum and Maximum.
            </summary>
            <remarks>
            This value represents the progress state of the ProgessBar. For default it is set to 50, minimum=0, and maximum=100 ( 50% ).
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasProgressValue">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressValue"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Minimum">
            <summary>
            Gets or sets the lower boundary for the value.
            </summary>
            <remarks>
            By default its value is 0 which means that the Value of the ProgressBar can not take values lower than 0.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasMinimum">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Minimum"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Maximum">
            <summary>
            Gets or sets the upper boundary for the value.
            </summary>
            <remarks>
            By default its value is 100 which means that the Value of the ProgressBar can not take values higher than 100.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasMaximum">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Maximum"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Step">
            <summary>
            Gets or sets the value to increment when Increment() and Decrement() methods.
            </summary>
            <remarks>
            By default its value is 10 which means that when Increment() is called the Value of the ProgressBar is incremented by 10.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasStep">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.Step"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeSegments">
            <summary>
            Gets or sets a value indicating whether the foreground is segmented.
            </summary>
            <remarks>
            By default its value is True which means that the foreground will be drawn segmented.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasForeSegments">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeSegments"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchMultGrad">
            <summary>
            Gets or sets a value indicating whether the multiple gradient is compressed if the value is smaller than maximum.
            </summary>
            <remarks>
            By default its value is True which means that if the Value is less than maximum, the multiple gradient is compressed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasStretchMultGrad">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchMultGrad"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.MultipleColors">
            <summary>
            Gets or sets the colors of the foreground multiple gradient when ForegroundStyle is Multiple Gradient.
            </summary>
            <remarks>
               By default its value is an empty Color array. You can add Colors to the multiple gradient by modifying this property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasMultipleColors">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.MultipleColors"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientStartColor">
            <summary>
            Gets or sets the start color of the foreground gradient when ForegroundStyle is Gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasGradientStartColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientStartColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientEndColor">
            <summary>
            Gets or sets the end color of the foreground gradient when ForegroundStyle is Gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasGradientEndColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.GradientEndColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeStartColor">
            <summary>
            Gets or sets the start color of the foreground tube when ForegroundStyle is Tube.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasTubeStartColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeStartColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeEndColor">
            <summary>
            Gets or sets the end color of the foreground tube when ForegroundStyle is Tube.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasTubeEndColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TubeEndColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackSegments">
            <summary>
            Gets or sets a value indicating whether the background is segmented.
            </summary>
            <remarks>
            By default its value is False.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackSegments">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackSegments"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackMultipleColors">
            <summary>
            Gets or sets the colors of the background multiple gradient when BackgroundStyle is Multiple Gradient.
            </summary>
            <remarks>
            By default its value is an empty array of colors.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackMultipleColors">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackMultipleColors"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientStartColor">
            <summary>
            Gets or sets the start color of the background gradient when BackgroundStyle is Gradient or Vertical Gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackGradientStartColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientStartColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientEndColor">
            <summary>
            Gets or sets the end color of the background gradient when BackgroundStyle is Gradient or Vertical Gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackGradientEndColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackGradientEndColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeStartColor">
            <summary>
            Gets or sets the start color of the background tube when BackgroundStyle is Tube.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackTubeStartColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeStartColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeEndColor">
            <summary>
            Gets or sets the end color of the background tube when BackgroundStyle is Tube.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackTubeEndColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackTubeEndColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchImage">
            <summary>
            Gets or sets a value indicating whether the foreground image will be stretched.
            </summary>
            <remarks>
            By default its value is True.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasStretchImage">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.StretchImage"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForegroundImage">
            <summary>
            Gets or sets the image to draw on the foreground when ProgressStyle is Image.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasForegroundImage">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForegroundImage"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundImage">
            <summary>
            Gets or sets the image to draw on the foreground when ProgressStyle is Image.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackgroundImage">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundImage"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.SegmentWidth">
            <summary>
            Gets or sets the width of the segments.
            </summary>
            <remarks>By default it`s value is 12.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasSegmentWidth">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.SegmentWidth"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.FontColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasFontColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.FontColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeColor">
            <summary>
            Gets or sets the color used to draw the foreground in segment mode and constant mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasForeColor">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ForeColor"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextVisible">
            <summary>
            Gets or sets a value indicating whether the text is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasTextVisible">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextVisible"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextStyle">
            <summary>
            Gets or sets the style of the text:
               -Percentage
               -Value (Ex:  70/150 )
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasTextStyle">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextStyle"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressOrientation">
            <summary>
            Gets or sets the orientation of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasProgressOrientation">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressOrientation"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextShadow">
            <summary>
            Gets or sets a value indicating whether the text shadow is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasTextShadow">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.TextShadow"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressStyle">
            <summary>
            Gets or sets the style of the foreground:
             -Constant
                -Gradient
             -Multiple gradient
             -Tube
             -Image
                -System
            </summary>
            <remarks>
            By default its value is Constant.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasProgressStyle">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressStyle"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressFallbackStyle">
            <summary>
            Gets or sets the style of the foreground when ProgressStyle is System and the system can not support Themes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasProgressFallbackStyle">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.ProgressFallbackStyle"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundStyle">
            <summary>
            Gets or sets the style of the background. It can have the following values:
            -Image
               -Gradient
            -Vertical gradient
            -Tube
               -Multiple gradient
               -System
               -None
            </summary>
            <remarks>
            By default its value is None.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackgroundStyle">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundStyle"/> property is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundFallbackStyle">
            <summary>
            Gets or sets the style of the background when BackgroundStyle is set to System and the system can not support Themes.
            </summary>
            <remarks>
            By default its value is None.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.HasBackgroundFallbackStyle">
            <summary>
            Gets a value indicating whether <see cref="P:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo.BackgroundFallbackStyle"/> property is initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridShowButtons">
            <summary>
            Specifies when to show or display cell button elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowButtons.Hide">
            <summary>
            Hide them always.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowButtons.Show">
            <summary>
            Show them always.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowButtons.ShowCurrentRow">
            <summary>
            Show buttons for current row. You should also set GridRefreshCurrentCellBehavior.RefreshRow.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowButtons.ShowCurrentCell">
            <summary>
            Show buttons only for the current cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridShowButtons.ShowCurrentCellEditing">
            <summary>
            Show buttons only for the current cell when it is being edited.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity">
            <summary>
            Identity is the reference back to the cell the style belongs to.
            </summary>
            <remarks>
            GridStyleInfo will ask for base styles through GridStyleInfoIdentity.GetBaseStyles
            when the user accesses a property that is not initialized in the style.
            GridStyleInfoIdentity also ensures that changes are made permanent in GridData.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> class. Removes the associated cell cache object from the volatile data store.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.Dispose">
            <override/>
            <summary>
            Releases all resources used by the GridStyleInfoIdentity.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.#ctor(Syncfusion.Windows.Forms.Grid.IGridData,System.Int32,System.Int32)">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> with a reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>, row, and column index.
            </summary>
            <param name="data">A reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.#ctor(Syncfusion.Windows.Forms.Grid.IGridData,Syncfusion.Windows.Forms.Grid.GridCellPos)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> with a reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>, row and column index, and offline state.
            </summary>
            <param name="data">A reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.</param>
            <param name="pos">Cell coordinates.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.#ctor(Syncfusion.Windows.Forms.Grid.IGridData,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> with a reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>, row and column index, and offline state.
            </summary>
            <param name="data">A reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/></param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <param name="offLine">True if changes in this style object should not be stored in the associated <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.#ctor(Syncfusion.Windows.Forms.Grid.IGridData,Syncfusion.Windows.Forms.Grid.GridCellPos,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> with a reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>, row and column index, and offline state.
            </summary>
            <param name="data">A reference to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.</param>
            <param name="pos">Cell coordinates.</param>
            <param name="offLine">True if changes in this style object should not be stored in the associated <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.#ctor(Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> and copies its data from an existing object.
            </summary>
            <param name="other">The existing object to copy data from.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.MakeOfflineIdentity">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> and copies its identity information from the current object. The new
            instance will be detached from <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/> so that changes in this style object are not be stored in the associated <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.
            </summary>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity"/> instance.</returns>
            <remarks>
            Lets a style object load base styles and default values but disables
            saving changes back to the grid. (see OnStyleChanged below)
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <summary>
            Overriden. Returns base styles from <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/> by calling <see cref="M:Syncfusion.Windows.Forms.Grid.IGridData.GetBaseStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Int32,System.Int32)"/>.
            </summary>
            <param name="thisStyleInfo">A reference to a <see cref="T:Syncfusion.Styles.IStyleInfo"/>.</param>
            <returns>An array of base styles.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.ResetBaseStylesCache">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.LookupCellModel(System.String)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for the specified id / cell type name.
            </summary>
            <param name="id">Cell type name.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> for the given id.</returns>
            <remarks>
            Calls <see cref="M:Syncfusion.Windows.Forms.Grid.IGridData.LookupCellModel(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.GetGridModel">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this style belongs to or NULL if the style is used outside a grid model.
            </summary>
            <returns>A reference to the grid model or NULL if the style is used outside a grid model.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.GetActiveGridView">
            <summary>
            Returns the active <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this style belongs to or NULL
            if the style is used outside a grid model.
            </summary>
            <returns>A reference to the grid control base or NULL if the style is used outside a grid model.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Overridden. If the style is not offline, saves its changes in the <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.
            </summary>
            <param name="style">A reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object.</param>
            <param name="sip">The <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> that identifies the changed style property.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.GetBaseStyle(Syncfusion.Styles.IStyleInfo,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
            <summary>
            Returns the style that has the specific property initialized.
            </summary>
            <param name="thisStyleInfo">The style information.</param>
            <param name="sip">Identifier for the property to operate on.</param>
            <returns>A Syncfusion.Styles.StyleInfoBase that has the property initialized.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.OffLine">
            <summary>
            Gets a value indicating whether changes in the style object should stored. True if changes in this style object should not be stored in the associated <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.Data">
            <summary>
            Gets to <see cref="T:Syncfusion.Windows.Forms.Grid.IGridData"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.ColIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.CellPos">
            <summary>
            Gets or sets the cell coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoIdentity.Info">
            <summary>
            Gets results of ToString method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewStyleInfoIdentity.Dispose">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridViewStyleInfoIdentity.GetActiveGridView">
            <summary>
            Returns the active <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this style belongs to or NULL
            if the style is used outside a grid model.
            </summary>
            <returns>
            A reference to the grid control base or NULL if the style is used outside a grid model.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore">
            <summary>
            GridStyleInfoStore holds the plain data for a style object excluding indentity information.
            </summary>
            <remarks>
            When persisting grid cells, <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> is the object that should be
            saved. Identity information can be recreated at run-time when loading cell information but the
            cell information must be saved.
            <para/>
            GridStyleInfoStore also holds the static "layout" information for the style.
            StaticData contains static variables with the information to access data
            in BitVector32 and StyleInfoObjectStore. This information can be shared
            among style objects of the same type but collision must be avoided between
            style types of different products. Having GridStyleInfoStore and ChartStyleInfoStore
            types solves that collision problem.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CellTypeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CellValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.InteriorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.TextColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.FontProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CellValueTypeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.FormatProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.BaseStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.DescriptionProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ValueMemberProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.DisplayMemberProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.DataSourceProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.PropertyDescriptorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PropertyDescriptor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.FormulaTagProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormulaTag"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.TagProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Tag"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.BordersProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.TextMarginsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ImageListProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ImageIndexProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ErrorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.MaxLengthProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CultureInfoProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CheckBoxOptionsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CheckBoxOptions"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ValidateValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.NumericUpDownProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ChoiceListProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.MaskEditProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaskEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ProgressBarProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ProgressBar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CurrencyEditProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CurrencyEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.PasswordCharProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.PasswordChar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CellTipTextProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ControlProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.BackgroundImageIDProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageID"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.BackgroundImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.BorderMarginsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BorderMargins"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.HorizontalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.VerticalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ReadOnlyProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.RightToLeftProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.RightToLeft"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.WrapTextProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.TrimmingProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.EnabledProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.AutoCompleteInEditModeProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.AutoCompleteInEditMode.Enabled"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.TriStateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TriState"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ClickableProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.HotkeyPrefixProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.VerticalScrollbarProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.AutoSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.AllowEnterProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.StrictValueTypeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.StrictValueType"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ShowButtonsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CellAppearanceProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> property.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.AutoFitProperty" -->
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.AutoFitCharProperty" -->
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.FloatCellProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.FloodCellProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.MergeCellProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ExclusiveChoiceListProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.AutoCompleteProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.TextAlignProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ThemedProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.CharacterCasingProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CharacterCasing"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.BackgroundImageModeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BackgroundImageMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ImageSizeModeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageSizeMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ImageFromByteArrayProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageFromByteArray"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.ParseFormatsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ParseFormats"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.Clone">
            <override/>
            <summary>
            Creates a copy of the current object.
            </summary>
            <returns>A duplicate of the current object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesConverter">
            <summary>
               <para>Provides
                  a type converter to convert expandable objects to and from various
                  other representations.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties">
            <summary>
            Provides a base class that you should derive from if you want to register additional
            custom properties with <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>. Custom properties will be shown
            in the property grid for a style just like all other regular properties. You can
            also add expandable objects such as a font. Custom properties participate
            in the style inheritance mechanism similar to regular properties.
            </summary>
            <remarks>
            </remarks>
            <example>
            See the following code samples how to get / set custom properties and
            a derived class with custom properties:
            <code lang="C#">
            GridControl grid = new GridControl();
            GridStyleInfo style = new GridStyleInfo();
            <para/>
            // using ctor with existing style object and caching the object (both C# and VB)
            MyCustomStyleProperties mcs = new MyCustomStyleProperties(style);
            mcs.TheLocked = true;
            mcs.TheFont.Bold = true;
            <para/>
            // design time code (both C# and VB)
            MyCustomStyleProperties myCustomStyleProperties1 = new MyCustomStyleProperties();
            myCustomStyleProperties1.TheLocked = true;
            myCustomStyleProperties1.TheFont.Bold = true;
            style.CustomProperties.Add(myCustomStyleProperties1);
            <para/>
            // using ctor with indexer (C# only)
            (new MyCustomStyleProperties(grid[1,1])).TheLocked = true;
            (new MyCustomStyleProperties(grid[1,1])).TheFont.Bold = true;
            <para/>
            // using ctor with existing style object (C# only)
            style.Text = "bla";
            new MyCustomStyleProperties(style).TheLocked = true;
            new MyCustomStyleProperties(style).TheFont.Bold = true;
            <para/>
            // explicit case (C# only)
            ((MyCustomStyleProperties) style).TheLocked = true;
            ((MyCustomStyleProperties) style).TheFont.Bold = true;
            </code>
            <code lang="VB">
            Dim style As New GridStyleInfo()
            Dim grid As New GridControl()
            <para/>
            ' using ctor with existing style object and caching the object (VB and C#)
            Dim mcs As New MyCustomStyleProperties(style)
            mcs.TheLocked = True
            mcs.TheFont.Bold = True
            <para/>
            ' design time code (VB and C#)
            Dim myCustomStyleProperties1 As New MyCustomStyleProperties()
            myCustomStyleProperties1.TheLocked = True
            myCustomStyleProperties1.TheFont.Bold = True
            style.CustomProperties.Add(myCustomStyleProperties1)
            <para/>
            ' with operator (Visual Basic only)
            With New MyCustomStyleProperties(style)
                .TheLocked = True
                .TheFont.Bold = True
            End With
            <para/>
            ' with operator (Visual Basic only)
            With New MyCustomStyleProperties(grid(1, 1))
                .TheLocked = True
                .TheFont.Bold = True
            End With
            </code>
            <code lang="C#">
            using System;
            using System.ComponentModel;
            <para/>
            using Syncfusion.Diagnostics;
            using Syncfusion.Styles;
            using Syncfusion.Windows.Forms;
            using Syncfusion.Windows.Forms.Grid;
            <para/>
            namespace WindowsApplication1
            {
                public class MyCustomStyleProperties : GridStyleInfoCustomProperties
                {
                    // static initialization of property descriptors
                    static Type t = typeof(MyCustomStyleProperties);
            <para/>
                    readonly static StyleInfoProperty LockedProperty = CreateStyleInfoProperty(t, "TheLocked");
                    readonly static StyleInfoProperty TheFontProperty = CreateStyleInfoProperty(t, "TheFont");
            <para/>
                    // default settings for all properties this object holds
                    static MyCustomStyleProperties defaultObject;
            <para/>
                    // initialize default settings for all properties in static ctor
                    static MyCustomStyleProperties ()
                    {
                        // all properties must be initialized for the Default property
                        defaultObject = new MyCustomStyleProperties(GridStyleInfo.Default);
                        defaultObject.TheLocked = true;
                        defaultObject.TheFont = GridFontInfo.Default;
                    }
            <para/>
                    /// <summary>
                    /// Provides access to default values for this type.
                    /// </summary>
                    public static MyCustomStyleProperties Default
                    {
                        get
                        {
                            return defaultObject;
                        }
                    }
            <para/>
                    /// <summary>
                    /// Force static ctor being called at least once.
                    /// </summary>
                    public static void Initialize()
                    {
                    }
            <para/>
                    // Explicit cast from GridStyleInfo to MyCustomStyleProperties.
                    // (Note: this will only work for C#, Visual Basic does not support dynamic casts.)
            <para/>
                    /// <summary>
                    /// Explicit cast from GridStyleInfo to this custom property object.
                    /// </summary>
                    /// <returns>A new custom properties object.</returns>
                    public static explicit operator MyCustomStyleProperties(GridStyleInfo style)
                    {
                        return new MyCustomStyleProperties(style);
                    }
            <para/>
                    /// <summary>
                    /// Initializes a MyCustomStyleProperties object with a style object that holds all data.
                    /// </summary>
                    public MyCustomStyleProperties(GridStyleInfo style)
                        : base(style)
                    {
                    }
            <para/>
                    /// <summary>
                    /// Initializes a MyCustomStyleProperties object with an empty style object. Design-
                    /// time environment will use this ctor and later copy the values to a style object
                    /// by calling style.CustomProperties.Add(otherCustomStyleProperties1).
                    /// </summary>
                    public MyCustomStyleProperties()
                        : base()
                    {
                    }
            <para/>
                    /// <summary>
                    /// Gets / sets TheLocked state.
                    /// </summary>
                    [
                    Description("Specifies if ..."),
                    Browsable(true),
                    Category("StyleCategoryBehavior")
                    ]
                    public bool TheLocked
                    {
                        get
                        {
                            TraceUtil.TraceCurrentMethodInfo();
                            return (bool) style.GetValue(LockedProperty);
                        }
                        set
                        {
                            TraceUtil.TraceCurrentMethodInfo(value);
                            style.SetValue(LockedProperty, value);
                        }
                    }
                    /// <summary>
                    /// Resets TheLocked state.
                    /// </summary>
                    public void ResetTheLocked()
                    {
                        style.ResetValue(LockedProperty);
                    }
                    [EditorBrowsableAttribute(EditorBrowsableState.Never)]
                    private bool ShouldSerializeTheLocked()
                    {
                        return style.HasValue(LockedProperty);
                    }
                    /// <summary>
                    /// Gets if TheLocked state has been initialized for the current object.
                    /// </summary>
                    [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
                    public bool HasTheLocked
                    {
                        get
                        {
                            return style.HasValue(LockedProperty);
                        }
                    }
            <para/>
                    /// <summary>
                    /// Gets / sets TheFont state. TheFont is itself an expandable object
                    /// with several properties that can be set individually and participate
                    /// in style inheritance mechanism.
                    /// </summary>
                    [
                    Description("The font for drawing text."),
                    Browsable(true),
                    DesignerSerializationVisibility(DesignerSerializationVisibility.Content),
                    Category("StyleCategoryAppearance")
                    ]
                    public GridFontInfo TheFont
                    {
                        get
                        {
                            return (GridFontInfo) style.GetValue(TheFontProperty);
                        }
                        set
                        {
                            style.SetValue(TheFontProperty, value);
                        }
                    }
            <para/>
                    /// <summary>
                    /// Resets TheFont state.
                    /// </summary>
                    public void ResetTheFont()
                    {
                        style.ResetValue(TheFontProperty);
                    }
                    [EditorBrowsableAttribute(EditorBrowsableState.Never)]
                    private bool ShouldSerializeTheFont()
                    {
                        return style.HasValue(TheFontProperty);
                    }
                    /// <summary>
                    /// Determines if TheFont state has been initialized for the current object.
                    /// </summary>
                    [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
                    public bool HasTheFont
                    {
                        get
                        {
                            return style.HasValue(TheFontProperty);
                        }
                    }
            <para/>
                }
            <para/>
                public class MyGridControl : GridControl
                {
                    public MyGridControl()
                    {
                        // force static ctor of MyCustomStyleProperties being called at least once
                        MyCustomStyleProperties.Initialize();
                    }
                }
            }
            </code>
            <code lang="VB">
            Public Class MyCustomStyleProperties
                Inherits GridStyleInfoCustomProperties
                ' static initialization of property descriptors
                Private Shared t As Type = GetType(MyCustomStyleProperties)
            <para/>
                Private Shared LockedProperty As StyleInfoProperty = CreateStyleInfoProperty(t, "TheLocked")
                Private Shared TheFontProperty As StyleInfoProperty = CreateStyleInfoProperty(t, "TheFont")
            <para/>
                ' default settings for all properties this object holds
                Private Shared defaultObject As MyCustomStyleProperties
            <para/>
            <para/>
                ' initialize default settings for all properties in static ctor
                Shared Sub New()
                    ' all properties must be initialized for the Default property
                    defaultObject = New MyCustomStyleProperties(GridStyleInfo.Default)
                    defaultObject.TheLocked = True
                    defaultObject.TheFont = GridFontInfo.Default
                End Sub 'New
            <para/>
                '/ <summary>
                '/ Provides access to default values for this type
                '/ </summary>
            <para/>
                Public Shared ReadOnly Property [Default]() As MyCustomStyleProperties
                    Get
                        Return defaultObject
                    End Get
                End Property
            <para/>
            <para/>
                '/ <summary>
                '/ Force static ctor being called at least once.
                '/ </summary>
                Public Shared Sub Initialize()
                End Sub 'Initialize
            <para/>
                '/ <summary>
                '/ Initializes a MyCustomStyleProperties object with a style object that holds all data.
                '/ </summary>
                Public Sub New(ByVal style As GridStyleInfo)
                    MyBase.New(style)
                End Sub 'New
            <para/>
            <para/>
                '/ <summary>
                '/ Initializes a MyCustomStyleProperties object with an empty style object. Design-
                '/ time environment will use this ctor and later copy the values to a style object
                '/ by calling style.CustomProperties.Add(otherCustomStyleProperties1).
                '/ </summary>
                Public Sub New()
                End Sub 'New
            <para/>
                '/ <summary>
                '/ Gets / sets TheLocked state.
                '/ </summary>
            <para/>
                'Description("Specifies if ..."), Browsable(True), Category("StyleCategoryBehavior")&gt; _
                Public Property TheLocked() As Boolean
                    Get
                        TraceUtil.TraceCurrentMethodInfo()
                        Return CBool(style.GetValue(LockedProperty))
                    End Get
                    Set(ByVal Value As Boolean)
                        TraceUtil.TraceCurrentMethodInfo(Value)
                        style.SetValue(LockedProperty, Value)
                    End Set
                End Property
            <para/>
                '/ <summary>
                '/ Resets TheLocked state.
                '/ </summary>
                Public Sub ResetTheLocked()
                    style.ResetValue(LockedProperty)
                End Sub 'ResetTheLocked
            <para/>
                'EditorBrowsableAttribute(EditorBrowsableState.Never)&gt; _
                Private Function ShouldSerializeTheLocked() As Boolean
                    Return style.HasValue(LockedProperty)
                End Function 'ShouldSerializeTheLocked
                '/ <summary>
                '/ Gets if TheLocked state has been initialized for the current object.
                '/ </summary>
            <para/>
                'Browsable(False), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)&gt; _
                Public ReadOnly Property HasTheLocked() As Boolean
                    Get
                        Return style.HasValue(LockedProperty)
                    End Get
                End Property
            <para/>
                '/ <summary>
                '/ Gets / sets TheFont state. TheFont is itself an expandable object
                '/ with several properties that can be set individually and participate
                '/ in style inheritance mechanism.
                '/ </summary>
            <para/>
                'Description("The font for drawing text."), Browsable(True), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Category("StyleCategoryAppearance")&gt; _
                Public Property TheFont() As GridFontInfo
                    Get
                        Return CType(style.GetValue(TheFontProperty), GridFontInfo)
                    End Get
                    Set(ByVal Value As GridFontInfo)
                        style.SetValue(TheFontProperty, Value)
                    End Set
                End Property
            <para/>
            <para/>
                '/ <summary>
                '/ Resets TheFont state.
                '/ </summary>
                Public Sub ResetTheFont()
                    style.ResetValue(TheFontProperty)
                End Sub 'ResetTheFont
            <para/>
                'EditorBrowsableAttribute(EditorBrowsableState.Never)&gt; _
                Private Function ShouldSerializeTheFont() As Boolean
                    Return style.HasValue(TheFontProperty)
                End Function 'ShouldSerializeTheFont
                '/ <summary>
                '/ Determines if TheFont state has been initialized for the current object.
                '/ </summary>
            <para/>
                'Browsable(False), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)&gt; _
                Public ReadOnly Property HasTheFont() As Boolean
                    Get
                        Return style.HasValue(TheFontProperty)
                    End Get
                End Property
            End Class 'MyCustomStyleProperties
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.style">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> that holds and
            gets the data for this custom property object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.#ctor(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection"/> object
            with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> that the properties of this
            class will belong to.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> that holds and
            gets the data for this custom property object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.#ctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection"/> object
            with an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object. When you later
            set the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.StyleInfo"/> property, the changes in this object
            will be copied over to the new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CustomProperties"/> collection adds
            design-time support for custom properties by adding empty custom property
            objects and later calling <see cref="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection.Add(Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties)"/>,
            which will result in changing the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.StyleInfo"/> property for this object
            and forces copying all properties of this object to the style object.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.Type,System.String)">
            <overload>
            Registers a new custom property.
            </overload>&gt;
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="type">The type of the property.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.String)">
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.String,Syncfusion.Styles.StyleInfoPropertyOptions)">
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <param name="propertyOptions">Specifies attributes for the property.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.Type,System.String,Syncfusion.Styles.StyleInfoPropertyOptions)">
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="type">The type of the property.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <param name="propertyOptions">Specifies attributes for the property.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.StyleInfo">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> that holds and
            gets the data for this custom property object. When you
            set the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties.StyleInfo"/> property, all prior changes in this object
            will be copied over to the new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection">
            <summary>
            Implements a collection of custom property objects that have
            at least one initialized value. The primary purpose of this
            collection is to support design-time code serialization of
            custom properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection.#ctor(Syncfusion.Styles.StyleInfoBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection"/> with a reference
            to the parent style object.
            </summary>
            <param name="styleInfo">The style info</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection.Add(Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties)">
            <summary>
            Copies the initialized properties of the specified custom property
            to the parent style object and attaches the custom property object
            with the parent style object.
            </summary>
            <param name="value">A GridStyleInfoCustomProperties with
            custom properties.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomProperties[],System.Int32)">
            <summary>
              <para>Copies the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection"/> elements to a one-dimensional <see cref="T:System.Array"/> at the specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the object's from instance. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoCustomPropertiesCollection.Count">
            <summary>
            Gets the number of objects in this collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoConverter">
            <summary>
               <para>Provides
                  a type converter to convert expandable objects to and from various
                  other representations.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoConverter.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <override/>
            <summary>
            Indicates whether this converter can convert an object to the specified destination type.
            </summary>
            <param name="context">Format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>True if this conversion is possible; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <override/>
            <summary>
            Converts the givne value object to the specified destination type.
            </summary>
            <param name="context">Format context.</param>
            <param name="culture">Current culture information.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">Type to convert the value parameter to.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable">
            <summary>
               GridStyleInfoStoreTable holds a table where each item is a StyleInfoStore.
            </summary>
            <remarks>
            GridStyleInfoStoreTable is used with GetCells and SetCells method calls. Also, Insert and
              Remove cells commands use GridStyleInfoStoreTable to store undo information for cells.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> and initializes its row and column count.
            </summary>
            <param name="rowCount">Row count.</param>
            <param name="colCount">Column count.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable.RowCount">
            <summary>
            Gets Row count of the table.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable.ColCount">
            <summary>
            Gets Column count of the table.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable.Tag">
            <summary>
            Gets or sets User-defined data, e.g. covered ranges in clipboard copy / paste.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable.Item(System.Int32,System.Int32)">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStore"/> at a specific row and column index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity">
            <summary>
            Provides style identity information for nested objects of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity.#ctor(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoSubObjectIdentity"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </summary>
            <param name="owner">The <see cref="T:Syncfusion.Styles.StyleInfoBase"/> that owns this subobject.</param>
            <param name="sip">The <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> descriptor for this expandable subobject.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTextAlign">
            <summary>
            The text alignment for <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextAlign.Default">
            <summary>
            Default. Use setting defined as default for the cell type.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextAlign.Left">
            <summary>
            Align text left of button elements. This is typical for combo boxes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridTextAlign.Right">
            <summary>
            Align text right of button elements.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment">
            <summary>
            Specifies the vertical alignment of an object or text in a cell.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/> enumeration represents the different vertical alignment options for contents of a cell
            that you can specify with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment.Top">
            <summary>
            Specifies that the contents of a cell are aligned with the top.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment.Middle">
            <summary>
            Specifies that the contents of a cell are aligned with the center.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment.Bottom">
            <summary>
            Specifies that the contents of a control are aligned with the bottom.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridDesignerBasicAction">
            <exclude/>
            <summary>
            This class is the common base class for actions such as
            MenuActions, Editactions or plugins
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridDesignerBasicAction.SetState(System.Boolean,System.Object)">
            <summary>
                Used to set the state of Toolbar/Menu items that are tied to the action.
                Inherited classes may override to change functionality.
            </summary>
            <param name="selected" type="bool">
                <para>
                    Whether or not the sourceObject is selected
                </para>
            </param>
            <param name="sourceObject" type="object">
                <para>
                    The object tied to the action.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridDesignerBasicAction.ApplyStyle(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
                Applies the supplied style to the supplied GridControlBase object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridDesignerBasicAction.ActiveGrid">
            <summary>
              Gets currently active Grid, if more than one are present
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridDesignerBasicAction.MainWindow">
            <summary>
            Gets or sets the main window of the design editor
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ExitProgram">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.Find">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.FindNext">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.Replace">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.SetCellBackgroundImage">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ClearCells">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.PrintPreviewFile">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.PrintFile">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.PrinterSettings">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.BlackWhiteGrid">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.AlphaBlending">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.TransparentBackground">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ResetTransparency">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.FormatBaseStylesMap">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleBold">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.FontStyleBold">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleItalic">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.FontStyleItalic">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleUnderline">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.FontStyleUnderline">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleLeft">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.AlignLeft">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleCenter">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.AlignCenter">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleRight">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.AlignRight">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ResizeColumns">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ResizeRows">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.RemoveRows">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.RemoveCols">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.InsertRows">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.InsertCols">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleBanneredRange">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.MakeBanneredRange">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ResetBanneredRange">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ToggleCoverCell">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.CoverCell">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ResetCover">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.FreezeColumns">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ReleaseColumns">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.FreezeRows">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ReleaseRows">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.SaveToXml">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.SetGrid">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.LoadFromXml">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.LoadFromTemplate">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.SaveToTemplate">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.UndoAction">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.RedoAction">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.CutAction">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.CopyAction">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.PasteAction">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.DeleteAction">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.SelectAllAction">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.Actions.ExcelLikeSelection">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridControlDesigner">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridControlDesigner.Initialize(System.ComponentModel.IComponent)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridControlDesigner.#ctor">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridControlDesigner.Verbs">
            <override/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridControlDesigner.LoadMode.Initial">
            <summary>
            initial load may have serialization errors. add assembly resolver and redo
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridControlDesigner.LoadMode.Clearing">
            <summary>
            reload is done. remove assembly resolver and set to LoadMode.Done mode
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridControlDesigner.LoadMode.Done">
            <summary>
            Represent Done.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridDesignerMain">
            <summary>
            Static entry point for design editor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridDesignerMain.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridDesignerMain.Design(Syncfusion.Windows.Forms.Grid.GridControl)">
            <summary>
                Initializes the design editor based on the supplied GridControl
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridDesignerPreviewGrid">
            <summary>
               A derived grid component class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridControl">
            <summary>
            GridControl provides a simplified way to use a grid control and model in one place.
            </summary>
            <remarks>
            GridControl implements methods from <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> and also implements all methods
            and events that are defined in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. GridControl hides the implementation details
            that the underlying functionality is implemented in a separate model and view class and provides a one-stop
            interface to perform all grid operations in one place.<para/>
            GridControl also adds support for customizing the grid in a visual designer and lets you drop the grid control
            in a Windows Forms dialog at design-time.<para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> can be attached and replaced with another object at run-time. The GridControl
            class will remove any dependencies on the old model and set up a relationship with the new model.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridControlBaseImp">
            <summary>
            Implements a grid control that displays a grid model.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> implements a view on a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>. Several views can be opened for the same model. Changes
            in <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> are reflected immediately among all views.<para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> provides storage for all data and settings associated with the grid. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            implements user interaction and display of the data.<para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> is a user control that is derived from <see cref="T:Syncfusion.Windows.Forms.ScrollControl"/>. It lets the user scroll through grid data
            with mouse or keyboard. The grid displays a large number of cells where each cell can have its own unique formatting and cell type.<para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> also offers a wide range of events that let you customize the default behavior of the grid at run-time.
            <para/>
            <note type="note">In version 1.x, the GC class did derive directly from GridControlBase. Version 2.x derives GridControl from GridControlBaseImp. If you do have classes that derive directly from GridControlBase, your code will break. Please read the following explanation.
            <para/>
            If you derived directly from GridControlBase in your code, it is recommended that you change your code such that you derive from GridControlBaseImp instead.
            <para/>
            If you derived from the GridControl class, no action is required on your side.
            <para/>
            Here is why:
            <para/>
            In Version 1.x, the GridControlBase class did by default initialize all MouseControllers and CellTypes.
            <para/>
            We changed this now such that the GridControlBase class will only initialize the very basic cell types and mouse controllers. This step will help us later make the grid more modular and provide techniques to trim down the size of the grid assembly if you only need a subset of the features or also if we want to make parts of the grid work without interop code. The idea was to have a grid base class that only has minimal dependencies on other classes. If you have the grid source code and look at the grid\src tree, you will notice a "Base" folder and an "Extensions" folder. "Base" contains all essential files for a bare grid. "Extensions" contains all the files to make it a full-featured grid.
            <para/>
            In order to keep compatibility with existing code, the GridControlBaseImp class has been added. GridControlBaseImp is derived from GridControlBase and its sole purpose is to initialize all mouse controllers and cell types and establish other dependencies on grid features.
            <para/>
            If you derived directly from GridControlBase in your code base, it is recommended that you change your code such that you derive from GridControlBaseImp instead. Then your code should work without further change. Otherwise you need to manually initialize MouseControllers and cell types.
            <para/>
            The GridControl class itself has been changed such that it derives from GridControlBaseImp. Therefore if you were using the GridControl class no further change is necessary on your side.
            <para/>
            Here is a list of differences between GridControlBaseImp and GridControlBase:
            <list type="bullet">
            <item><term>
            GridControlBaseImp sets up the GridCellModelFactory as default cell type factory. GridControlBase on the other hand only sets up GridBaseCellModelFactory. GridCellModelFactory is able to instantiate the whole range of cell types that are part of Essential Grid. GridBaseCellModelFactory on the other hand only has dependencies on Header, Static, TextBox, ComboBox, and PushButton.
            <para/>
            So, if your code derives from GridControlBase directly and some celltypes do not appear to get instantiated, you should add cell types manually to the CellModels collection or derive from GridControlBaseImp.
            </term></item>
            <item><term>
            GridControlBaseImp overrides the InitializeMouseControllers method. In this override it checks Model.Options.ControllerOptions and instantiates all mouse controllers that have been specified in this flag. GridControlBase on the other hand does not perform any action in InitializeMouseControllers.
            </term></item>
            </list><para/>
            Other features that are implemented in GridControlBaseImp and not GridControlBase are:
            <list type="bullet">
            <item><term>
            The AccessibilityEnabled property. GridControlBase itself has no Accessibility support.
            </term></item>
            <item><term>
            Multiple cell selection.
            </term></item>
            <item><term>
            OLE drag-and-drop
            </term></item>
            <item><term>
            Cell tips
            </term></item>
            </list>
            <para/>
            Again, if you derived from GridControl, no action is required. If you derived from GridControlBase, please change your code to derive from GridControlBaseImp instead.
            <para/>
            <para/>
            The change is mainly a preparation to make it easier for us in future. We try hard not to break existing code. Providing a GridControlBaseImp class seemed like a good, easy solution and will help us in the future make the grid more modular.</note>
            <para/>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBaseImp"/>. 
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBaseImp"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBaseImp"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this control is associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.InitializeMouseControllers">
            <summary>
            Initializes all mouse controllers for this grid. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridControllerOptions"/> for 
            default mouse controllers that you can enable and disable through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptions"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Options"/> property.
            </summary>
            <remarks>
            Controllers will be added and removed from <see cref="P:Syncfusion.Windows.Forms.ScrollControl.MouseControllerDispatcher"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.ResetMouseControllers">
            <summary>
            Resets all mouse controllers and removes them from <see cref="P:Syncfusion.Windows.Forms.ScrollControl.MouseControllerDispatcher"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.InitializeDataObjectConsumerOptions">
            <summary>
            Initializes all data object consumers for this grid. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataObjectConsumerOptions"/> for 
            default consumers that you can enable and disable through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptions"/> property
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Options"/> property.
            </summary>
            <remarks>
            Controllers will be registered by the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.WireModel">
            <summary>
            Sets up listeners for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> and initializes mouse controllers and data object consumers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.UnwireModel">
            <summary>
            Releases listeners for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.IntUpdateSelectRange">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDataSource">
            <summary>
            Enables OLE Data Source support for this control with default support
            for Text and Styles format.
            </summary>
            <returns>True if support was enabled successfully; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDataSource(System.Int32)">
            <summary>
            Enables OLE Data Source support for this control with default support
            for Text and Styles format.
            </summary>
            <param name="flags">See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> for various flags that customize
            the OLE Data Source behavior of the grid.</param>
            <returns>True if support was enabled successfully; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDropTarget">
            <summary>
            Enables OLE Drop Target support for this control with default support
            for Text and Styles format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.EnableOleDropTarget(System.Int32)">
            <summary>
            Enables OLE Drop Target support for this control with <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/>
            options specified.
            </summary>
            <param name="flags">See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/> for various flags that customize
            the OLE Drop Target behavior of the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.CreateOleDropTarget(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Int32)">
            <summary>
            Creates a GridOleDropTarget object and calls GridOleDropTarget.Register. Override this
            method if you want to customize behavior of the GridOleDropTarget object.
            </summary>
            <param name="grid">The grid control</param>
            <param name="flags">Value for DragDropDropTargetFlags</param>
            <returns>returns GridOleDropTarget</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)">
            <summary>
            Registers a <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer"/> with the grid that can participate
            in an OLE Drop Target operation. If you want to add support for custom clipboard formats,
            you should create a class that implements IGridDataObjectConsumer and register it with 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)"/>.
            </summary>
            <param name="consumer">An <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer"/> to be added to 
            the internal collection of OLE Drop Target consumers.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>
            A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.CreateCellToolTip">
            <summary>
            Creates and initializes a ToolTip object. InitialDelay will be 500 and
            ReshowDelay will be set to 0 by default.
            </summary>
            <returns>The initialized ToolTip object for this grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.OnActivateToolTip(Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs)">
            <summary>
            Raises the  <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.ActivateToolTip"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridActivateToolTipEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.OnQueryAllowDragColumnHeader(Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs)">
            <summary>
            Raises the <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.OnQueryAllowDragColumnHeader(Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs)"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.PaintSelectCells">
            <override/>
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.AccessibilityEnabled">
            <summary>
            Gets or sets a value indicating whether the control should enable its Accessibility support.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.CellToolTip">
            <summary>
            Gets or sets a reference to the ToolTip object used for displaying
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> as ToolTips for cells.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.ActivateToolTip">
            <summary>
            Occurs when mouse has moved to a new cell and a ToolTip is initialized for that cell.
            </summary>
            <remarks>
            You have two options: <para/>
            1) Set e.Style.CellTipText<para/>
            - Or - <para/>
            2) Initalize the ToolTip directly (see <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.CellToolTip"/> property) and then
            set e.Cancel = true;<para/>
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.QueryAllowDragColumnHeader">
            <summary>
            Occurs when the user hovers the mouse over a column header or clicks on it.
            In your event handler, you can determine if the selected column can be dragged.
            </summary>
            <remarks>
            You can disallow dragging the column when
            you assign False to <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.AllowDrag"/>.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs"/>
            <seealso cref="!:GridTableOptionsStyleInfo"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> object with default settings.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> object with default settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.InitializeModel">
            <summary>
            This is called when the grid has been assigned an empty model.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> and binds it to the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">The grid model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.Attach(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Attaches a model for the grid control.
            </summary>
            <param name="model">The grid model to be attached.</param>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> can be attached and replaced with another object at run-time. The GridControl
            class will remove any dependencies on the old model and set up a relationship with the new model. <para/>
            When you replace the model, the grid control will completely refresh and draw the new cell data.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.Detach">
            <summary>
            Detaches a model from the grid control.
            </summary>
            <returns>The grid model.</returns>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> can be attached and replaced with another object at run-time. The GridControl
            class will remove any dependencies on the old model and set up a relationship with the new model. <para/>
            When you replace the model, the grid control will completely refresh and draw the new cell data.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.WireModel">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.UnwireModel">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnControllerOptionsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ControllerOptionsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnDataObjectConsumerOptionsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.DataObjectConsumerOptionsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnBaseStylesMapChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.BaseStylesMapChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnDataChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.DataChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnModifiedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ModifiedChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnFileNameChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.FileNameChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnCellsChanged(Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.CellsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnCellsChanging(Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.CellsChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellsChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnConfirmingPendingChanges(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ConfirmingPendingChanges"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRefreshRequest(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RefreshRequest"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnBeginUpdateRequest(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.BeginUpdateRequest"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnEndUpdateRequest(Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.EndUpdateRequest"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridEndUpdateRequestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveCellInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnPasteCellText(Syncfusion.Windows.Forms.Grid.GridPasteCellTextEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.PasteCellText"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCellInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryCoveredRange(Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCoveredRange"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCoveredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryBanneredRange(Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryBanneredRange"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryBanneredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryColCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryRowCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSaveColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveColCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSaveRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveRowCount"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnChangingLayoutCells(Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ChangingLayoutCells"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnChangedLayoutCells(Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ChangedLayoutCells"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridChangeLayoutCellsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnPrepareGraphics(Syncfusion.Drawing.GraphicsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.PrepareGraphics"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Drawing.GraphicsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnOperationFeedback(Syncfusion.ComponentModel.OperationFeedbackEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.OperationFeedback"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.ComponentModel.OperationFeedbackEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowHeightsChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowHeightsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowHeightsChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowHeightsChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColWidthsChanged(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColWidthsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColWidthsChanging(Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColWidthsChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryColWidth(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryColWidth"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryRowHeight(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryRowHeight"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSaveColWidth(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveColWidth"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSaveRowHeight(Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveRowHeight"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsHidden(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsHidden"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsHiding(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsHiding"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsHidden(Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsHidden"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHiddenEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsHiding(Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsHiding"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHidingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryHideCol(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryHideCol"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSaveHideCol(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveHideCol"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryHideRow(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryHideRow"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSaveHideRow(Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveHideRow"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColHideEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnDefaultRowHeightChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultRowHeightChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnDefaultRowHeightChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultRowHeightChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnHeaderRowCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderRowCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnHeaderRowCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderRowCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnFrozenRowCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenRowCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnFrozenRowCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenRowCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsMoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsRemoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsRemoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsInserting"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnRowsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsInserted"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnDefaultColWidthChanging(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultColWidthChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnDefaultColWidthChanged(Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultColWidthChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDefaultSizeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnHeaderColCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderColCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnHeaderColCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderColCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnFrozenColCountChanged(Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenColCountChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnFrozenColCountChanging(Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenColCountChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCountChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsMoved(Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsMoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsRemoved(Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsRemoved"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsRemoving(Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsRemoving"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeRemovingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsInserting(Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsInserting"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnColsInserted(Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsInserted"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.ReadOnlyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSelectionChanging(Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SelectionChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnSelectionChanged(Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SelectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnPrepareClearSelection(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.PrepareClearSelection"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryCellModel(Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCellModel"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnCellModelsChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.CellModelsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnPrepareChangeSelection(Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.PrepareChangeSelection"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareChangeSelectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnCoveredRangesChanging(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.CoveredRangesChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnCoveredRangesChanged(Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.CoveredRangesChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCoveredRangesChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnBanneredRangesChanging(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.BanneredRangesChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnBanneredRangesChanged(Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.BanneredRangesChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBanneredRangesChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnFloatingCellsChanged(Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.FloatingCellsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFloatingCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnMergeCellsChanged(Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.MergeCellsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellsChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.OnQueryCanMergeCells(Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCanMergeCells"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCanMergeCellsEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetBaseStylesMap">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.BaseStylesMap"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeGridCells">
            <summary>
            True if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.SerializeCellsBehavior"/> is set to SerializeIntoCode, otherwise false.
            </summary>
            <returns>returns True if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.SerializeCellsBehavior"/> is set to SerializeIntoCode, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetGridCells">
            <summary>
            Clears all cell formatting.   
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetRangeStyles">
            <summary>
            Clears all cell formatting in the  <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeRangeStyles">
            <summary>
            Determines if the range styles should be serialized.
            </summary>
            <returns>True if they should be serialized; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeRowHeightEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.RowHeights"/> collection were modified.
            </summary>
            <returns>True if modified; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetRowHeightEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.RowHeights"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeColWidthEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ColWidths"/> collection were modified.
            </summary>
            <returns>True if modified; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetColWidthEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ColWidths"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeRowHiddenEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.HideRows"/> collection were modified.
            </summary>
            <returns>True if modified; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetRowHiddenEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.HideRows"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeColHiddenEntries">
            <summary>
            Determines if values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.HideCols"/> collection were modified.
            </summary>
            <returns>true if modified; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetColHiddenEntries">
            <summary>
            Resets values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.HideCols"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetTableStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.TableStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeCoveredRanges">
            <summary>
            Determines if covered ranges have been added. 
            </summary>
            <returns>returns boolean value if covered ranges have been added.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetCoveredRanges">
            <summary>
            Clears all covered ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSerializeBanneredRanges">
            <summary>
            Determines if bannered ranges have been added. 
            </summary>
            <returns>returns boolean value if bannered ranges have been added</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetBanneredRanges">
            <summary>
            Clears all bannered ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetAlphaBlendSelectionColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.AlphaBlendSelectionColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridControl.style">
            <summary>
            Get or Set of Skin Manager Interface
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.GetSpannedRangeInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetSpannedRangeInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetSpannedRangeInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo@)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.EndUpdateModel(System.Boolean,System.Boolean)">
            <overload>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </overload>
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/>
            <summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/> in the GridModel class for information.</summary>
            <param name="update">Specifies whether current pending paint operations should be discarded.</param>
            <param name="fromModel">Specified if this EndUpdate call was triggered by a call to the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdate"/>
            of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.BeginUpdate(Syncfusion.Windows.Forms.BeginUpdateOptions,System.String)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate"/>
            <summary>
            Suspends the painting of associated grid controls until the <see cref="!:EndUpdate"/> method is called and records a command description
            why painting is suspended.
            </summary>
            <param name="options">Specifies the painting support during the BeginUpdate, EndUpdate batch.</param>
            <param name="commandDesc">A description of the command.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.BeginUpdateModel(Syncfusion.Windows.Forms.BeginUpdateOptions,System.Boolean)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdate"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SuspendChangeEvents">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SuspendChangeEvents"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SuspendChangeEvents"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResumeChangeEvents">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResumeChangeEvents"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResumeChangeEvents"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SuspendRecordUndo">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SuspendRecordUndo"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SuspendRecordUndo"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResumeRecordUndo">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResumeRecordUndo"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResumeRecordUndo"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.BeginInit">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginInit"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginInit"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.EndInit">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndInit"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndInit"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.Refresh(System.Boolean)">
            <overload>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Refresh"/> in the GridModel class for information.</overload>
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Refresh"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Refresh"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.DoPrepareGraphics(System.Drawing.Graphics)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.DoPrepareGraphics(System.Drawing.Graphics)"/>
            <summary>
            Raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> event.
            </summary>
            <param name="g">Graphics object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.LoadSoap(System.String)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadSoap(System.String)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadSoap(System.String)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.LoadSoap(System.IO.Stream)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadSoap(System.String)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadSoap(System.String)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveSoap">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveSoap(System.String)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveSoap(System.IO.Stream)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveSoap"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.LoadBinary(System.String)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadBinary(System.String)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadBinary(System.String)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.LoadBinary(System.IO.Stream)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadBinary(System.String)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.LoadBinary(System.String)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveBinary">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveBinary(System.String)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveBinary(System.IO.Stream)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SaveBinary"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.InitializeFromXml(System.String)">
            <summary>
                Recreates the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> with properties and data that was saved in xml format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.InitializeFromXml(System.String,System.Boolean)">
            <summary>
                Recreates the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> with properties and data that was saved in xml format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.InitializeFromXml(System.IO.Stream)">
            <summary>
                Recreates the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> with properties and data that was saved in xml format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.InitializeFromXml(System.IO.Stream,System.Boolean)">
            <summary>
                Recreates the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> with properties and data that was saved in xml format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResolveBackgroundImages">
            <summary>
            Sets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.BackgroundImage"/> property if the <see cref="!:BackgroundImageID"/> property is set.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveXml">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object to a file in xml format. The filename can be specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveXml(System.String)">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object in xml format to a file with the specified filename.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SaveXml(System.IO.Stream)">
            <summary>
            Saves the current <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> object to a stream in xml format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.CalculatePreferredCellSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.GetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> in the GridModel class for information.</summary>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> that specifies the range of cells.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable"/> object that holds contents for all the cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.PopulateValues(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateValues(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateValues(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.PopulateHeaders(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateHeaders(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.PopulateHeaders(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Object)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType,System.Boolean,System.Boolean)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCellInfo(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable,System.Boolean,System.Boolean)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SetCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfoStoreTable)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetVolatileData">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetVolatileData"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetVolatileData"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfoList)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCombinedStyle(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ChangeSelectionState(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo[])">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeSelectionState(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridRangeInfo[])"/>
            <summary>
            Records current selection state - current cell and selected ranges. Will be used for restoring selections when performing undo / redo,
            </summary>
            <param name="currentRow">The row index of current cell.</param>
            <param name="currentCol">The column index of current cell.</param>
            <param name="ranges">The current list of selected ranges.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.String)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Styles.StyleModifyType)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[])">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ChangeCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo[],Syncfusion.Styles.StyleModifyType)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.ComponentModel.OperationFeedback)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.GetCellsInfo(Syncfusion.Windows.Forms.Grid.GridRangeInfo)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.CanClearSelection">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.CanClearSelection"/>
            <summary>
            Checks if a range of cells is selected or if the grid has a current cell which contents can be cleared.
            </summary>
            <returns>True if clearing cells with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Clear(System.Boolean)"/> is possible; False otherwise.</returns>
            <remarks>
            Use this to enable a "Clear" menu item or gray it out.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.Clear(System.Boolean)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Clear(System.Boolean)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.Clear(System.Boolean)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfoList,System.Boolean)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ClearCells(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ResetCurrentCellInfo">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetCurrentCellInfo"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ResetCurrentCellInfo"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ConfirmChanges">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmChanges"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmChanges"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.EndEdit">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndEdit"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.EndEdit"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.QueryMaximumRowCol(System.Int32,System.Int32)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryMaximumRowCol(System.Int32,System.Int32)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.RaiseQueryMaximumRowCol(System.Int32,System.Int32)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.ConfirmPendingChanges">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmPendingChanges"/>
            <summary>
            Confirms any pending changes, raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges"/> event,
            and calls the current cells <see cref="M:Syncfusion.Windows.Forms.Grid.GridCurrentCell.ConfirmChanges"/> method.
            </summary>
            <returns>True if this action is successfully completed; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SubtractBorders(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.AddBorders(System.Drawing.Size,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Adds border margins to given cell client area size. The borders are determined from a specified style with cell content information.
            </summary>
            <param name="size">The <see cref="T:System.Drawing.Size"/> with the cell size.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>The <see cref="T:System.Drawing.Size"/> with the cell size including its borders.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.StyleInfoBordersToMargins(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.StyleInfoBordersToMargins(Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.StyleInfoBordersToMargins(Syncfusion.Windows.Forms.Grid.GridStyleInfo)"/> in the GridModel class for information.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControl.SynchronizeCurrentCell(System.Int32,System.Int32)">
            <copyfrom cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SynchronizeCurrentCell(System.Int32,System.Int32)"/><summary>See <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.SynchronizeCurrentCell(System.Int32,System.Int32)"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Site">
            <override/>
            <summary>
            Gets or sets the site of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Font">
            <override/>
            <summary>Specifies the font used to display text in the grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.BackgroundImage">
            <override/>
            <summary>Specifies the background image used for the grid.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.CellModelsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellModelsChanged"/>
            <summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellModelsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ControllerOptions">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DataObjectConsumerOptions">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptions"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptions"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ActiveGridView">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ActiveGridView"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ActiveGridView"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.UserData">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.UserData"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.UserData"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.UpdateOptions">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.UpdateOptions"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.UpdateOptions"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.BaseStylesMap">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.GridCells">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> objects. This collection is a wrapper collection
            for cells in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object. It provides support for code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.RangeStyles">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeStyle"/> objects. This collection is a wrapper collection
            for cells in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/> object. It provides support for modifying
            cells through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.RowHeightEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHeight"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.RowHeights"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ColWidthEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridColWidth"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ColWidths"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Data">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Data"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.HasData">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HasData"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HasData"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.IsUntitled">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.IsUntitled"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.IsUntitled"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Modified">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Modified"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Modified"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.FileName">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FileName"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.RowHeights">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowHeights"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ColWidths">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColWidths"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.HideRows">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideRows"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.HideCols">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HideCols"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.RowHiddenEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowHidden"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.HideRows"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ColHiddenEntries">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridColHidden"/> objects. This collection is a wrapper collection
            for values in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridControl.HideCols"/> object. It provides support for modifying
            values through a CollectionEditor and code serialization at design-time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.CommandStack">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CommandStack"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CommandStack"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Rows">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Rows"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Cols">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Cols"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DefaultGridBorderStyle">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DefaultGridBorderStyle"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DefaultGridBorderStyle"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.UseRightToLeftCompatibleTextBox">
            <summary>
            Gets or sets a value indicating whether to control the kind of textbox control that is created for TextBox cells. 
            In general the original text box behaves better than the richtext box with Hebrew and arabic languages.
            By default the grid uses the RichTextBox control for cell editing, but if you set
            UseRightToLeftCompatibleTextBox to true then the grid will do editing with original TextBox controls
            instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.HighlightFrozenLine">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HighlightFrozenLine"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HighlightFrozenLine"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DiscardReadOnly">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ReadOnly">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ReadOnly"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ReadOnly"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Item(System.Int32,System.Int32)">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ColStyles">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColStyles"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.RowStyles">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowStyles"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.TableStyle">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.CurrentCellInfo">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CurrentCellInfo"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CurrentCellInfo"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.HasCurrentCellInfo">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HasCurrentCellInfo"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.HasCurrentCellInfo"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.CurrentCellRenderer">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CurrentCellRenderer"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CurrentCellRenderer"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.CutPaste">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CutPaste"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DataExchange">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataExchange"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataExchange"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.TextDataExchange">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TextDataExchange"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TextDataExchange"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.RowCount">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowCount"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.RowCount"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ColCount">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColCount"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.ColCount"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.IgnoreReadOnly">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.IgnoreReadOnly"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.IgnoreReadOnly"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.CoveredRanges">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRanges"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRanges"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.BanneredRanges">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRanges"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRanges"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.FloatingCells">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCells"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCells"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.FloatCellsMode">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.FloatCellsMode"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.FloatCellsMode"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.CellModels">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ResizeRowsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ResizeColsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeColsBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeColsBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowDragSelectedCols">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedCols"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedCols"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowDragSelectedRows">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedRows"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedRows"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.AlphaBlendSelectionColor">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendSelectionColor"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendSelectionColor"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowSelection">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowScrollCurrentCellInView">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowScrollCurrentCellInView"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowScrollCurrentCellInView"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DragSelectedCellsMouseButtonsMask">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DragSelectedCellsMouseButtonsMask"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SelectCellsMouseButtonsMask"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.SelectCellsMouseButtonsMask">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SelectCellsMouseButtonsMask"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SelectCellsMouseButtonsMask"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ListBoxSelectionMode">
            <summary>
              <para> Gets or sets the method in which items are selected in
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> when it is being used in listbox mode
            .</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ExcelLikeCurrentCell">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeCurrentCell"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeCurrentCell"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ClickedOnDisabledCellBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ClickedOnDisabledCellBehavior"/>
            <summary>
            Gets or sets Excel-like current cell behavior. When the user clicks on a cell out of a selected range for which .Enabled has been set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ExcelLikeSelectionFrame">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeSelectionFrame"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeSelectionFrame"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ActivateCurrentCellBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.EnterKeyBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.EnterKeyBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.EnterKeyBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.TransparentBackground">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.TransparentBackground"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.TransparentBackground"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.NumberedRowHeaders">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedRowHeaders"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedRowHeaders"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.NumberedColHeaders">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedColHeaders"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.NumberedColHeaders"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ShowColumnHeaders">
            <summary>
            Gets or sets a value indicating whether the grid should be display column headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DisplayHorizontalLines">
            <summary>
            Gets or sets a value indicating whether horizontal lines should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DisplayVerticalLines">
            <summary>
            Gets or sets a value indicating whether vertical lines should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.GridLineColor">
            <summary>
            Gets or sets the color of grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.PrintColumnHeader">
            <summary>
            Gets or sets a value indicating whether column headers should be printed when printing the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.PrintHorizontalLines">
            <summary>
            Gets or sets a value indicating whether the grid should draw horizontal lines when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.PrintRowHeader">
            <summary>
            Gets or sets a value indicating whether row headers should be printed when printing the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.PrintVerticalLines">
            <summary>
            Gets or sets a value indicating whether the grid should draw vertical lines when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ShowRowHeaders">
            <summary>
            Gets or sets a value indicating whether row headers should be displayed or hidden. (Might be better to use HideCols[0] = false) instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowThumbTrack">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowThumbTrack"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowThumbTrack"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.HorizontalThumbTrack">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HorizontalThumbTrack"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HorizontalThumbTrack"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.VerticalThumbTrack">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.VerticalThumbTrack"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.VerticalThumbTrack"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.HorizontalScrollTips">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HorizontalScrollTips"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.HorizontalScrollTips"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.VerticalScrollTips">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.VerticalScrollTips"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.VerticalScrollTips"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.MinResizeRowSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeRowSize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeRowSize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.MinResizeColSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeColSize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeColSize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.SmoothControlResize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SmoothControlResize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SmoothControlResize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ScrollFrozen">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ScrollFrozen"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ScrollFrozen"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.DrawOrder">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DrawOrder"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DrawOrder"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ShowCurrentCellBorderBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShowCurrentCellBorderBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShowCurrentCellBorderBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.RefreshCurrentCellBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.RefreshCurrentCellBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShowCurrentCellBorderBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ShouldSynchronizeCurrentCell">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShouldSynchronizeCurrentCell"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShouldSynchronizeCurrentCell"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Properties">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Properties"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Properties"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ApplyVisualStyles">
            <summary>
            Enable or Disable the Legacy styles in the Table Model
            Value should be false to apply ColorStyles
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.GridVisualStyles">
            <summary>
            Gets or sets the VisualStyles (skins) like Office2010, Office2007, Office2003
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.ColorStyles">
            <summary>
            [Deprecated]Gets or sets the VisualStyles (skins) like Office2010, Office2007, Office2003
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.GridVisualStylesDrawing">
            <summary>
            Gets or sets the VisualStylesDrawing object
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCellModel">
            <summary>
            Occurs when the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> is querying for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            based on a string cellType.
            </summary>    
            <remarks>
            The GridModel has a table with all cell types used in the grid. Whenever the grid encounters
            a new cell type that it cannot find in the table, it will raise a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellModel"/> event.
            The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> identifies the name of the cell type. The 
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventArgs.CellModel"/> should receive the new instance of the
            associated cell object. This object will be stored in the table together with its name and
            reused among cells with the same <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>.
            <para/>
            You should process this event if you want to add custom cell types and initialize these
            cell types on demand when associated cells are accessed the first time.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellModelEventHandler"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ControllerOptionsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.DataObjectConsumerOptionsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptionsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.DataObjectConsumerOptionsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.BaseStylesMapChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMapChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMapChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.DataChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DataChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ModifiedChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ModifiedChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ModifiedChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.FileNameChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FileNameChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FileNameChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.CellsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.CellsChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CellsChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ConfirmingPendingChanges">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ConfirmingPendingChanges"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RefreshRequest">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RefreshRequest"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RefreshRequest"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.BeginUpdateRequest">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdateRequest"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BeginUpdateRequest"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.EndUpdateRequest">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.EndUpdateRequest"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveCellInfo">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.PasteCellText">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PasteCellText"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCellInfo">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCoveredRange">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCoveredRange"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryBanneredRange">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryBanneredRange"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryColCount">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryRowCount">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveColCount">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColCount"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveRowCount">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowCount"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.PrepareGraphics">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareGraphics"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.OperationFeedback">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedback"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.OperationFeedback"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowHeightsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowHeightsChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowHeightsChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColWidthsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColWidthsChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColWidthsChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryColWidth">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColWidth"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryRowHeight">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowHeight"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveColWidth">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveColWidth"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveRowHeight">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveRowHeight"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsHidden">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHidden"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsHiding">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsHiding"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsHidden">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHidden"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsHiding">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsHiding"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryHideCol">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideCol"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveHideCol">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideCol"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryHideRow">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryHideRow"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveHideRow">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveHideRow"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultRowHeightChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultRowHeightChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultRowHeightChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderRowCountChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderRowCountChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderRowCountChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenRowCountChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenRowCountChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenRowCountChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsMoved">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoved"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsMoving">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsMoving"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsRemoved">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoved"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsRemoving">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsRemoving"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsInserting">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserting"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.RowsInserted">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.RowsInserted"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultColWidthChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.DefaultColWidthChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.DefaultColWidthChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderColCountChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.HeaderColCountChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.HeaderColCountChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenColCountChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.FrozenColCountChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FrozenColCountChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsMoved">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoved"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsMoving">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsMoving"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsRemoved">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoved"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsRemoving">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsRemoving"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsInserting">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserting"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ColsInserted">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ColsInserted"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ReadOnlyChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ReadOnlyChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ReadOnlyChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SelectionChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SelectionChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SelectionChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.PrepareClearSelection">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareClearSelection"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareClearSelection"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.PrepareChangeSelection">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.PrepareChangeSelection"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.CoveredRangesChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.CoveredRangesChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.CoveredRangesChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.BanneredRangesChanging">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanging"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.BanneredRangesChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.BanneredRangesChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.FloatingCellsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.FloatingCellsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.MergeCellsChanged">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.MergeCellsChanged"/>
            <summary>Occurs after floating state was changed for a range of cells.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCanMergeCells">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCanMergeCells"/>
            <summary>Occurs when grid compares the contents of two cells to determine if they should be merged.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClipboardCanCopy">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCopy"/>
            <summary>Occurs when the grid's CanCopy method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClipboardCanPaste">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanPaste"/>
            <summary>Occurs when the grid's CanPaste method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClipboardCanCut">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCanCut"/>
            <summary>Occurs when the grid's CanCut method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClipboardCopy">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopy"/>
            <summary>Occurs when the grid's Copy method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClipboardCut">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCut"/>
            <summary>Occurs when the grid's Cut method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClipboardPaste">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPaste"/>
            <summary>Occurs when the grid's Paste method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClipboardCopyToBuffer">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardCopyToBuffer"/>
            <summary>Occurs when the grid's CopyToBuffer method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ClearingCells">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClearingCells"/>
            <summary>Occurs when the grid's ClearCells method is called.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCellText">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellText"/>
            <summary>Occurs each time the GridStyleInfo.Text is called to get the string that represents the underlying cell's value.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveCellText">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellText"/>
            <summary>Occurs each time the GridStyleInfo.Text is called to set the raw string that represents the underlying cell's value.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryCellFormattedText">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellFormattedText"/>
            <summary>Occurs each time the GridStyleInfo.Text is called to get the string that represents the underlying cell's value.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.SaveCellFormattedText">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellFormattedText"/>
            <summary>Occurs each time the GridStyleInfo.FormattedText is called to set the raw string that represents the underlying cell's value.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.ParseCommonFormats">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ParseCommonFormats"/>
            <summary>Handle this event to provide support for parsing the formatted string and convert it into the the underlying cell's value.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryOleDataSourceData">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModel.ClipboardPaste"/>
            <summary>Occurs when a user starts dragging a range of selected cells using OLE drag-and-drop.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Initializing">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Initializing"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Initializing"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.Provider">
            <summary>
            Assigns the new UIAProvider for Accessibility.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridControl.SerializeCellsBehavior">
            <summary>
            Gets or sets how to serialize grid data at design-time. You can choose to serialize
            cell contents as code into the Forms InitializeComponent method or you can choose
            to serialize cell contents into a ResX file. Default is GridSerializeCellsBehavior.SerializeIntoCode.
            </summary>
            <remarks>
            If you have a larger number of cells then you should switch to Resx serialization. For smaller
            number of cells SerializeIntoCode is easier to maintain since you can change cell contents
            directly within the Forms code.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.InitializeMenu">
            <summary>
            Initializes the menufactory for the design editor
            </summary>
            <returns>returns boolean value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.Dispose(System.Boolean)">
            <summary>
               Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.InitializeComponent">
            <summary>
               Required method for Designer support - do not modify
               the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.OnPreviewGridSelectionChanged(System.Object,Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs)">
            <summary>
                When the selection has changed in the grid, this will update the range information for the
                Range property grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.OnPreviewGridCurrentCellActivated(System.Object,System.EventArgs)">
            <summary>
                Needed to updated Range Property grid if ExcelLikeCurrentCell is not set to true
                and if there is currently no selection in the model's SelectedRanges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.OnPreviewGridColsRemoved(System.Object,Syncfusion.Windows.Forms.Grid.GridRangeRemovedEventArgs)">
            <summary>
                Updates the RangeStyle for the selection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.OnPreviewGridPrepareViewStyleInfo(System.Object,Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <summary>
                Sets the BackgroundImage property if the BackgroundImageID property is set at load time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridFrame.OnPreviewGridPrepareGraphics(System.Object,Syncfusion.Drawing.GraphicsEventArgs)">
            <summary>
                Temporary placement for the setting of the BackgroundImage property of the grid control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento">
            <summary>
            Contains information needed for Xml serialization relating to col/row styles, individual cell StyleInfo objects, etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.#ctor">
            <summary>
                Default constructor for Xml serialization, setting style objects to null;
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.#ctor(Syncfusion.Windows.Forms.Grid.GridControl)">
            <summary>
                Creates the GridCellsMemento object, initialized from the supplied GridControl.
            </summary>
            <param name="grid" type="Syncfusion.Windows.Forms.Grid.GridControl">
                <para>
                    The GridControl to initialize the GridCellsMemento object.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.SetGridBaseStylesToSerialize(Syncfusion.Windows.Forms.Grid.GridBaseStylesMap)">
            <summary>
            Retrieves the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyle"/> objects from the provided map, and places into the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.InitializeFrom(Syncfusion.Windows.Forms.Grid.GridControl)">
            <summary>
                Initializes the GridCellsMemento object with styles, data, etc from the supplied GridControl.
            </summary>
            <param name="grid" type="Syncfusion.Windows.Forms.Grid.GridControl">
                <para>
                       The GridControl that the values will be retrieved from
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.ApplyTo(Syncfusion.Windows.Forms.Grid.GridControl)">
            <summary>
                Applies the values contained in the GridCellsMemento object to the supplied GridControl.
            </summary>
            <param name="grid" type="Syncfusion.Windows.Forms.Grid.GridControl">
                <para>
                    The GridControl to apply the values to.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.GridColStyles">
            <copyfrom cref="T:Syncfusion.Windows.Forms.Grid.Design.ColumnStyles"/>
            <summary>Gets or sets the grid column styles.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.GridRowStyles">
            <copyfrom cref="T:Syncfusion.Windows.Forms.Grid.Design.RowStyles"/>
            <summary>Gets or sets the grid row styles.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.CoveredRanges">
            <summary>
             Gets or sets Collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo"/> objects that are to be treated as Covered
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.BanneredRanges">
            <summary>
            Gets or sets Collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridNonImmutableRangeInfo"/> objects that are to be treated as Bannered
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.GridBaseStylesToSerialize">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Windows.Forms.Grid.GridBaseStyleCollection"/> to Serialize     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.BaseStylesMap">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridCellsMemento.Cells">
            <summary>
             Gets or sets collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellInfo"/> objects containing the cell data to save out.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.ColumnStyles">
            <summary>
                Contains hidden entries and column widths of the grid, in <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.ColumnStyles.#ctor">
            <summary>
                Creates an empty <see cref="T:Syncfusion.Windows.Forms.Grid.Design.ColumnStyles"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.ColumnStyles.HiddenColumns">
            <summary>
             Gets or sets hidden entries in <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.ColumnStyles.ColumnWidths">
            <summary>
             Gets or sets column widths of the grid, in <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection"/> objects.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.RowStyles">
            <summary>
                Contains hidden entries and row heights of the grid, in <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.RowStyles.#ctor">
            <summary>
                Creates an empty <see cref="T:Syncfusion.Windows.Forms.Grid.Design.RowStyles"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.RowStyles.HiddenRows">
            <summary>
             Gets or sets hidden row entries of the grid, in <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.RowStyles.RowHeights">
            <summary>
              Gets or sets row heights of the grid, in <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection"/> objects.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry">
            <summary>
                Defines a row or a column by an index, and length (width or height).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry.#ctor">
            <summary>
                Creates an empty <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry.#ctor(System.Int32,System.Int32)">
            <summary>
                Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry"/> object with the supplied index and length.
            </summary>
            <param name="index">Index of the column or row</param>
            <param name="length">
            <para>If the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry"/> object is for a column, this is the width of the column.</para>
            <para>If the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry"/> object is for a row, this is the height of the row.</para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry.Index">
            <summary>Gets or sets the index of the column or row represented in the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry"/> object.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry.Length">
            <summary>
               <para>Gets or sets the Length. If the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry"/> object is for a column, this is the width of the column.</para>
               <para>If the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry"/> object is for a row, this is the height of the row.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection">
            <summary>
                A collection that stores 'GridRowColEntry' objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.#ctor">
            <summary>
                Initializes a new instance of 'GridRowColEntryCollection'.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.#ctor(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection)">
            <summary>
                Initializes a new instance of 'GridRowColEntryCollection' based on an already existing instance.
            </summary>
            <param name='griValue'>
                A 'GridRowColEntryCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.#ctor(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry[])">
            <summary>
                Initializes a new instance of 'GridRowColEntryCollection' with an array of 'GridRowColEntry' objects.
            </summary>
            <param name='griValue'>
                An array of 'GridRowColEntry' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.Add(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry)">
            <summary>
                Adds a 'GridRowColEntry' item with the specified value to the 'GridRowColEntryCollection'
            </summary>
            <param name='griValue'>
                The 'GridRowColEntry' to add.
            </param>
            <returns>
                The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.AddRange(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'GridRowColEntryCollection'.
            </summary>
            <param name='griValue'>
                An array of 'GridRowColEntry' objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.AddRange(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection)">
            <summary>
                Adds the contents of another 'GridRowColEntryCollection' at the end of this instance.
            </summary>
            <param name='griValue'>
                A 'GridRowColEntryCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.Contains(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry)">
            <summary>
                Gets a value indicating whether the 'GridRowColEntryCollection' contains the specified value.
            </summary>
            <param name='griValue'>
                The item to locate.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.CopyTo(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry[],System.Int32)">
            <summary>
                Copies the 'GridRowColEntryCollection' values to a one-dimensional System.Array
                instance starting at the specified array index.
            </summary>
            <param name='griArray'>
                The one-dimensional System.Array that represents the copy destination.
            </param>
            <param name='intIndex'>
                The index in the array where copying begins.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.IndexOf(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry)">
            <summary>
                Returns the index of a 'GridRowColEntry' object in the collection.
            </summary>
            <param name='griValue'>
                The 'GridRowColEntry' object whose index will be retrieved.
            </param>
            <returns>
                If found, the index of the value; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry)">
            <summary>
                Inserts an existing 'GridRowColEntry' into the collection at the specified index.
            </summary>
            <param name='intIndex'>
                The zero-based index where the new item should be inserted.
            </param>
            <param name='griValue'>
                The item to insert.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GetEnumerator">
            <summary>
                Returns an enumerator that can be used to iterate through
                the 'GridRowColEntryCollection'.
            </summary>
            <returns>returns Enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.Remove(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntry)">
            <summary>
                Removes a specific item from the 'GridRowColEntryCollection'.
            </summary>
            <param name='griValue'>
                The item to remove from the 'GridRowColEntryCollection'.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before setting an item in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.OnInsert(System.Int32,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before inserting a new item in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.Item(System.Int32)">
            <summary>
                Represents the 'GridRowColEntry' item at the specified index position.
            </summary>
            <param name='intIndex'>
                The zero-based index of the entry to locate in the collection.
            </param>
            <value>
                The entry at the specified index of the collection.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator">
            <summary>
                A strongly typed enumerator for 'GridRowColEntryCollection'
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection)">
            <summary>
                Enumerator constructor
            </summary>
            <param name="griMappings">A collection of Row Col entries.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator.MoveNext">
            <summary>
                Advances the enumerator to the next element of the collection
            </summary>
            <returns>True if next element exists; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator.Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator.Current">
            <summary>
                Gets the current element from the collection (strongly typed)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridRowColEntryCollection.GridRowColEntryEnumerator.System#Collections#IEnumerator#Current">
            <summary>
                Gets the current element from the collection
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridStylesParser">
            <summary>
            Description for GridStylesParser.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridStylesParser.ParsePropertyStore(Syncfusion.Styles.StyleInfoStore)">
            <summary>
                This method will parse the supplied StyleInfoStore for high cost properties, grouping them together for serialization purposes.
                Currently, this is limited to the BackroundImage property.
            </summary>
            <param name="store" type="Syncfusion.Styles.StyleInfoStore">
                <para>
                       The StyleInfoStore object to parse related properties.   
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer">
            <summary>
            Synchronizes the properties/data between two GridControl objects
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.#ctor">
            <summary>
                Initializes <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer"/> object for use.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.#ctor(Syncfusion.Windows.Forms.Grid.GridControl,Syncfusion.Windows.Forms.Grid.GridControl)">
            <summary>
                Creates the GridSynchronizer object, intializing the duplicate grid with the properties/data from the original grid.
            </summary>
            <param name="original" type="Syncfusion.Windows.Forms.Grid.GridControl">
                <para>
                    The GridControl to retrieve initial values from.
                </para>
            </param>
            <param name="duplicate" type="Syncfusion.Windows.Forms.Grid.GridControl">
                <para>
                    The GridControl that will recieve the initial values.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.SyncOriginal">
            <summary>
                Applies the properties from the duplicate GridControl to the original GridControl
            </summary>    
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.SetGridProperties(Syncfusion.Windows.Forms.Grid.GridControl,System.Boolean,System.Boolean)">
            <summary>
                Applies the store GridSyncProperties to the supplied GridControl
            </summary>
            <param name="grid" type="Syncfusion.Windows.Forms.Grid.GridControl">
                <para>
                    The GridControl to apply the properties to.
                </para>
            </param>
            <param name="setImageID" type="bool"> To set imageid. 
            </param>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.InitializeGridSync(Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties)">
            <summary> Initializes the duplicate GridControl with the supplied GridSyncProperties object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.InitializeGridSync(Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection)">
            <summary>
                Initializes the duplicate GridControl with the supplied PropertyInfoCollection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.InitializeGridSync">
            <summary>
                Initializes the duplicate GridControl with the values from the original GridControl
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.InitializeGridSyncProperties(Syncfusion.Windows.Forms.Grid.GridControl)">
            <summary>
                Fills the GridSyncProperties with the values from the supplied grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSynchronizer.ConfigureSpecialProperty(Syncfusion.Windows.Forms.Grid.GridControl,System.Reflection.PropertyInfo)">
            <summary>
                Configures a complex property that is not an actual property of the grid. For example, the GridCellsMemento object
                which contains values relating to various properties of the GridControl.
            </summary>
            <param name="grid" type="Syncfusion.Windows.Forms.Grid.GridControl">
                <para>
                    The GridControl to apply the property to.
                </para>
            </param>
            <param name="pi" type="System.Reflection.PropertyInfo">
                <para>
                       The PropertyInfo object that contains a complex property.    
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties">
            <exclude/>
            <summary>
                Contains all data that is saved out to Xml
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.#cctor">
            <summary>
            An empty style object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.#ctor">
            <summary>
                Constructs a new <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties"/> object with default values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.#ctor(Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties)">
            <summary>
                Constructs a new <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties"/> object based on an existing value.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties">
                <para>
                    The <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties"/> value to create the object from.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ResetModified">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Modified"/> flag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.OnChanged(System.String)">
            <summary>
                Fires the PropertyChanged event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ResetStyleGroups">
            <summary>
                Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredFonts"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredImages"/> collections
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GetImageFromBytes(System.Byte[])">
            <summary>
                Conversion method that takes a byte[] and returns a Bitmap
            </summary>
            <param name="bytes" type="byte[]">
                <para>
                       byte[] to convert         
                </para>
            </param>
            <returns>
                A System.Drawing.Bitmap value...
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GetImageBytes(System.Drawing.Bitmap)">
            <summary>
                Creates a byte[] from an existing Bitmap
            </summary>
            <param name="bmp" type="System.Drawing.Bitmap">
                <para>
                    Bitmap to retrieve values from
                </para>
            </param>
            <returns>
                A byte[] value...
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Store">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Default">
            <summary>
            Gets and initializes a new GridProperties object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Modified">
            <summary>
                Gets a value indicating whether properties have been modified
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.PropertyChanged">
            <summary>
            Occurs when any property in this object is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredImages">
            <summary>
               Gets or sets collection of Image and ID values for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredFonts">
            <summary>
               Gets or sets collection of Font and ID values for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BackColor">
            <summary>
            Gets or sets the background color for the grid control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BackgroundImageID">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.BackgroundImageID"/>
            <summary>Gets or sets the Namespace ID that contains the grids's background image information id.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BackgroundImage">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.BackgroundImage"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Cells">
            <summary>
               Gets or sets cell, row, and column specific data used for synchronization and serialization
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BorderStyle">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BorderStyle"/>
            <summary>Gets or sets the border style of the grid control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Font">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.Font"/>
            <summary>Gets or sets the font to display in the grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ForeColor">
            <copyfrom cref="P:System.Windows.Forms.Control.ForeColor"/>
            <summary>Gets or sets the text color.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.HighlightFrozenLine">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.HighlightFrozenLine"/>
            <summary>Gets or sets a value indicating whether border style to be used as default for cell borders.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.RightToLeft">
            <copyfrom cref="P:System.Windows.Forms.Control.RightToLeft"/>
            <summary>Gets or sets whether the text appears from right to left.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ThemesEnabled">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ThemesEnabled"/>
            <summary>Gets or sets a value indicating whether the themes for the grid are enabled.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ActivateCurrentCellBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ActivateCurrentCellBehavior"/>
            <summary>Gets or sets current cell activation behavior.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowColumnResizeUsingCellBoundaries">
            <summary>
            Gets or sets a value indicating whether to allow resizing of columns through standard cell boundaries. For GridListControl, it is true by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowDragSelectedCols">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowDragSelectedCols"/>
            <summary>Gets or sets a value indicating whether the control allows the user to drag selected columns by clicking on the column header.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowDragSelectedRows">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowDragSelectedRows"/>
            <summary>Gets or sets a value indicating whether the control allows the user to drag selected rows by clicking on the row header.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowRowResizeUsingCellBoundaries">
            <summary>
            Gets or sets a value indicating whether to allow resizing of rows through standard cell boundaries. No support for GridListControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowSelection">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.AllowSelection"/>
            <summary>Gets or sets selection behavior of the grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AlphaBlendSelectionColor">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.AlphaBlendSelectionColor"/>
            <summary>Gets or sets the color for alpha blended cell selections.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ClickedOnDisabledCellBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ClickedOnDisabledCellBehavior"/>
            <summary>Gets or sets Excel-like current cell behavior. When the user clicks on a cell out of a selected range for which .Enabled has been set to false.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ControllerOptions">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ControllerOptions"/>
            <summary>Gets or sets which mouse controllers should be enabled for the grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DataObjectConsumerOptions">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.DataObjectConsumerOptions"/>
            <summary>Gets or sets controls clipboard interchange format. Can be plain text and/or fully formatted with styles.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DefaultGridBorderStyle">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.DefaultGridBorderStyle"/>
            <summary>Gets or sets the border style to be used as default for cell borders.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DragSelectedCellsMouseButtonsMask">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.DragSelectedCellsMouseButtonsMask"/>
            <summary>Gets or sets which mouse buttons can be used for dragging selected rows or columns.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DrawOrder">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.DrawOrder"/>
            <summary>Gets or sets the order how cells are loaded before the grid is displayed.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.EnterKeyBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.EnterKeyBehavior"/>
            <summary>Gets or sets movement of current cell when enter key is pressed.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ExcelLikeCurrentCell">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ExcelLikeCurrentCell"/>
            <summary>Gets or sets a value indicating whether Excel-like current cell behavior. When the user moves the current cell out of a selected range, the range will be cleared.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ExcelLikeSelectionFrame">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ExcelLikeSelectionFrame"/>
            <summary>Gets or sets a value indicating whether the active selection should be outlined with a selection frame.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.FloatCellsMode">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.FloatCellsMode"/>
            <summary>Gets or sets floating cells behavior for the grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GridVisualStyles">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.GridVisualStyles"/>
            <summary>Gets or sets look and feel skins for the Grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Office2007ScrollBars">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Office2007ScrollBars"/>
            <summary>Gets or sets a value indicating whether to toggle between standard and Office2007 scrollbars.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Office2007ScrollBarsColorScheme">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Office2007ScrollBarsColorScheme"/>
            <summary>
            Gets or sets the style of Office2007 scroll bars
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GridOfficeScrollBars">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.GridOfficeScrollBars"/>
            <summary>
            Gets or sets a value indicating whether to toggle among standard, Office2007 and Office2010 scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Office2010ScrollBarsColorScheme">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.Office2007ScrollBarsColorScheme"/>
            <summary>
            Gets or sets the style of Office2010 scroll bars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.UseRightToLeftCompatibleTextBox">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.UseRightToLeftCompatibleTextBox"/>
            <summary>Gets or sets a value indicating whether to controls the kind of textbox control that is created for TextBox cells. In general the original text box behaves better than the default richtext box with Hebrew and arabic languages.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.FrozenRowCount">
            <summary>
            Gets or sets number of frozen rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.FrozenColCount">
            <summary>
            Gets or sets number of frozen columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ListBoxSelectionMode">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ListBoxSelectionMode"/>
            <summary>
              <para> Gets or sets the method in which items are selected in
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> when it is being used in listbox mode
            .</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.MinResizeColSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.MinResizeColSize"/>
            <summary>Gets or sets the minimum column width when the user resizes a column with the mouse.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.MinResizeRowSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.MinResizeRowSize"/>
            <summary>Gets or sets the minimum row height when the user resizes a row with the mouse.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.NumberedColHeaders">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.NumberedColHeaders"/>
            <summary>Gets or sets a value indicating whether to toggle display of column ids (A, B, C, ...) in column headers.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.NumberedRowHeaders">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.NumberedRowHeaders"/>
            <summary>Gets or sets a value indicating whether to toggle display of row numbers in row headers.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.OptimizeDrawBackground">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.OptimizeDrawBackground"/>
            <summary>Gets or sets a value indicating whether enable built-in optimization that allows grid to combine background drawing for cells that have the same background.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.OptimizeInsertRemoveCells">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.OptimizeInsertRemoveCells"/>
            ///<summary>Gets or sets a value indicating whether to enable optimization for inserting and removing cells by scrolling window contents and only invalidating new cells.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.RefreshCurrentCellBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.RefreshCurrentCellBehavior"/>
            <summary>Gets or sets which cells to refresh when moving the current cell.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ResizeColsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ResizeColsBehavior"/>
            <summary>Gets or sets behavior for resizing columns.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ResizeRowsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ResizeRowsBehavior"/>
            <summary>Gets or sets behavior for resizing rows.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.SelectCellsMouseButtonsMask">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.SelectCellsMouseButtonsMask"/>
            <summary>Gets or sets which mouse buttons can be used for selecting cells.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ShowCurrentCellBorderBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ShowCurrentCellBorderBehavior"/>
            <summary>Gets or sets when to show current cell frame or border.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.SmoothControlResize">
            <summary>Gets or sets a value indicating whether a grid should be completely refreshed when the user resizes the window or if only newly visible rows or columns should be redrawn.</summary>
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.SmoothControlResize"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ColCount">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.ColCount"/>
            <summary>Gets or sets the number of grid columns.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DefaultColWidth">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.DefaultColWidth"/>
            <summary>Gets or sets the default width used for grid columns.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DefaultRowHeight">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.DefaultRowHeight"/>
            <summary>Gets or sets the default height used for grid rows.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Properties">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.Properties"/>
            <summary>Gets or sets more options for the grid. Printing related. Also manages colors for grid background, grid lines, and more.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.RowCount">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.RowCount"/>
            <summary>Gets or sets the number of rows in the grid.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.SerializeCellsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridControl.SerializeCellsBehavior"/>
            <summary>Gets or sets to serialize cell contents as code or into a ResX file.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.PropertyChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.PropertyChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore">
            <copyfrom cref="T:Syncfusion.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.StoredImagesProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredImages"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.StoredFontsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.StoredFonts"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.BackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.BackgroundImageIDProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BackgroundImageID"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.BackgroundImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BackgroundImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.BorderStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.BorderStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.FontProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Font"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.HighlightFrozenLineProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.HighlightFrozenLine"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.RightToLeftProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.RightToLeft"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ThemesEnabledProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ThemesEnabled"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ActivateCurrentCellBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ActivateCurrentCellBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.AllowColumnResizeUsingCellBoundaries">
            <summary>
             Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowColumnResizeUsingCellBoundaries"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.AllowDragSelectedColsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowDragSelectedCols"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.AllowDragSelectedRowsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowDragSelectedRows"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.AllowRowResizeUsingCellBoundaries">
            <summary>
             Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowRowResizeUsingCellBoundaries"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.AllowSelectionProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AllowSelection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.AlphaBlendSelectionColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.AlphaBlendSelectionColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ClickedOnDisabledCellBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ClickedOnDisabledCellBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ControllerOptionsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ControllerOptions"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.DataObjectConsumerOptionsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DataObjectConsumerOptions"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.DefaultGridBorderStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DefaultGridBorderStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.DragSelectedCellsMouseButtonsMaskProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DragSelectedCellsMouseButtonsMask"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.DrawOrderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DrawOrder"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.EnterKeyBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.EnterKeyBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ExcelLikeCurrentCellProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ExcelLikeCurrentCell"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ExcelLikeSelectionFrameProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ExcelLikeSelectionFrame"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.FloatCellsModeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.FloatCellsMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.GridOfficeScrollBarsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GridOfficeScrollBars"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.Office2007ScrollBarsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Office2007ScrollBars"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.Office2007ScrollBarsColorSchemeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Office2007ScrollBarsColorScheme"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.Office2010ScrollBarsColorSchemeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Office2007ScrollBarsColorScheme"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.GridVisualStylesProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.GridVisualStyles"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.UseRightToLeftCompatibleTextBoxProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.UseRightToLeftCompatibleTextBox"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.FrozenRowCountProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.FrozenRowCount"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.FrozenColCountProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.FrozenColCount"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ListBoxSelectionModeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ListBoxSelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.MinResizeColSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.MinResizeColSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.MinResizeRowSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.MinResizeRowSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.NumberedColHeadersProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.NumberedColHeaders"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.NumberedRowHeadersProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.NumberedRowHeaders"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.OptimizeDrawBackgroundProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.OptimizeDrawBackground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.OptimizeInsertRemoveCellsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.OptimizeInsertRemoveCells"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.RefreshCurrentCellBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.RefreshCurrentCellBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ResizeColsBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ResizeColsBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ResizeRowsBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ResizeRowsBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.SelectCellsMouseButtonsMaskProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.SelectCellsMouseButtonsMask"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ShowCurrentCellBorderBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ShowCurrentCellBorderBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.SmoothControlResizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.SmoothControlResize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.ColCountProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.ColCount"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.DefaultColWidthProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DefaultColWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.DefaultRowHeightProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.DefaultRowHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.PropertiesProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Properties"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.RowCountProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.RowCount"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.SerializeCellsBehaviorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.SerializeCellsBehavior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.DataProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncProperties.Cells"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.GridSyncPropertiesStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection">
            <summary>
                A collection that stores 'PropertyInfo' objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.#ctor">
            <summary>
                Initializes a new instance of 'PropertyInfoCollection'.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.#ctor(Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection)">
            <summary>
                Initializes a new instance of 'PropertyInfoCollection' based on an already existing instance.
            </summary>
            <param name='proValue'>
                A 'PropertyInfoCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.#ctor(System.Reflection.PropertyInfo[])">
            <summary>
                Initializes a new instance of 'PropertyInfoCollection' with an array of 'PropertyInfo' objects.
            </summary>
            <param name='proValue'>
                An array of 'PropertyInfo' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.Add(System.Reflection.PropertyInfo)">
            <summary>
                Adds a 'PropertyInfo' item with the specified value to the 'PropertyInfoCollection'
            </summary>
            <param name='proValue'>
                The 'PropertyInfo' to add.
            </param>
            <returns>
                The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.AddRange(System.Reflection.PropertyInfo[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'PropertyInfoCollection'.
            </summary>
            <param name='proValue'>
                An array of 'PropertyInfo' objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.AddRange(Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection)">
            <summary>
                Adds the contents of another 'PropertyInfoCollection' at the end of this instance.
            </summary>
            <param name='proValue'>
                A 'PropertyInfoCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.Contains(System.Reflection.PropertyInfo)">
            <summary>
                Gets a value indicating whether the 'PropertyInfoCollection' contains the specified value.
            </summary>
            <param name='proValue'>
                The item to locate.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.CopyTo(System.Reflection.PropertyInfo[],System.Int32)">
            <summary>
                Copies the 'PropertyInfoCollection' values to a one-dimensional System.Array
                instance starting at the specified array index.
            </summary>
            <param name='proArray'>
                The one-dimensional System.Array that represents the copy destination.
            </param>
            <param name='intIndex'>
                The index in the array where copying begins.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.IndexOf(System.Reflection.PropertyInfo)">
            <summary>
                Returns the index of a 'PropertyInfo' object in the collection.
            </summary>
            <param name='proValue'>
                The 'PropertyInfo' object whose index will be retrieved.
            </param>
            <returns>
                If found, the index of the value; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.Insert(System.Int32,System.Reflection.PropertyInfo)">
            <summary>
                Inserts an existing 'PropertyInfo' into the collection at the specified index.
            </summary>
            <param name='intIndex'>
                The zero-based index where the new item should be inserted.
            </param>
            <param name='proValue'>
                The item to insert.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to iterate through
            the 'PropertyInfoCollection'.
            </summary>
            <returns>returns PropertyInfoEnumerato</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.Remove(System.Reflection.PropertyInfo)">
            <summary>
                Removes a specific item from the 'PropertyInfoCollection'.
            </summary>
            <param name='proValue'>
                The item to remove from the 'PropertyInfoCollection'.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before setting an item in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.OnInsert(System.Int32,System.Object)">
            <summary>
                TODO: Describe what custom processing this method does
                before inserting a new item in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.Item(System.Int32)">
            <summary>
                Represents the 'PropertyInfo' item at the specified index position.
            </summary>
            <param name='intIndex'>
                The zero-based index of the entry to locate in the collection.
            </param>
            <value>
                The entry at the specified index of the collection.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator">
            <summary>
                A strongly typed enumerator for 'PropertyInfoCollection'
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator.#ctor(Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection)">
            <summary>
                Enumerator constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator.Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator.Current">
            <summary>
                Gets the current element from the collection (strongly typed)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Design.PropertyInfoCollection.PropertyInfoEnumerator.System#Collections#IEnumerator#Current">
            <summary>
                Gets the current element from the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlRowAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigate to the next or previous grid entry.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The navigation attempt fails.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlRowAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The default action for the control cannot be performed.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlRowAccessibleObject.GetFocused">
            <summary>
            Returns the currently focused child, if any.
            Returns this if the object itself is focused.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The control cannot be retrieved.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlCellAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigate to the next or previous grid entry.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The navigation attempt fails.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlCellAccessibleObject.GetFocused">
            <summary>
            Returns the currently focused child, if any.
            Returns this if the object itself is focused.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The control cannot be retrieved.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlColHeaderAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
            <summary>
            Modifies the selection or moves the keyboard focus of the accessible object.
            </summary>
            <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection"/> values.</param>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The selection cannot be performed.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlColHeaderAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigate to the next or previous grid entry.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The navigation attempt fails.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridControlColHeaderAccessibleObject.GetFocused">
            <summary>
            Returns the currently focused child, if any.
            Returns this if the object itself is focused.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The control cannot be retrieved.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUIAProvider.GetSelection">
            <summary>
            Not Implemented.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton">
            <summary>
            Defines the up / down cell button elements of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>.
            </summary>
            <remarks>
            The up-down buttons are XP Themes enabled. They will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is True.
            <para/>
            The button support auto-clicking. When the user holds the mouse on a button, the button will continuously raise
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridCellButton.Clicked"/> events.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.#ctor(Syncfusion.Windows.Forms.Grid.GridCellRendererBase,System.Windows.Forms.ScrollButton)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>
            and saves the <see cref="T:System.Windows.Forms.ScrollButton"/> type.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> that manages the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellButton"/>.</param>
            <param name="button">The <see cref="T:System.Windows.Forms.ScrollButton"/> type of this button. Up or down.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.MouseDown(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <override/>
            <summary>
            This is called from <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.HitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/>
            has indicated it wants to receive mouse events and the user has pressed the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.MouseMove(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <override/>
            <summary>
            This is called from <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.HitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/>
            has indicated it wants to receive mouse events and the user has pressed the mouse button and is moving the mouse.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>      
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.MouseUp(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <override/>
            <summary>
            This is called from <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> when <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellButton.HitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)"/>
            has indicated it wants to receive mouse events and the user has released the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.CancelMode(Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo)">
            <override/>
            <summary>
            Occurs when the current mouse operation is canceled.
            </summary>
            <param name="ht">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellHitTestInfo"/> with saved hit-test information about the mouse event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draws a button using <see cref="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)"/> or if XP Themes
            are enabled, button will be drawn themed.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rect">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="buttonState">A <see cref="T:System.Windows.Forms.ButtonState"/> that specifies the current state.</param>
            <param name="style">The style information for the cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton.ButtonType">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.ScrollButton"/> of this current button: Up or down.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart">
            <summary>
            Implements the grid that can be displayed in a drop-down window for 
            a combo box. Handles autoscrolling and resize to fit contents.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListControl">
            <summary>
            Implements a <see cref="T:System.Windows.Forms.ListControl"/> that shows data in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/>
            child window. Supports multiple columns, databinding, and selection of items similar to a list box.
            </summary>
            <remarks>
            Because <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/> is derived from <see cref="T:System.Windows.Forms.ListControl"/>, you can easily replace an existing list box (which is also derived from ListControl)
            with this <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>.
            <para/>
            You can access the underlying grid control with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/> property. The listcontrol
            supports several selection modes similar to a list box.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridListControl.NoMatches">
            <summary>
              <para> Specifies that no matches are found during a search.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridListControl.DefaultItemHeight">
            <summary>
              <para>Specifies the default item height for an owner-drawn <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.CreateGridChild">
            <summary>
            Creates the grid child.
            </summary>
            <returns>returns GridListControlChild</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl._ControlAdded(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnSupportsTransparentBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridListControl.SupportsTransparentBackColorChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.SetDataBinding(System.Windows.Forms.BindingContext,System.Object,System.String,System.String)">
            <summary>
            Sets the <see cref="P:System.Windows.Forms.ListControl.DataSource"/>, <see cref="P:System.Windows.Forms.ListControl.DisplayMember"/>,
            and <see cref="P:System.Windows.Forms.ListControl.ValueMember"/> properties at run-time.
            </summary>
            <param name="bindingContext">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.BindingContext"/> of the parent form.</param>
            <param name="dataSource">The data source, typed as <see cref="T:System.Object"/>, for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/> control. </param>
            <param name="displayMember">A string that specifies the property of the datasource whose contents you want to display.</param>
            <param name="valueMember">A string that specifies the property of the datasource from which to draw the value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.BeginInit">
            <summary>
            Implements the <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit"/> of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.EndInit">
            <summary>
            Implements the <see cref="M:System.ComponentModel.ISupportInitialize.EndInit"/> of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GetColumnStyle(System.Int32)">
            <summary>
            Provides access to style information for a specified column in the list control.
            </summary>
            <param name="colNum">The zero-based column index.</param>
            <returns>The style information for the specified column.</returns>
            <remarks>
            For GridListControl you need to use this method to access style information
            because the column styles indexer of the underlying grid control is ignored
            when style information is collected for cells in the list control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Int32)">
            <summary>
            Creates a column for a given <see cref="T:System.ComponentModel.PropertyDescriptor"/> from the datasource.
            </summary>
            <param name="pd">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> with column information.</param>
            <param name="column">The column index in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.FindItem(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds text in the list box.
            </summary>
            <param name="prefix">The text (or prefix) to find.</param>
            <param name="selectItem">True if you want to select the text in the list box.</param>
            <param name="start">The first index to start searching.</param>
            <param name="ignoreCase">True if case can be ignored; False if case sensitive.</param>
            <returns>The index of the entry that starts with the text; -1 if
            no entry could be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GridSelectionChanged(System.Object,Syncfusion.Windows.Forms.Grid.GridSelectionChangedEventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.SelectionChanged"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/> and sets <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.SelectedIndex"/> property.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GridQueryColWidth(System.Object,Syncfusion.Windows.Forms.Grid.GridRowColSizeEventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControl.QueryColWidth"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/> and returns the width of individual columns.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GridKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/> and moves the current selection when an arrow key is pressed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ClearSelected">
            <summary>
              <para>Unselects all items in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.FindString(System.String)">
            <overload>
              <para>Finds the first item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            that starts with the specified string.</para>
            </overload>
            <summary>
              <para>Finds the first item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            that starts with the specified string.</para>
            </summary>
            <param name="s">The text to search for. </param>
            <returns>
              <para>The zero-based index of the first item found; returns
            <see langword="ListBox.NoMatches"/> if no match is found.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.FindString(System.String,System.Int32)">
            <summary>
              <para>Finds the first item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/> that starts with the specified string.
            The search starts at a specific starting index.</para>
            </summary>
            <param name="s">The text to search for. </param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to negative one (-1) to search from the beginning of the control. </param>
            <returns>
              <para>The zero-based index of the first item found; returns
            <see langword="ListBox.NoMatches"/>
            if no match is found.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.FindStringExact(System.String)">
            <overload>
              <para>Finds the first item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            that exactly matches the specified string.</para>
            </overload>
            <summary>
              <para>Finds the first item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            that exactly matches the specified string.</para>
            </summary>
            <param name="s">The text to search for. </param>
            <returns>
              <para>The zero-based index of the first item found; returns
            <see langword="ListBox.NoMatches"/>
            if no match is found.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.FindStringExact(System.String,System.Int32)">
            <summary>
              <para>Finds the first item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/> that exactly matches the specified string.
            The search starts at a specific starting
            index.</para>
            </summary>
            <param name="s">The text to search for. </param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to negative one (-1) to search from the beginning of the control. </param>
            <returns>
              <para>The zero-based index of the first item found;
            returns <see langword="ListBox.NoMatches"/>
            if no match is found.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GetItemHeight(System.Int32)">
            <summary>
              <para>Returns the height of an item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            .</para>
            </summary>
            <param name="index">The zero-based index of the item to return the height for. </param>
            <returns>
              <para>The height, in pixels, of the specified item.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GetItemRectangle(System.Int32)">
            <summary>
              <para>Returns the bounding rectangle for an item in the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            .</para>
            </summary>
            <param name="index">The zero-based index of an item whose bounding rectangle you want to return. </param>
            <returns>
              <para>A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding rectangle for the specified item.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GetSelected(System.Int32)">
            <summary>
              <para>Returns a value indicating whether the specified item is selected.</para>
            </summary>
            <param name="index">The zero-based index of the item that determines whether it is selected. </param>
            <returns>
              <para>
                <see langword="True"/> If the
            specified item is currently selected in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>; otherwise, <see langword="False"/> .</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.IndexFromPoint(System.Drawing.Point)">
            <overload>
              <para>Returns the zero-based index of the item
            at the specified coordinates.</para>
            </overload>
            <summary>
              <para>Returns the zero-based index of the item
            at the specified coordinates.</para>
            </summary>
            <param name="p">A <see cref="T:System.Drawing.Point"/> object containing the coordinates used to obtain the item index. </param>
            <returns>
              <para>The zero-based index of the item found at the specified coordinates; returns
            <see langword="ListBox.NoMatches"/> if no match is found.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.IndexFromPoint(System.Int32,System.Int32)">
            <summary>
              <para>Returns the zero-based index of the item at the specified coordinates.</para>
            </summary>
            <param name="x">The x coordinate of the location to search. </param>
            <param name="y">The y coordinate of the location to search. </param>
            <returns>
              <para>The zero-based index of the item found at the specified
            coordinates; returns <see langword="ListBox.NoMatches" />
            if no match is
            found.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.SetItemCore(System.Int32,System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.BeginUpdate">
            <summary>
            Suspends updating the list control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.EndUpdate">
            <summary>
            Resumes updating the list control after a <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.BeginUpdate"/>, calls <see cref="M:System.Windows.Forms.Control.PerformLayout"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.SetItemsCore(System.Collections.IList)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.RefreshItem(System.Int32)">
            <summary>
              <para>When overridden in a derived class, resynchronizes the data of
            the object at the specified index with the contents of the datasource.</para>
            </summary>
            <param name="index">
              <para>The zero-based index of the item whose data to refresh.</para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.InitLayout">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnBindingContextChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnDataSourceChanged(System.EventArgs)">
            <summary>
             Overridden. See the <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnDisplayMemberChanged(System.EventArgs)">
            <summary>
             Overridden. See the <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnSelectedIndexChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnSelectedValueChanged(System.EventArgs)">
            <summary>
              Overriden. See the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnValueMemberChanged(System.EventArgs)">
            <summary>
              Overridden. See the <see cref="E:System.Windows.Forms.ListControl.ValueMemberChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.RefreshRows(System.Windows.Forms.CurrencyManager)">
            <summary>
            Refreshes the child view using the DataRelation to get to
            the child rows of the selected row.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GetRowCount(System.Object)">
            <summary>
            Returns the row count for the specified datasource.
            </summary>
            <param name="dataSource">The datasource, typed as <see cref="T:System.Object"/>.</param>
            <returns>The number of records in the datasource.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GridCurrentCellMoving(System.Object,Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GridCurrentCellActivating(System.Object,Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivating"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GridCurrentCellDeactivated(System.Object,Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellDeactivated"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GridCurrentCellActivated(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnMultiColumnChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridListControl.MultiColumnChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.SetSelected(System.Int32,System.Boolean)">
            <summary>
              <para> Selects or clears the selection for the specified
            item in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            .</para>
            </summary>
            <param name="index">The zero-based index of the item in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/> to select or clear the selection. </param>
            <param name="value">
            <see langword="True"/> to select the specified item; otherwise, <see langword="False"/> . </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnThemeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridListControl.ThemeChanged"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>
            <para>The OnThemeChanged method also allows derived classes to handle the event
            without attaching a delegate. This is the preferred technique for
            handling the event in a derived class.</para>
            <para>Notes to Inheritors:  When overriding OnThemeChanged in a derived
            class, be sure to call the base class's OnThemeChanged method so that
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnBackColorChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnFontChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnCausesValidationChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnEnter(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnLeave(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnValidating(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnValidated(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnLostFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnGotFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnDeactivated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridListControl.Deactivated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.QueryFocusInside">
            <summary>
            Determines if this control contains focus. Override this method if you
            want to show drop-down windows and indicate the control has not lost focus when
            the drop-down is shown.
            </summary>
            <returns>True if the control or any child control has focus; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlGotFocus">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event. This method is called when the control
            or any child control has focus and did not have focus before.
            </summary>
            <remarks>
            Inheriting classes should override this method instead of overriding <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)"/>
            because <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlGotFocus"/> is also called when child controls get focus and it
            is not called when focus is moved within child controls of this control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlLostFocus">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event. This method is called when the control
            or any child control loses focus and the new focused control is not a child of this control.
            </summary>
            <remarks>
            Inheriting classes should override this method instead of overriding <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)"/>
            because <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlLostFocus"/> is also called when child controls lose focus and it
            is not called when focus is moved within child controls of this control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnValidatingLostFocus">
            <summary>
            This method is called if the control's <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlLostFocus"/> notification occurs
            while handling a <see cref="E:System.Windows.Forms.Control.Validating"/> event. This typically occurs if a
            message box is displayed from a <see cref="E:System.Windows.Forms.Control.Validating"/> event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ResetBackColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.BackColor"/> to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ResetTableStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.TableStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ResetHeaderBackColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.HeaderBackColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ResetHeaderTextColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.HeaderTextColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ResetProperties">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.Properties"/> object to its default state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ResetAlphaBlendSelectionColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.AlphaBlendSelectionColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.ShouldSerializeAlphaBlendSelectionColor">
            <summary>
            Specifies whether or not to serialize the AlphaBlendSelectionColor in the designer.
            </summary>
            <returns>True to serialize; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControl.GetItemValue(System.Object)">
            <summary>
            Returns the value for the ValueMember of the specified item.
            </summary>
            <param name="item">The row item.</param>
            <returns>The value of the ValueMember.</returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridListControl.MultiColumnChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.MultiColumn"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Site">
            <override/>
            <summary>Gets or sets the site of the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Grid">
            <summary>
            Gets the underlying <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> wrapped by this ListControl class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.SupportsTransparentBackColor">
            <summary>
            Gets or sets a value indicating whether to toggle support for Windows 2000 and Windows XP transparency. Set this to True
            if you want the grid to draw transparent over a background bitmap.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridListControl.SupportsTransparentBackColorChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.SupportsTransparentBackColor"/> has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.AllowResizeColumns">
            <summary>
            Gets or sets a value indicating whether the user can resize columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.AutoSizeColumns">
            <summary>
            Gets or sets a value indicating whether columns should be automatically sized
            to fit contents of their cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ShowColumnHeader">
            <summary>
            Gets or sets a value indicating whether column headers should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.FillLastColumn">
            <summary>
            Gets or sets a value indicating whether the last column should be sized in a way
            that the whole client area of the grid is used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Text">
            <override/>
            <summary>Gets or sets the text associated with this control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ForceNonThemedBorder">
            <summary>
            Gets or sets a value indicating whether to disable themed border drawing and instead draw a solid black border
            when setting BorderStyle.FixedSingle.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ImageList">
            <summary>
            Gets or sets a list of images that can be referenced with ImageIndex properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Initializing">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginInit"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.BorderStyle">
            <summary>
              <para>Gets or sets the border style of the control.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.CreateParams">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ScrollAlwaysVisible">
            <summary>
              <para> Gets or sets a value indicating whether the vertical scroll bar is shown at all times.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.SelectedItem">
            <summary>
              <para>Gets or sets the currently selected item in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            .</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Updating">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.BeginUpdate"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.SelectedIndex">
            <override/>
            <summary>Specifies the index of the selected item.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ImageColumn">
            <summary>
            Gets or sets the column that should display any optional images from the image list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ListManager">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.CurrencyManager"/> for the datasource in this list control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.SelectionMode">
            <summary>
              <para> Gets or sets the method in which items are selected in
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            .</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.MultiColumn">
            <summary>
            Gets or sets a value indicating whether the grid should display only single or multiple columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.TopIndex">
            <summary>
            Gets or sets the first visible row index in the list control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ItemHeight">
            <summary>
            Gets or sets the default row item height in the list control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Items">
            <summary>
            Gets a list with items that are displayed in the list control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.GridVisualStyles">
            <summary>
            Gets or sets the VisualStyles (skins) like Office2010, Office2007, Office2003
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ColorStyles">
            <summary>
            [Deprecated] Gets or sets the VisualStyles (skins) like Office2010, Office2007, Office2003
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.GridVisualStylesDrawing">
            <summary>
            Gets or sets the VisualStylesDrawing object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ThemesEnabled">
            <summary>
            Gets or sets a value indicating whether XP Themes (visual styles) should be used for this control when
            available.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ApplyVisualStyles">
            <summary>
            Enable or Disable the Legacy styles in the Table Model
            Value should be false to apply ColorStyles
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridListControl.ThemeChanged">
            <summary>
            This event will be fired when the ThemesEnabled property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ForeColor">
            <override/>
            <summary>Specifies the foreground color used to display text and graphics in the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.IsValidating">
            <summary>
            Gets a value indicating whether the <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnValidating(System.ComponentModel.CancelEventArgs)"/> method has been called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnLeave(System.EventArgs)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnEnter(System.EventArgs)"/> reset this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.IsValidated">
            <summary>
            Gets a value indicating whether the <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnValidated(System.EventArgs)"/> method has been called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnLeave(System.EventArgs)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnEnter(System.EventArgs)"/> reset this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.IsActiveControl">
            <summary>
            Gets a value indicating whether the <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnEnter(System.EventArgs)"/> has been called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnLeave(System.EventArgs)"/> resets this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.IsDeactivated">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnDeactivated(System.EventArgs)"/> has been called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnEnter(System.EventArgs)"/> resets this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.HasControlFocus">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlGotFocus"/> has been called. <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlLostFocus"/> resets this flag.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridListControl.Deactivated">
            <summary>
            Occurs when both <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnControlLostFocus"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridListControl.OnLeave(System.EventArgs)"/> occur.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.BackColor">
            <override/>
            <summary>Specifies the Backcolor used to display text in the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.BackgroundImage">
            <override/>
            <summary>Specifies the background image used for the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Font">
            <override/>
            <summary>Specifies the font used to display text in the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.TableStyle">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle"/>
            <summary>Gets or sets the table style.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.HeaderBackColor">
            <summary>
            Gets or sets the backcolor for header cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.HeaderTextColor">
            <summary>
            Gets or sets the text color for header cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.MinResizeRowSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeRowSize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeRowSize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.MinResizeColSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeColSize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeColSize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.Properties">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Properties"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Properties"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.ResizeRowsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.TransparentBackground">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.TransparentBackground"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.TransparentBackground"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.AlphaBlendSelectionColor">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendSelectionColor"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendSelectionColor"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.AccessibilityEnabled">
            <summary>
            Gets or sets a value indicating whether the control should enable its Accessibility support.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControl.BindingContext">
            <override/>
            <summary>Gets or sets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridListControl.BindingContext"/> for the control.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.OnBindingContextChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.GetOptimalWidth">
            <summary>
            Determines the optimal width of the drop-down window based on
            current column widths in this grid.
            </summary>
            <returns>Drop-down window width.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.DropDownRows">
            <summary>
            Gets or sets the number of visible rows when the window is dropped-own.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlPart.AllowModifySetBoundsCore">
            <internalonly/>
            <summary>Gets or sets a value indicating whether to allow modify SetBoundsCore. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel">
            <summary>
            Provides editing support for RichText. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/>
            will display the panel inside a drop-down container.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.ProcessDialogKey(System.Windows.Forms.Keys)">
            <returns>
            true if the key was processed by the control; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.Save">
            <summary>
            Occurs when user clicks the "Save" button.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.Cancel">
            <summary>
            Occurs when user clicks the "Cancel" button.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.RichTextBox">
            <summary>
            Gets a reference to the <see cref="P:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.RichTextBox"/> that is being displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCellModelFactory">
            <summary>
            GridCellModelFactory creates <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> objects to be used in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelFactory.#ctor">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelFactory"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCellModelFactory.CreateCellModel(System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> objects to be used in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="cellTypeName">A cell type name that identifies the cell model to be instantiated.</param> 
            <param name="pGrid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> the new cell model object should be associated with.</param>
            <returns>A cell model.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel">
            <summary>
            Implements the data / model part for a check box cell. 
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/> for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/> specific for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)">
            <override/>
            <summary>
            Parses the display text and converts it into a cell value to be stored in the style object.
            GridStyleInfo.CultureInfo is used for parsing the string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="str">The input text to be parsed.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.OnQueryCanFloatCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryFloatCell)">
            <override/>
            <summary>
            Determines whether the cell supports floating over a neighboring cell or can be
            flooded by a previous cell.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="query">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryFloatCell"/> value that specifies whether a cell is asked
            about support for floating over another cell or being flooded by a previous cell.</param>
            <returns>True if floating is possible; False otherwise.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.checkBoxSize">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <override/>
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">The GridQueryBounds</param>
            <returns>The optimal size of the cell.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel.CheckBoxSize">
            <summary>Gets or sets CheckBoxSize. For internal use.</summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer">
            <summary>
            Implements the renderer part for a check box cell.
            </summary>
            <remarks>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/> cell's behavior can be customized with the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CheckBoxOptions"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance where you can specify values for Checked, Unchecked, and Indeterminated. The
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TriState"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> instance
            lets you toggle tri-state behavior for the cell.
            <para/>
            <para/> 
            <para/>
            The check box cell is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is True.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            Use "Check Box" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell.
            <para/>
            The following table lists some characteristics about the Check Box cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>Check Box</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Mouse Click or SpaceBar</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>Floating</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>Check Box (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>The cell value should match one of the values of <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CheckBoxOptions"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>)</term>
                    <description>Gets / sets flat look and values that represent checked, unchecked, and indeterminated state of the check box. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the text that is shown in the check box. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the check box will be drawn grayed out. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text and the checkbox in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand).
            When you enable hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not
            be displayed. The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/> of a check box can have hotkeys. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaskEdit"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/>)</term>
                    <description>Gets / sets MaskedEdit state. MaskedEdit is itself an expandable object with several properties that can be set individually and participate in style inheritance mechanism. (Default: GridMaskEditInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information. The cell value should match one of the values provided by <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellInfo"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle including the check box and the borders of the cell. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TriState"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if this is a Tristate check box that has an additional indeterminated state. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text and the check box in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Description"/> text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.checkBoxSize">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/> object for the given GridControlBase
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase, 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.DetermineCheckBoxBounds(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.ContentAlignment,Syncfusion.Windows.Forms.Grid.GridMargins,Syncfusion.Windows.Forms.Grid.GridTextAlign)">
            <summary> 
            Calculates the checker boundaries taking alignment, margins and style information into account.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="clientBounds">Specifies the client rectangle. It is the cell rectangle without buttons and borders.</param>
            <param name="text">The text to display in the check box cell.</param>
            <param name="font">The font for drawing text.</param>
            <param name="align">The alignment of check box and text inside cell.</param>
            <param name="margins">The margins between check box, text, and the cell borders.</param>
            <param name="textAlign">Specifies if checker should be left or right of text.</param>      
            <returns>The rectangle with check box bounds.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Windows.Forms.ButtonState,System.Drawing.ContentAlignment,System.String,System.Drawing.Font)">
            <summary>
            Draws the checker at the given coordinates.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="clientBounds">Specifies the client rectangle. It is the cell rectangle without buttons and borders.</param>
            <param name="style">A reference to the style object of the cell.</param>       
            <param name="state">The current state of the check box to be drawn.</param>
            <param name="align">The alignment of check box and text inside cell.</param>
            <param name="text">The text to display in the checkb ox cell.</param>
            <param name="font">The font for drawing text.</param>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.GetState(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Returns the current <see cref="T:System.Windows.Forms.ButtonState"/> for the checker for the specified cell.
            </summary>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <param name="style">A reference to the style object of the cell.</param>
            <returns>The current <see cref="T:System.Windows.Forms.ButtonState"/> at the given cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.IsCellScope(System.Int32,System.Int32)">
            <summary>
            Determines if the check box at the specified cell coordinates has scope set.
            </summary>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <returns>True if cell has scope; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.SetCellScope(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets scope for the specified cell.
            </summary>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <param name="value">True if cell has scope; False otherwise.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.GetCachedCheckerBounds(System.Int32,System.Int32)">
            <summary>
            Returns the checker bounds for the cell at the specified cell coordinates.
            </summary>
            <param name="rowIndex">Specifies the row id.</param>
            <param name="colIndex">Specifies the column id.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle"/> with bounds for the checker.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnHitTest(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <summary>
            Overriden. Checks if mouse is inside the checker.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> with data about the mouse event.</param>
            <param name="controller">The current controller that requested to handle this mouse event.</param>
            <returns>Non-zero if mouse is over the checker; 0 otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnMouseHoverEnter(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnMouseHoverLeave(System.Int32,System.Int32,System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnMouseDown(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnMouseUp(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnMouseMove(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnCancelMode(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnClickedCheckBox">
            <summary>
            Called when user clicked check box. Toggles the cell's value and stores it back into the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.OnSaveChanges">
            <summary>
            This method is called from GridCurrentCell.ConfirmChanges when the current cell
            was marked as modified. Any drop-downs have been closed at this time. It saves changes for the current cell.
            </summary>
            <returns>
            True if changes were saved successfully; False if no changes were saved.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)">
            <summary>
            Draws check box at the specified bounds.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="rectangle">The Rectangle Bounds.</param>
            <param name="state">Button state.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)">
            <summary>
            Draws checks at the given bounds.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="x">X co-ordinate.</param>
            <param name="y">Y co-ordinate.</param>
            <param name="width">Width of the rectangle bounds.</param>
            <param name="height">Height of the rectangle bounds.</param>
            <param name="state">Button state.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer.CheckBoxSize">
            <summary>Gets or sets CheckBoxSize. For internal use.</summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox">
            <summary>
            Adds grid cell-specific keyboard logic to a <see cref="T:Syncfusion.Windows.Forms.Tools.CurrencyTextBox"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.#ctor(Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>.
            </summary>
            <param name="parent">Currency text box cell renderer.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is an input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the key's values.</param>
            <returns>
            true if the specified key is an input key; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.PreProcessMessage(System.Windows.Forms.Message@)">
            <override/>
            <summary>
            Preprocesses keyboard or input messages within the message loop before they are displatched.
            </summary>
            <param name="msg">Message to be preprocessed.</param>
            <returns>True if the operation is successful.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.HandleDecimalKey">
            <summary>
            Invoked when the decimal key is pressed.
            </summary>
            <returns>True if the key is handled; false otherwise.</returns>
            <remarks>
            The defined behavior for this key is to jump to the position immediately
            after the decimal position.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>
            This method overrides the <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)"/> method
            and handles the key messages that are of interest to the NumberTextBox.
            </summary>
            <param name="m">The message that is to handled.</param>
            <returns>
            True if the key message is handled; false otherwise.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.ProcessDialogKey(System.Windows.Forms.Keys)">
            <returns>
            true if the key was processed by the control; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.Paste">
            <override/>
            <summary>
            Pastes the data in the clipboard into the currency textbox cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox.ParentCell">
            <summary>
            Gets the associated cell renderer for the text box.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel">
            <summary>
            Implements the data / model part for a Currency cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates cell renderer.</summary>
            <returns>Currency TextBox cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <override/>
            <summary>
            This is called from GridStyleInfo.GetFormattedText.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>The formatted text for the given value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.ApplyText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String)">
            <override/>
            <summary>
            Parses the text and converts it into a cell value to be stored in the style object (ignoring any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> settings).
            CultureInfo.CurrentText is used for parsing the string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="text">The input text to be parsed.</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)">
            <override/>
            <summary>
            Parses the display text and converts it into a cell value to be stored in the style object.
            GridStyleInfo.CultureInfo is used for parsing the string.
            </summary>
            <param name="style">Style information for the cell.</param>
            <param name="text">The input text to be parsed.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.GetDisplayTextAndColor(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Drawing.Color@)">
            <summary>
            Returns the text as it is displayed in the cell (without '-' sign) and also the text color.
            </summary>
            <param name="style">The style information.</param>
            <param name="value">The value.</param>
            <param name="textColor">Returns the text color for the cell (depending on whether value is negative or positive).</param>
            <returns>The text as it is displayed in the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.InitCurrencyEditProperties(Syncfusion.Windows.Forms.Tools.CurrencyTextBox,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Tools.CurrencyTextBox"/> with information supplied by a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.
            </summary>
            <param name="mb">The control to be initialized.</param>
            <param name="style">The style with settings to be applied.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.GetText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object)">
            <override/>
            <summary>
            This is called from GridStyleInfo.GetText (ignoring any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> settings).
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to convert to a string.</param>
            <returns>The string that represents the given value.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel.ValidateNumberDuringCellPaste">
            <summary>
            Gets or sets a value indicating whether Clipboard text is validated before a paste.
            </summary>
            <remarks>
            If ValidateNumberDuringCellPaste is true, then when a paste operation is preformed on an active 
            cell, the paste will only be attempted if the text on the Clipboard is valid.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer">
            <summary>
            Implements the renderer part of a currency cell that handles currency input
            and validation.
            </summary>
            <remarks>
            The CurrencyTextBox is derived from the text box and provides all the functionality
            of a text box and adds additional functionality of its own.
            <para>
            Collecting currency input in a consistent format requires a alot of validation code
            that needs to be built into the application when using the Windows Forms text box control.
            The CurrencyTextBox includes all this logic into its methods and properties
            and makes it easy for the developer and the end user to collect and enter currency data.
            </para>
            <para>
            The CurrencyTextBox is also closely tied to the globalization settings of the
            operating system for Currency related properties. Please refer to the <see cref="T:System.Globalization.NumberFormatInfo"/>
            class for a detailed explnation of globalization and Currency related attributes.
            </para>
            Use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CurrencyEdit"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>) property
            of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> to change currency edit properties for a cell.
            <para/>
            <para/>
            The following table lists some characteristics about the Currency cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>Currency</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBox"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>Both</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width. (Default: false)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>Currency (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CurrencyEdit"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyEditInfo"/>)</term>
                    <description>A nested object with currency text box properties for a cell.  (Default: GridCurrencyEditInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if text can float into the boundaries of a neighboring cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if this cell can be flooded by a previous cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            Date format strings or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm). (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for a individual cell when merging cell's features have been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with  <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridCurrencyTextBoxCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.CanCopy">
            <override/>
            <summary>
            Determines whether current cell can be copied to clipboard.
            </summary>
            <returns>True if copy is supported; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.CanPaste">
            <summary>
            Determines whether current cell can be pasted from clipboard.
            </summary>
            <returns>True if paste is supported; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.Paste">
            <summary>
            Called when user initiates a clipboard paste and the grid has a current cell but no range is selected.
            </summary>
            <returns>True if successful; False if failed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>Allows custom formatting of a cell by changing its style object.</summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnSaveChanges">
            <summary>
            This method is called from GridCurrentCell.ConfirmChanges when the current cell
            was marked as modified. Any drop-downs have been closed at this time. It saves changes for the current cell.
            </summary>
            <returns>
            True if changes were saved successfully; False if no changes were saved.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnValidate">
            <summary>
            This method is called from GridCurrentCell.Validate after GridCurrentCell.Validating event has been
            fired. The default version checks if the active text fits any criteria as specified
            in the style object: It can be parsed into a cell value and meets GridCellValidateValueInfo criteria.
            </summary>
            <returns>
            True if the modified text is valid; False otherwise.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.InitializeControlText(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnActivated">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnHasFocusControlChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnSetControlText(System.String)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxStaticCellAdapter">
            <summary>
            Adapter class to get CurrencyTextBox specific information for static drawing of
            a GridCurrencyTextBoxCell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxStaticCellAdapter.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Color@)">
            <summary>
            Gets the currency formatted text for a given GridStyleInfo.
            </summary>
            <param name="info">The GridStyleInfo object that has the CurrencyEditInfo.</param>
            <param name="textColor">Display color for the cell.</param>
            <returns>The formatted currency text.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel">
            <summary>
            Implements the data / model part of a drop-down color selection cell that lets users drop-down a
            color selection panel from a cell just like a combo box.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer">
            <summary>
            Implements the renderer part of a drop-down color selection cell that lets users drop-down a
            color selection panel from a cell just like a combo box.
            </summary>
            <remarks>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The following table lists some characteristics about the DropDownColorUI cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>ColorEdit</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Cell Button</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton"/></description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input or DropDown</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl"/></description>
                </item>
                <item>
                    <term>DropDown Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.ColorUIControl"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>ColorEdit (Default: TextBox)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value
            to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the
            value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. Recommended types for a DropDownColorUI are either System.Drawing.Color, System.String or none. (Note: System.Drawing.Color can not be set from property grid at the moment). (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if drop-down button can be clicked. If set to False, the button will be drawn grayed out. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> how to disable activating the drop-down cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the drop-down button can still be clicked. You should also disable <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> if you do not want the user to click the drop-down button. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. This does not affect the position of the drop-down button. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. The image is only shown in the text field, not in the drop-down list. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. The user can still drop-down the color panel but changes will not be saved back into the text field. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the drop-down button. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for combo boxes). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the borders of the client rectangle of the cell. The client rectangle is the cell rectangle without buttons and borders. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cell's style object. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text and the drop-down button in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridDropDownColorUICellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase, 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.InitializeDropDownContainer">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>
            Occurs whent the drop down container is about to be shown.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <override/>
            <summary>
            Occurs after the popup container was dropped down and made visible.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>
            Allows custom formatting of a cell by changing its style object.
            </summary>
            <param name="e">Event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.OnDeactivating">
            <summary>
            Closes the DropDown if the CurrentCell is deactivated along with BrowseOnly property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.ChildClosing(Syncfusion.Windows.Forms.IPopupChild,Syncfusion.Windows.Forms.PopupCloseType)">
            <override/>
            <summary>
            Called to indicate that the popup child was closed in the specified mode.
            </summary>
            <param name="childUI">Popup child.</param>
            <param name="popupCloseType">Specifies the way in which the popup child was closed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownColorUICellRenderer.TextBoxChanged(System.Object,System.EventArgs)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel">
            <summary>
            Defines the data / model part of a drop-down grid cell that lets users drop-down a grid
            from a cell similar to a combo box.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the cell model.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the cell model.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer">
            <summary>
            Defines the renderer part of a drop-down grid cell that lets users drop-down a grid
            from a cell just like a combo box.
            </summary>
            <remarks>
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The following table lists some characteristics about the DropDownGrid cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>DropDownGrid</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Cell Button</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton"/></description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input or DropDown</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl"/></description>
                </item>
                <item>
                    <term>DropDown Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>DropDownGrid (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the drop-down button can be clicked. If set to False, the button will be drawn grayed out. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> how to disable activating the drop-down cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the drop-down button can still be clicked. You should also disable <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> if you do not want the user to click the drop-down button. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. This does not affect the position of the drop-down button. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable the hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. The image is only shown in the text field, not in the drop-down list. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. The user can still drop-down the grid panel but changes will not be saved back into the text field. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the drop-down button. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for combo boxes). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell this specifies the empty area between the
            text rectangle and the borders of the client rectangle of the cell. The client rectangle is the cell rectangle without buttons and borders. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cells style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text and the drop-down button in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridDropDownGridCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase, 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.InitializeDropDownContainer">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>Occurs when the drop down container is about to be shown.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.CreateInnerControl(Syncfusion.Windows.Forms.Grid.GridControlBase@)">
            <summary>
            This method is called to create the grid control that is dropped-down.
            </summary>
            <param name="grid">The grid control</param>
            <returns>The control that is shown inside the drop-down container.</returns>
            <remarks>
            You should override this method in your derived class and create your own grid class
            and initialize it with data that fits your needs.<para/>
            You don't have to call the base class version.<para/>
            The default version of this method simply creates a grid that displays the same data
            as the parent grid and embeds it into a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl"/>. <para/>
            This is of course just for demonstration purposes and probably not of much use
            in your specific applications.
            <para/>
            </remarks>
            <example>The following code creates a grid that displays the same data
            as the parent grid and embeds it into a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl"/>.
            <code lang="C#">
                    protected virtual Control CreateInnerControl(out GridControlBase grid)
                    {
                        grid = Grid.CreateNewControl(this.dropdownContainer, 0, 0) as GridControlBase;
                        grid.Dock = DockStyle.Fill;
            <para/>
                        grid.DropDownContainerParent = this.dropdownContainer;
            <para/> 
                        GridRecordNavigationControl recordNavigationControl1 = null;
                        recordNavigationControl1 = new GridRecordNavigationControl (grid);
                        recordNavigationControl1.Dock = DockStyle.Fill;
                        recordNavigationControl1.TabIndex = 0;
                        return recordNavigationControl1;
                    }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.TextBoxGotFocus(System.Object,System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.OnGridGotFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.OnCloseDropDown(Syncfusion.Windows.Forms.PopupCloseType)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.OnDeactivating">
            <summary>
            Closes the DropDown if the CurrentCell is deactivated along with BrowseOnly property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <override/>
            <summary>Occurs after the popup child was dropped down and made visible.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridCellRenderer.ChildClosing(Syncfusion.Windows.Forms.IPopupChild,Syncfusion.Windows.Forms.PopupCloseType)">
            <override/>
            <summary>
            Called to indicate that the popup child was closed in the specified mode.
            </summary>
            <param name="childUI">Popup child.</param>
            <param name="popupCloseType">The way in which the popup child was closed.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel">
            <summary>
            Defines the model / data part of a drop-down ListControl-like grid.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel,System.Boolean)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/> for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The grid control for which the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/> specific for the specified grid.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer">
            <summary>
            Defines the renderer part of a drop-down ListControl-like grid that lets users drop-down a grid
            that can be bound to a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance and supports auto-complete. Display and value members can be specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/>
            and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/>.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/> supports an autocomplete feature that
            will fill the text with possible matches from the drop-down list while the user is entering text.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The following table lists some characteristics about the DropDownGridListControl cell type.
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>GridListControl</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Cell Button</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton"/></description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input or DropDown</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl"/></description>
                </item>
                <item>
                    <term>DropDown Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>GridListControl (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the drop-down button can be clicked. If set to False, the button will be drawn grayed out. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> how to disable activating the drop-down cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> (<see cref="T:System.Object"/>)</term>
                    <description>Specifies a data source that holds items to be displayed in a drop-down list. A datasource can be specified instead of manually filling the choicelist with string entries. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DisplayMember"/> (<see cref="T:System.String"/>)</term>
                    <description>Names the property in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/> that holds the text to be displayed in a cell that depends on a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DropDownStyle"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStyle"/>)</term>
                    <description>Specifies if user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>. (Default: GridDropDownStyle.Editable)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. When disabled, the drop-down button can still be clicked. You should also disable <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> if you do not want the user to click the drop-down button. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ExclusiveChoiceList"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if user input is restricted to items from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ChoiceList"/> or <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.DataSource"/>. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. This does not affect the position of the drop-down button. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable the hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. The image is only shown in the text field, not in the drop-down list.  You have to add custom programming logic in order to set the ImageIndex based on a selection in the drop-down list. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. The user can still drop-down the grid panel but changes will not be saved back into the text field. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the drop-down button. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for combo boxes). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the borders of the client rectangle of the cell. The client rectangle is the cell rectangle without buttons and borders. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cells style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValueMember"/> (<see cref="T:System.String"/>)</term>
                    <description>Names the property in the datasource that holds the key to be saved in a cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies the vertical alignment of text and the drop-down button in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.listBoxPart">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.findString">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridDropDownGridListControlCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.CreateListControlPart">
            <summary>
            Creates the grid that is displayed in the drop-down window.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/> to be placed in the dropdown container.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnEnsureListControlPart">
            <summary>
            Called after <see cref="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnInitialize(System.Int32,System.Int32)"/> created <see cref="P:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlPart"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ResetListControlPart">
            <summary>
            Called from <see cref="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.Dispose(System.Boolean)"/> to destroy <see cref="P:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlPart"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.GetTableFromList(System.Object,System.Type)">
            <summary>
            To return a datatable from an IEnumerable source incase the datasource bound to the dropdown is IEnumerable with no DisplayMember
            </summary>
            <param name="datasource">datasource bound to the DropDown</param>
            <param name="type">Type of datasource items</param>
            <returns>datatable</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlGridPrepareViewStyleInfo(System.Object,Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <summary>
            Event handler for PrepareViewStyleInfo event of dropdown table.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlGridCellDrawn(System.Object,Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs)">
            <summary>
            Event handler for CellDrawn event of dropdown table.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnRejectChanges">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>Allows custom formatting of a cell by changing its style object.</summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnSetControlText(System.String)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.GetlistFromTable(Syncfusion.Windows.Forms.Grid.GridListControl,System.String,System.Object)">
            <summary>Creates a list from DataTable and recreate a table using the list</summary>
            <param name="listBoxPart">listcontrolpart</param>
            <param name="searchText">The specified text to search from the list.</param>
            <param name="dataSource">dataSource of listcontrolpart</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.RefreshChoices(Syncfusion.Windows.Forms.Grid.GridListControl,System.String)">
            <summary>Refresh the Choicelist/</summary>
            <param name="searchText">The specified text to search from the choicelist.</param>
            <returns>ListBox part with refreshed values</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.SetSuggestedChoices(Syncfusion.Windows.Forms.Grid.GridListControl,System.String)">
            <summary>
            Generates the possible choices of the choice list based on the searchText.
            </summary>
            <param name="listBoxPart">Choice list.</param>
            <param name="searchText">Text to be searched.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.TextBoxChanged(System.Object,System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ValidateString(System.String)">
            <override/>
            <summary>
            Checks whether the specified text is valid.
            </summary>
            <param name="text">Text to be validated.</param>
            <returns>True if the text is valid; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ProcessMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            Lets you customize and redirect the mouse wheel behavior to a cell renderer.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>True if the parent grid should not be scrolled; False if the parent grid should scroll.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>
            Occurs when the drop down container is about to be shown.
            </summary>
            <param name="sender">Evnet source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <override/>
            <summary>Occurs after the popup child was dropped down and made visible.</summary>
            <param name="sender">The event source.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.InitializeDropDownContainer">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event for the list box, closes the drop-down.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.NotifyCurrentCellChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles the vertical Scroll event for the dropped-down grid and sets focus to the drop-down.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlGotFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event for the list box, resets mouse tracking.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.SynchronizeDisplayText(System.Int32)">
            <summary>
            Retrieves the text from the list box index and sets the TextBoxText. Called
            when the user presses arrow keys to move selection in dropped list box.
            </summary>
            <param name="index">List box index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.FindItem(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Searches for a given prefix at a starting index in the drop-down list.
            </summary>
            <param name="prefix">The prefix to search for.</param>
            <param name="selectItem">True if found entry should be selected in list box.</param>
            <param name="start">The index where to start the search.</param>
            <param name="ignoreCase">True if case can be ignored; False if case sensitive.</param>
            <returns>The index of the entry that matches the prefix.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.FindItemExact(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds text in the list box.
            </summary>
            <param name="text">The text (or prefix) to find.</param>
            <param name="selectItem">True if you want to select the text in the list box.</param>
            <param name="start">The first index to start searching.</param>
            <param name="ignoreCase">True if case can be ignored; False if case sensitive.</param>
            <returns>The index of the entry that starts with the text; -1 if
            no entry could be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnEditPartMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event for the text box. Selects the next item in the list if the user double-clicks.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnDeactivating">
            <summary>
            Closes the DropDown if the CurrentCell is deactivated along with BrowseOnly property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnControlDoubleClick(System.Windows.Forms.Control)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.OnDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellModel"/> that this cell renderer belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownGridListControlCellRenderer.ListControlPart">
            <summary>
            Gets the grid that is displayed in the drop-down window.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel">
            <summary>
            Defines the data / model part of a month calendar cell that lets users drop-down a calendar
            and select a date or range of dates.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/>
            instances if a there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel.ApplyText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String)">
            <summary>
            Parses the text and converts it into a cell value to be stored in the style object (ignoring any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> settings).
            CultureInfo.CurrentText is used for parsing the string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="text">The input text to be parsed.</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)">
            <summary>
            Parses the display text and converts it into a cell value to be stored in the style object.
            </summary>
            <param name="style">Cell style information.</param>
            <param name="text">Input text.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel.GetValueFromStyle(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Gets formatted DateTime Value from GridStyleInfo object.
            </summary>
            <param name="style">GridStyleInfo object.</param>
            <returns>Formatted DateTime value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <override/>
            <summary>
            This is called from GridStyleInfo.GetFormattedText. 
            GridStyleInfo.CultureInfo is used for conversion to string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>The formatted text for the given value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer">
            <summary>
            Defines the renderer part of a month calendar cell that lets users drop-down a calendar
            and select a date or range of dates.
            </summary>
            <remarks>
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
             <para/>
            <para/>
            The following table lists some characteristics about the DropDownMonthCalendar cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>MonthCalendar</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Cell Button</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellComboBoxButton"/></description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input or DropDown</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownEditPartControl"/></description>
                </item>
                <item>
                    <term>DropDown Control</term>
                    <description><see cref="T:System.Windows.Forms.MonthCalendar"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cells behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>MonthCalendar (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value
            to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the
            value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. Recommended types for a DropDownMonthCalendar are System.DateTime, System.String, or none. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the drop-down button can be clicked. If set to False, the button will be drawn grayed out. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> how to disable activating the drop-down cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the drop-down button can still be clicked. You should also disable <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> if you do not want the user to click the drop-down button. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Lets you specify a DateTime format when  <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> has been initialized to "System.DateTime". (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies the horizontal alignment of text in the cell. This does not affect the position of the drop-down button. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. The image is only shown in the text field, not in the drop-down list. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. The user can still drop-down the MonthCalendar panel but changes will not be saved back into the text field. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the drop-down button. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for combo boxes). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the borders of the client rectangle of the cell. The client rectangle is the cell rectangle without buttons and borders. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cells should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell values that are being checked before any user changes are committed to the grid cell's style object. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies the vertical alignment of text and the drop-down button in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridDropDownMonthCalendarCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase, 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer.InitializeDropDownContainer">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer.ChildClosing(Syncfusion.Windows.Forms.IPopupChild,Syncfusion.Windows.Forms.PopupCloseType)">
            <override/>
            <summary>Called to indicate that the popup child was closed in the specified mode.</summary>
            <param name="childUI">Popup child.</param>
            <param name="popupCloseType">The way in which the popup was closed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer.OnCloseDropDown(Syncfusion.Windows.Forms.PopupCloseType)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer.OnDeactivating">
            <summary>
            Closes the DropDown if the CurrentCell is deactivated along with BrowseOnly property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>Occurs when the drop down container is about to be shown.</summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDropDownMonthCalendarCellRenderer.CalendarControlSize">
            <internalonly/>
            <summary>Gets CalendarControlSize. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel">
            <summary>
            Defines the model / data part of a drop-down ListControl-like grid.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <override/>
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer"/> for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The grid control for which the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer"/> specific for the specified grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel.FillWithChoices(System.Windows.Forms.ListBox,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Boolean@)">
            <override/>
            <summary>
            Creates choice list for filter drop down.
            </summary>
            <param name="listBox">List box drop down.</param>
            <param name="style">Cell style information.</param>
            <param name="exclusive">True if list box is loaded with exclusice choice list or if non-standard values are allowed.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer">
            <summary>
            Defines the renderer part of a drop-down ListControl-like grid that lets users drop-down a grid
            that display choices for a cell determined through the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/>
            method of a <see cref="T:System.ComponentModel.TypeConverter"/>.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer"/> supports an autocomplete feature that
            will fill the text with possible matches from the drop-down list while the user is entering text.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridDropDownStandardValuesCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.GetDefaultMaxSize">
            <summary>
            Returns the maximum size in pixels for the dropdown grid. If more items
            need to be displayed that fit into that screen area, scrollbars will be shown.
            </summary>
            <returns>The maximum size in pixels for the dropdown grid</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.OnEnsureListControlPart">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.CreateListControlPart">
            <summary>
            Creates the grid that is displayed in the drop-down window.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/> to be placed in the drop-down container.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.ValidateString(System.String)">
            <override/>
            <summary>Checks if the specified text is valid.</summary>
            <param name="text">Input text.</param>
            <returns>True if the text is valid; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>Occurs when the drop down container is about to be shown.</summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>Allows custom formatting of a cell by changing its style object.</summary>
            <pparam name="e">Event data.</pparam>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer.GetDropDownPaintValueWidth">
            <summary>
            Returns the width of a possible "Glyph" to be drawn before the cell value. This method
            is overriden by the UITypeEditorCellRenderer
            </summary>
            <returns>The width in pixel for the glyph.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel">
            <summary>
            Implements the data / model part for a generic control cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrencyTextBoxCellRenderer"/>
            instances if a there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer">
            <summary>
            Implements the renderer part of a generic control cell.
            </summary>
            <remarks>
            Use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control"/> property to associate any windows
            forms control with this cell type. <para/>
            Be careful when sharing this cell type among several cells. In most
            cases, it will cause problems and you should assign a different control
            to each cell's <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control"/>
            <para/>
            GridGenericControlCellRenderer is derived from GridStaticCellRenderer. It adds support
            for embedding any custom .NET control inside a cell. But if you want to draw the content
            of the cell yourself, deriving from GridStaticCellRenderers and overriding its OnDraw
            method should be enough.
            <para/>
            See the SliderCells, WebBrowserCells, and PictureBoxCells for samples
            of this cell type.
            <para/>
            The following table lists some characteristics about the Control cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>Control</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridGenericControlCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Depends on embedded control</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:System.Windows.Forms.Control"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>Control (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Control"/> (<see cref="T:System.Windows.Forms.Control"/>)</term>
                    <description>A custom control you can associate with a cell. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cells
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
            </list>
            <para/>   
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridGenericControlCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.FixControlParent(System.Windows.Forms.Control)">
            <summary>
            Parents the control to the grid instance and ensures correct settings
            for <see cref="P:System.Windows.Forms.Control.CausesValidation"/>, <see cref="P:System.Windows.Forms.Control.Anchor"/>,
            and <see cref="P:System.Windows.Forms.Control.Dock"/>.
            </summary>
            <param name="control">The control that is shown in this cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.OnActivating(System.Int32,System.Int32)">
            <summary>
            This is called from GridCurrentCell.Activate after the activating event has been raised
            and allows interception of cell activation.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>
            True is cell can be activated; False otherwise.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.Hide">
            <override/>
            <summary>
            Hides the control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.OnHasFocusControlChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGenericControlCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox">
            <summary>
            Adds grid cell-specific keyboard logic to a <see cref="T:Syncfusion.Windows.Forms.Tools.MaskedEditBox"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox.#ctor(Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>.
            </summary>
            <param name="parent">Parent cell renderer object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is an input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the key's values.</param>
            <returns>
            true if the specified key is an input key; otherwise, false.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>
            Intercepts the Key messages.
            </summary>
            <param name="m">The message data.</param>
            <returns>
            True if the key is handled; False otherwise.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox.PreProcessMessage(System.Windows.Forms.Message@)">
            <override/>
            <summary>
            Preprocesses keyboard or input messages within the message loop before they are dispatched.
            </summary>
            <param name="msg">The Message.</param>
            <returns>True if they are preprocessed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox.ParentCell">
            <summary>
            Gets the associated cell renderer for the text box.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel">
            <summary>
            Implements the data / model part for a MaskedEdit cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/>
            instances if a there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel.GetText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object)">
            <override/>
            <summary>
            Gets the text to be displayed in the cell.
            </summary>
            <param name="style">Cell style information.</param>
            <param name="value">Cell value.</param>
            <returns>Text to be displayed in the cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <override/>
            <summary>
            Returns the formatted text with formatting.
            </summary>
            <param name="style">Cell style information.</param>
            <param name="value">Cell value.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>Formatted text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel.InitMaskedEditProperties(Syncfusion.Windows.Forms.Tools.MaskedEditBox,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Tools.MaskedEditBox"/> with information supplied by a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            </summary>
            <param name="mb">The control to be initialized.</param>
            <param name="style">The style with settings to be applied.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer">
            <summary>
            Implements the renderer part of a currency cell.
            </summary>
            <remarks>
            Use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaskEdit"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/>) property
            of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> to change masked edit properties for a cell.
            <para/>
            The following table lists some characteristics about the MaskedEdit cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>MaskEdit</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskedEditBox"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>Both</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>MaskedEdit (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if text can float into the boundaries of a neighboring cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if this cell can be flooded by a previous cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaskEdit"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMaskEditInfo"/>)</term>
                    <description>A nested object with masked edit properties for a cell.  (Default: GridMaskEditInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for an individual cell when merging cell's features have been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
            </list>
            <para/>    
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridMaskEditCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnValidate">
            <summary>
            This method is called from GridCurrentCell.Validate after GridCurrentCell.Validating event has been
            fired. The default version checks if the active text fits any criteria as specified
            in the style object: It can be parsed into a cell value and meets GridCellValidateValueInfo criteria.
            </summary>
            <returns>
            True if the modified text is valid; False otherwise.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnActivated">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnHasFocusControlChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.InitializeControlText(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnDoubleClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridMaskEditCellRenderer.CanCopy">
            <override/>
            <summary>
            Determines whether the current cell can be copied to clipboard.
            </summary>
            <returns>True if it can be copied; False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel">
            <summary>
            Defines the data / model part of a numeric up / down cell that lets users increase and decrease
            values with spin buttons.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel.AcceptAlphaKeys">
            <summary>
            Gets or sets a value indicating whether NumericUpDown cell should accept Alpha keys
            </summary>
            <example>The following code shows how to get a reference to the Model and change this property:
            <code lang="C#">
            GridNumericUpDownCellModel cm = (GridNumericUpDownCellModel) this.gridControl1.CellModels["NumericUpDown"];
            cm.AcceptAlphaKeys = false;
            </code>
            <para/>
            <code lang="VB">
            Dim cm As GridNumericUpDownCellModel = CType(Me.gridControl1.CellModels("NumericUpDown"), GridNumericUpDownCellModel)
            cm.AcceptAlphaKeys = False
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer">
            <summary>
            Defines the renderer part of a numeric up / down cell that lets users increase and decrease
            values with spin buttons.
            </summary>
            <remarks>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/> cell's behavior can be customized with the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance and any properties that affect regular text boxes as specified for
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/> and <see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/>.
            <para/>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> lets you specify the step, minimum and maximum value,
            and if the value should start over when you reach the maximum value.
            <para/>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/> displays two <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton"/>
            cell button elements at the right side of the cell. You can specify when these buttons are shown
            with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance.
            <para/>
            You can disable these buttons when you reset the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> property
            of <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> to False.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The up-down buttons are XP Themes enabled. They will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is true.
            <para/>
            The following table lists some characteristics about the NumericUpDown cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>NumericUpDown</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Cell Button</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellUpDownButton"/></description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text Input or click on Up-/Down Buttons</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cells behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>NumericUpDown (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if up / down buttons can be clicked. If set to False, the buttons will be drawn grayed out. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> to disable activating the cell as current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cells value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if cell should be skipped when moving the current cell. When disabled, the up / down buttons will be drawn grayed out. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings, or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies the horizontal alignment of text in the cell. This does not affect the position of the up / down buttons. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable the hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellInfo"/>)</term>
                    <description><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.NumericUpDown"/> lets you specify the step, minimum and maximum value,
            and if the value should start over when you reach the maximum value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the drop-down button. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextAlign"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridTextAlign"/>)</term>
                    <description>Align text left of button elements (which is typical for NumericUpDown). Or align text right of button elements. (Default: GridTextAlign.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the borders of the client rectangle of the cell. The client rectangle is the cell rectangle without buttons and borders. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set.  (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell values that are being checked before any user changes are committed to the grid cells style object. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text and the up / down buttons in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridNumericUpDownCellRenderer object for the given GridControlBase
            and GridNumericUpDownCellModel.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellModel"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer.OnButtonClicked(System.Int32,System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridNumericUpDownCellRenderer.ValidateString(System.String)">
            <override/>
            <summary>
            Checks whether the specified text is valid.
            </summary>
            <param name="text">The text to be validated.</param>
            <returns>True if the given text is valid; False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridProgressBar">
            <summary>
            Adds grid cell-specific keyboard logic to a <see cref="T:Syncfusion.Windows.Forms.Tools.ProgressBarAdv"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBar.#ctor(Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBar"/> and attaches it to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/>.
            </summary>
            <param name="parent">Parent cell renderer.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridProgressBar.ParentCell">
            <summary>
            Gets the associated cell renderer for the text box.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel">
            <summary>
            Implements the data / model part for a progress bar cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel"/> can serve as a model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel.InitProgressBarProperties(Syncfusion.Windows.Forms.Tools.ProgressBarAdv,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Tools.ProgressBarAdv"/> with information supplied by a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            </summary>
            <param name="pb">The control to be initialized.</param>
            <param name="style">The style with settings to be applied.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer">
            <summary>
            Implements the renderer part of a progress bar cell.
            </summary>
            <remarks>
            Use the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ProgressBar"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>) property
            of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> to change progress bar properties for a cell.
            <para/>
            The ProgressBar control has background, border, and foreground styles.
            The background styles are <see cref="T:Syncfusion.Windows.Forms.Tools.ProgressBarBackgroundStyles"/>.
            The border styles are <see cref="T:System.Windows.Forms.BorderStyle"/>.
            The foreground styles are <see cref="T:Syncfusion.Windows.Forms.Tools.ProgressBarStyles"/>.
            <para/>
            The following table lists some characteristics about the ProgressBar cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>ProgressBar</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Click Only</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Tools.ProgressBarAdv"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cells behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>ProgressBar (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ProgressBar"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridProgressBarInfo"/>)</term>
                    <description>A nested object with ProgressBar properties for a cell.  (Default: GridProgressBarInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set.  (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridProgressBarCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that display this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridProgressBarCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel">
            <summary>
            Defines the model / data part of a dropdown with an embedded <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer">
            <summary>
            Defines the renderer part of a dropdown with an embedded <see cref="T:System.Windows.Forms.PropertyGrid"/> that lets users modify
            the properties of a complex cell value with nested properties.
            </summary>
            <remarks>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridPropertyGridCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>Occurs when the drop down is about to be shown.</summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <override/>
            <summary>Occurs after the popup child was dropped down and made visible.</summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.DropDownContainerCloseDropDown(System.Object,Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <override/>
            <summary>Called to indicate that the popup child was closed.</summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnSaveChanges">
            <summary>
            This method is called from GridCurrentCell.ConfirmChanges when the current cell
            was marked as modified. Any drop-downs have been closed at this time. It saves changes for the current cell.
            </summary>
            <returns>
            True if changes were saved successfully; False if no changes were saved.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnStartEditing">
            <summary>
            Occurs before the current cell switches into editing mode.
            </summary>
            <returns>
            True if editing the cell is allowed; false otherwise.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnEditingComplete">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnEndEdit">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnDeactivating">
            <summary>
            Called from GridCurrentCell.Deactivate after GridCurrentCell.Deactivating event
            and before the current cell is deactivated.
            </summary>
            <returns>
            True if renderer can be deactivated; False if deactivation should be aborted.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnDeactived(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.ValidateString(System.String)">
            <override/>
            <summary>Checks if the given text is valid.</summary>
            <param name="text">Input text.</param>
            <returns>returns True.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnValidate">
            <summary>
            This method is called from GridCurrentCell.Validate after GridCurrentCell.Validating event has been
            fired. The default version checks if the active text fits any criteria as specified
            in the style object: It can be parsed into a cell value and meets GridCellValidateValueInfo criteria.
            </summary>
            <returns>
            True if the modified text is valid;
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.OnMouseDown(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPropertyGridCellRenderer.IsRelatedControl(System.Windows.Forms.Control,System.Boolean)">
            <override/>
            <summary>
            Indicates whether a specified control is part of the popup hierarchy.
            </summary>
            <param name="control">A control instance.</param>
            <param name="askPopupParent">True if the query should be passed to the popup parent; False if you should not query the popup parent.</param>
            <returns>returns True.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel">
            <summary>
            Implements the data / model part for a radio button cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer">
            <summary>
            Implements the renderer part of a radio button cell.
            </summary>
            <remarks>
            You set up radio buttons using an array of  
             <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo"/> objects. Each info object in this
             array corresponds to a single radio button. The properties for each button
             that you can set include GridRadioButtonInfo.Description, 
             GridRadioButtonInfo.Alignment and GridRadioButtonInfo.Enabled. To get a 
             cell to use a particular GridRadioButtonInfo[], you set the 
             GridStyleInfo.ChoiceList to string collection that holds the descriptions for 
             each button. If you want to disable a particular button, end the description
             with /disabled. You are limited to a maximum of ten buttons. The alignment setting
             is determined from the GridStyleInfo.TextAlign property.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridRadioButtonCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/> 
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.OnQueryShowButtons(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Overriden to allow buttons to be printed.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <returns>returns boolean value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draw the contents of specified cell.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="cellRectangle">Cell rectangle.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <param name="style">Cell style information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.OnSaveChanges">
            <summary>
            This method is called from GridCurrentCell.ConfirmChanges when the current cell
            was marked as modified. Any drop-downs have been closed at this time. It saves changes for the current cell.
            </summary>
            <returns>
            True if changes were saved successfully; False if no changes were saved.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRadioButton">
            <summary>
            Defines the cell radio button of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonCellRenderer"/>.
            </summary>
            <remarks>
            This button is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is True
            and the GridStyleInfo.ThemesEnabled is True for the cell.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridRadioButton.RADIOBUTTONWIDTH">
            <summary> Width of the radio button.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButton.#ctor(Syncfusion.Windows.Forms.Grid.GridCellRendererBase,System.Int32)">
            <summary>
            Initializes a new GridRadioButton.
            </summary>
            <param name="renderer">The GridRadioButtonCellRenderer object which owns this button.</param>
            <param name="index">The button's index in the collection of radio buttons for this cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButton.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButton.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draws a button using <see cref="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)"/> or if XP Themes
            are enabled, button will be drawn themed.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rect">The <see cref="T:System.Drawing.Rectangle"/> with the bounds.</param>
            <param name="buttonState">A <see cref="T:System.Windows.Forms.ButtonState"/> that specifies the current state.</param>
            <param name="style">The style information for the cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRadioButton.Enabled">
            <summary>
            Gets or sets a value indicating whether the button is enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo">
            <summary>
            Holds the state information regarding a radio button within a RadioButton cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo"/> with default values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo"/>.
            </summary>
            <param name="desc">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.Description"/> property value.</param>
            <param name="enabled">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.Enabled"/> property value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the object.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.Clone">
            <summary>
            Creates a copy of this object.
            </summary>
            <returns>A copy of this object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.Description">
            <summary>
            Gets or sets the text displayed with the button.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRadioButtonInfo.Enabled">
            <summary>
            Gets or sets a value indicating whether the button is enabled or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel">
            <summary>
            Implements the data / model part for a rich text cell.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>
            Creates a renderer for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/> specific for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</returns>
            <remarks>You must override this method in your implementation of GridCellModelBase.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <override/>
            <summary>
            This is called from GridStyleInfo.GetFormattedText.
            GridStyleInfo.CultureInfo is used for conversion to string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>The formatted text for the given value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel.ApplyFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.String,System.Int32)">
            <override/>
            <summary>
            Parses the display text and converts it into a cell value to be stored in the style object.
            GridStyleInfo.CultureInfo is used for parsing the string.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="text">The input text to be parsed.</param>
            <param name="textInfo">TextInfo is a hint of who is calling, default is GridCellBaseTextInfo.DisplayText</param>
            <returns>True if value was parsed correctly and saved in style object as <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/>; False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer">
            <summary>
            Implements the renderer part of a rich text cell.
            </summary>
            <remarks>
            Use "RichText" as identifier in CellType of a cells <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
             to associate this cell type with a cell.
            <para/>
            This renderer supports editing the contents of the rich text with a drop-down
            panel. When the user drops the panel, a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel"/> is shown
            and the user can format the text and then accept changes by pressing "Save" button.
            <para/>
            The following table lists some characteristics about the RichText cell type.
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>RichText</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>Yes</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with DropDown Panel</description>
                </item>
                <item>
                    <term>DropDown Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridStaticCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class.
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>RichText (Default: TextBox)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Clickable"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the user can click on any cell button elements in this renderer. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ShowButtons"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridShowButtons"/>)</term>
                    <description>Specifies when to show or display the cell buttons. Possible choices are: show the button only for the current cell, always show buttons, or never show buttons. (Default: GridShowButtons.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for the cell value that are being checked before any user changes are committed to the grid cell's style object. (Default: NULL)</description>
                </item>
            </list>
            <para/>   
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridRichTextBoxCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.InitializeDropDownContainer">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.PanelKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Event handler for the KeyDown event of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A KeyEventArgs that contains the event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.PanelSave(System.Object,System.EventArgs)">
            <summary>
            Event handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.Save"/> event of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.PanelCancel(System.Object,System.EventArgs)">
            <summary>
            Event handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel.Cancel"/> event of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridRichTextEntryPanel"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>
            Occurs when the drop-down container is about to be shown.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <override/>
            <summary>
            Occurs after the popup has been dropped-down and made visible.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.DropDownContainerCloseDropDown(System.Object,Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <override/>
            <summary>
            Will be called to indicate that the popup child was closed.
            </summary>
            <param name="sender">The child that was closed.</param>
            <param name="e">The event data with a <see cref="P:Syncfusion.Windows.Forms.PopupClosedEventArgs.PopupCloseType"/> value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.OnSaveChanges">
            <summary>
            This method is called from GridCurrentCell.ConfirmChanges when the current cell
            was marked as modified. Any drop-downs have been closed at this time. It saves changes for the current cell.
            </summary>
            <returns>
            True if changes were saved successfully.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRichTextBoxCellRenderer.DropDownContainer">
            <summary>
            Gets the container where you can insert child controls to be displayed as drop-down part for your cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel">
            <summary>
            Defines the model / data part of a drop-down with a ListControl-like grid or a UITypeEditor.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel"/> object
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDropDownStandardValuesCellRenderer"/> for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The grid control for which the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer"/> specific for the specified grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel.GetUITypeEditor(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines the <see cref="T:System.Drawing.Design.UITypeEditor"/> that should be displayed in
            the dropdown part. If it is null the standard values collection will
            be displayed in a dropdown grid.
            </summary>
            <param name="style">The style object</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditor"/></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer">
            <summary>
            Defines the renderer part of a drop-down with a ListControl-like grid or a UITypeEditor
            that display choices for a cell determined through the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/>
            method of a <see cref="T:System.ComponentModel.TypeConverter"/>.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer"/> supports an autocomplete feature that
            will fill the text with possible matches from the drop-down list while the user is entering text.
            <para/>
            A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellModel"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridUITypeEditorCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase,
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.OnInitialize(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.OnShowDropDown">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.OnDeactived(System.Int32,System.Int32)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.DropDownContainerShowingDropDown(System.Object,System.ComponentModel.CancelEventArgs)">
            <override/>
            <summary>Occurs when the drop down is about to be shown.</summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.DropDownContainerCloseDropDown(System.Object,Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <override/>
            <summary>
            Indicates that the popup child was closed.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.DropDownContainerShowedDropDown(System.Object,System.EventArgs)">
            <override/>
            <summary>Occurs after the popup child was dropped down and made visible.</summary>
            <param name="sender">Event source.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.NotifyCurrentCellChanged">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>Allows custom formatting of a cell by changing its style object.</summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.GetPaintValueSupported(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Design.UITypeEditor)">
            <summary>
            Determines if the UITypeEditor supports painting glyphs before the text.
            </summary>
            <param name="style">The style of the parent cell.</param>
            <param name="editor">The UITypeEditor</param>
            <returns>true if glyphs should be painted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.PaintValue(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Design.UITypeEditor,System.Object)">
            <summary>
            Paints a glyph before the text by calling the UITypeEditor.PaintValue method
            </summary>   
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.GetPaintValueWidth">
            <summary>
            Returns the width of the glyph
            </summary>
            <returns>returns 20</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.GetDropDownPaintValueWidth">
            <summary>
            Returns the width of a possible "Glyph" to be drawn before the cell value. This method
            is overriden by the UITypeEditorCellRenderer
            </summary>
            <returns>The width in pixel for the glyph.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draw the content of specified cell.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="cellRectangle">Cell rectangle.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <param name="style">Cell style information.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.ListControlGridPrepareViewStyleInfo(System.Object,Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.ListControlGridCellDrawn(System.Object,Syncfusion.Windows.Forms.Grid.GridDrawCellEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.Model">
            <override/>
            <summary>
            Gets the data model for this renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridUITypeEditorCellRenderer.CurrentInstance">
            <internalonly/>
            <summary>Gets or sets CurrentInstance. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSerializeCellsBehavior">
            <summary>
            Specifies how to serialize grid data at design-time. You can choose to serialize
            cell contents as code into the Forms InitializeComponent method or you can choose
            to serialize cell contents into a ResX file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSerializeCellsBehavior.SerializeIntoCode">
            <summary>
            Serialize cell contents as code into the Forms InitializeComponent method 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSerializeCellsBehavior.SerializeIntoResX">
            <summary>
            Serialize cell contents into a ResX file
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSerializeCellsBehavior.SerializeAsRangeStylesIntoCode">
            <summary>
            Serialize RangeStyles collection as code into the Forms InitializeComponent method 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn">
            <summary>
            GridBoundColumn provides information for a column to be used in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>. GridBoundColumn
            can be customized with the visual studio designer where you can change header text, mapping name, and formatting
            of a column.
            </summary>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumn.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumn.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumn.Clone">
            <summary>
            Returns a copy of this object.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumn.#ctor(System.ComponentModel.PropertyDescriptor)">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> with a <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor"/> this column
            should be associated with.
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> with a <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor"/> this column
            should be associated with.
            </summary>
            <param name="prop">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor"/> that defines the data to be displayed in the column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumn.SetOwner(Syncfusion.Windows.Forms.ICurrencyManagerSource)">
            <summary>
            Sets the <see cref="T:Syncfusion.Windows.Forms.ICurrencyManagerSource"/> this bound column is associated with.
            </summary>
            <param name="owner">The ICurrencyManagerSource object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumn.ResetHeaderText">
            <summary>
            Resets the header text.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptorChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor"/> property has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridBoundColumn.HeaderTextChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.HeaderText"/> property has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridBoundColumn.MappingNameChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.MappingName"/> property has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridBoundColumn.ReadOnlyChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.ReadOnly"/> property has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.StyleInfo">
            <summary>
            Gets or sets information how to format cells in the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor"/> that defines the data to be displayed in the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.Owner">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/> that this bound column is associated with.
            </summary>
            <remarks>
            Each <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> has a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/>. The
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/> provides loading and saving data from an external data source
            and supports BeginEdit, EndEdit, and AddNew functionality.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.HeaderText">
            <summary>
            Gets or sets the header text to be displayed in the column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.MappingName">
            <summary>
            Gets or sets the mapping for this column. You should specify which column of a <see cref="T:System.Data.DataTable"/>
            you want to display in the grid at this column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.Tag">
            <summary>
            Gets or sets a tag that is associated with this object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.ReadOnly">
            <summary>
            Gets or sets a value indicating whether Read-only state of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.BackColor">
            <summary>
            Gets or sets the backcolor of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.Width">
            <summary>
            Gets or sets the width of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.Hidden">
            <summary>
            Gets or sets the hidden state of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.Position">
            <summary>
            Gets or sets the position of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnStyleInfoIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>
            An array of style objects that are base styles for the current style object.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnStyleInfoIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> control.
            </summary>
            <remarks>
            On the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> you access the GridBoundColumnsCollection through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.GridBoundColumns"/> property.
            <para/>
            The GridBoundColumnsCollection uses standard <see cref="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Add(Syncfusion.Windows.Forms.Grid.GridBoundColumn)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Remove(Syncfusion.Windows.Forms.Grid.GridBoundColumn)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific property value exists in the collection.
            <para/>
            Additionally, use the IndexOf method to determine the index of any <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> object
            within the collection.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Clone">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> and creates copies of all members in this collection.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.CreateBoundColumn(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates a new item for this collection. Override this method if you want
            to support derived column types. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BoundColumnsCollectionType"/> for a sample.
            </summary>
            <param name="pd">The property descriptor with information about the column.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> or derived class object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Grid.GridBoundColumn)">
            <summary>
            Inserts a column at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.CopyTo(Syncfusion.Windows.Forms.Grid.GridBoundColumn[],System.Int32)">
            <summary>
              <para>Copies the values to a one-dimensional <see cref="T:System.Array"/> instance at the
            specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelCollection"/>.</param>
            <param name="index">The index in the array where copying begins.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.#ctor(Syncfusion.Windows.Forms.ICurrencyManagerSource)">
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/>.
            </summary>
            <param name="table">A reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/>
            this collection belongs to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Add(Syncfusion.Windows.Forms.Grid.GridBoundColumn)">
            <summary>
            Adds a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> to the collection.
            </summary>
            <param name="column">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> to add.</param>
            <returns>The index of the new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.AddRange(Syncfusion.Windows.Forms.Grid.GridBoundColumn[])">
            <summary>
            Adds an array of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects to the collection.
            </summary>
            <param name="columns">An array of DataGridColumnStyle objects to add to the collection. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Clear">
            <summary>
            Clears the collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Contains(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets a value indicating whether the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> contains a specific <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> associated with the specified PropertyDescriptor.
            </summary>
            <param name="propDesc">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> associated with the desired <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>.</param>
            <returns>True if the collection contains the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Contains(Syncfusion.Windows.Forms.Grid.GridBoundColumn)">
            <summary>
            Gets a value indicating whether the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> contains a specific <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>.
            </summary>
            <param name="column">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> to find.</param>
            <returns>True if the collection contains the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Contains(System.String)">
            <summary>
            Gets a value indicating whether the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> contains a specific <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> with a specific name.
            </summary>
            <param name="name">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.MappingName"/> of the desired <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>.</param>
            <returns>True if the collection contains the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>; otherwise, False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.IndexOf(Syncfusion.Windows.Forms.Grid.GridBoundColumn)">
            <summary>
            Gets the index of a specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>.
            </summary>
            <param name="element">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> to find.</param>
            <returns>The zero-based index of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> within the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> or -1 if no corresponding <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> exists.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.CollectionChanged"/> event.
            </summary>
            <param name="ccevent">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Remove(Syncfusion.Windows.Forms.Grid.GridBoundColumn)">
            <summary>
            Removes the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/>.
            </summary>
            <param name="column">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> with the specified index from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.ResetPropertyDescriptors">
            <summary>
            Resets all <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor"/> for all <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects
            in the collection.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.CollectionChanged">
            <summary>
            Occurs when members in this collection have been added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.List">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Item(System.Int32)">
            <overload>
            Gets a specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> in the GridBoundColumnsCollection. 
            </overload>
            <summary>
            Gets a specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Item(System.String)">
            <summary>
            Gets a specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> in the GridBoundColumnsCollection. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Item(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets a specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> in the GridBoundColumnsCollection. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection.Owner">
            <summary>
            Gets the owner that also provides a reference to a CurrencyManager.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollectionEditor">
            <summary>
            Provides a collection editor that is tailored to adding and removing <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects
            from the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.GridBoundColumns"/> collection in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>.
            </summary>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollectionEditor"/> object.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm"/> to provide as the user interface for editing the collection.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <override/>
            <summary>
            Edits the value of the specified object using the specified service provider and
            context.
            </summary>
            <param name="context">An <see
            cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to
            gain additional context information. </param>
            <param name="provider">A service provider object through which editing services
            can be obtained. </param>
            <param name="value">The object to edit the value of. </param>       
            <returns>
            The new value of the object. If the value of the object has not changed, this
            should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSortBehavior">
            <summary>
            Defines if databound grid should sort a column if user clicks on it.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSortBehavior.None">
            <summary>
            No sorting when user clicks once.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSortBehavior.SingleClick">
            <summary>
            Sort column when user clicks once.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSortBehavior.DoubleClick">
            <summary>
            Sort column when user double-clicks.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs">
            <summary>
            Provides event data for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEnter"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEditing"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowLeave"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowSaved"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs"/> object.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowEventArgs.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs"/> object.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="isAddNew">Indicates if AddNew was called for <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEditing"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowSaved"/> events.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowEventArgs.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowEventArgs.IsAddNew">
            <summary>
            Gets or sets a value indicating whether AddNew was called for <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEditing"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowSaved"/> events.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowEventHandler">
            <summary>
            A method that represents a handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEnter"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowLeave"/>, or <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowSaved"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs">
            <summary>
            Provides event data for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleting"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs"/> object.
            </summary>
            <param name="from">The first index.</param>
            <param name="last">The last index.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs.From">
            <summary>
            Gets the first index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs.To">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRowRangeEventHandler">
            <summary>
            A method that represents a handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleting"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridValidateFailedEventArgs">
            <summary>
            Provides event data for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ValidateFailed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridValidateFailedEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridValidateFailedEventArgs"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridValidateFailedEventHandler">
            <summary>
            A method that represents a handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ValidateFailed"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid">
            <summary>
            Provides support for displaying ADO.NET data and other data sources in a grid. Data will be
            loaded from the given data source and changes will be written back to the data source.
            </summary>
            <remarks>
            To display a table in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> at run-time,
            set the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataSource"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataMember"/> properties to a
            valid data source. The following data sources are valid:
            DataTable
            DataView
            DataSet
            A single dimension array
            Any component that implements the IListSource interface
            Any component that implements the IList interface.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.#ctor">
            <overload>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>.
            </overload>
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.#ctor(Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> and attaches it
            to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/>.
            </summary>
            <param name="model">Grid model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.CreateNewControl(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <override/>
            <summary>
            Creates a new databound grid.
            </summary>
            <param name="parent">A parent control.</param>
            <param name="row">Row index.</param>
            <param name="column">Column index.</param>
            <returns>The new grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.WireNewControl(Syncfusion.Windows.Forms.Grid.GridDataBoundGrid)">
            <summary>
            Helper method to CreateNewControl to initialize new grid based on current grid settings.
            </summary>
            <param name="grid">Grid created with CreateNewControl.</param>
            <remarks>You should call this method from the overridden CreateNewControl method in your derived
            GridDataBoundGrid. Overriding CreateNewControl is required if you want your derived grid to be
            contained in a TabBarSplitterControl or a GridRecordNavigationControl.
            </remarks>
            <example>
            <code lang="C#">
            public override Control CreateNewControl(Control parent, int row, int column)
            {
            MyGridDataBoundGrid grid = new MyGridDataBoundGrid((GridDataBoundGridModel) this.Model);
            this.WireNewControl(grid);
            return grid;
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.BeginInit">
            <summary>
            Implements <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit"/> of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.EndInit">
            <summary>
            Implements <see cref="M:System.ComponentModel.ISupportInitialize.EndInit"/> of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowEnter(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEnter"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowLeave(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowLeave"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowSaved(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowSaved"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowEditing(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEditing"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowExpanding(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowExpanding"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowExpanded(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowExpanded"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowCollapsing(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowCollapsing"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowCollapsed(Syncfusion.Windows.Forms.Grid.GridRowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowCollapsed"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowsDeleting(Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleting"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnRowsDeleted(Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleted"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnFieldChooserShowing(Syncfusion.Windows.Forms.Grid.FieldChooserShowingEventArgs)">
            <summary>
            Raises the FieldChooserShowing Event.
            </summary>
            <param name="e"> The event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnFieldChooserShown(Syncfusion.Windows.Forms.Grid.FieldChooserShownEventArgs)">
            <summary>
            Raises the FieldChooserShown Event.
            </summary>
            <param name="e"> The event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnFieldChooserClosing(Syncfusion.Windows.Forms.Grid.FieldChooserClosingEventArgs)">
            <summary>
            Raises the FieldChooserClosing Event.
            </summary>
            <param name="e"> The event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnFieldChooserClosed(Syncfusion.Windows.Forms.Grid.FieldChooserClosedEventArgs)">
            <summary>
            Raises the FieldChooserClosed Event.
            </summary>
            <param name="e"> The event data. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.CreateBinder">
            <summary>
            Creates an instance of the GridModelDataBinder object.
            </summary>
            <returns>The GridModelDataBinder object that provides plumbing to the datasource for this grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnBindingContextChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnSplitterPaneClosing(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.InitLayout">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnEnter(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnValidating(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnLeave(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellRejectedChanges(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.AdjustRowHeader(Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs)">
            <summary>
            Allows you to adjust the current cell position before the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event
            handler proceeds.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs"/> with event data.</param>
            <remarks>
            The default implementation will check if the current cell is about to be moved onto a row header. <para/>
            If this is the case, the column index will be changed so that the current cell moves onto the first
            column in the row.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.AdjustColHeader(Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs)">
            <summary>
            Allows you to adjust the current cell position before the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellMoving"/> event
            handler proceeds.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs"/> with event data.</param>
            <remarks>
            The default implementation will check if the current cell is about to be moved onto a column header. <para/>
            If this is the case, the row index will be changed so that the current cell moves onto the first
            row in the column.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellMoving(Syncfusion.Windows.Forms.Grid.GridCurrentCellMovingEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellDeactivating(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellAcceptedChanges(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellConfirmChangesFailed(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellDeactivated(Syncfusion.Windows.Forms.Grid.GridCurrentCellDeactivatedEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellMoveFailed(Syncfusion.Windows.Forms.Grid.GridCurrentCellMoveFailedEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnValidateFailed(Syncfusion.Windows.Forms.Grid.GridValidateFailedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ValidateFailed"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <para/>
            <example>
            <code lang="C#">
                    private void gridDataBoundGrid3_ValidateFailed(object sender, GridValidateFailedEventArgs e)
                    {
                        TraceUtil.TraceCurrentMethodInfo(e);
                        GridCurrentCell cc = this.gridDataBoundGrid3.CurrentCell;
                        cc.Grid.CancelUpdate();
                        MessageBox.Show("My Error:" + cc.ErrorMessage);
                        cc.RejectChanges();
                        cc.ResetError();
                    }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellDeactivateFailed(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellActivating(Syncfusion.Windows.Forms.Grid.GridCurrentCellActivatingEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellActivated(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellStartEditing(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellControlGotFocus(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnControlGotFocus">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.IsShowCurrentRow(System.Int32)">
            <override/>
            <summary>
            Determines if the current cell is shown at the specified row.
            </summary>
            <param name="rowIndex">Row index.</param>
            <returns>True if it is shown at the given row.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellChanging(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCellDoubleClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.SortColumn(System.Int32)">
            <summary>
            Sorts the grid by the specified column.
            </summary>
            <param name="colIndex">The column to use as a key for sorting the data in the grid.</param>
            <remarks>
            If you sort the same column again, the sort order will be reversed.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.CommitChanges">
            <summary>
            Validates the current object and saves any pending changed in the current record.
            </summary>
            <returns>True if object is valid and changes could be saved; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCellClick(Syncfusion.Windows.Forms.Grid.GridCellClickEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCellButtonClicked(Syncfusion.Windows.Forms.Grid.GridCellButtonClickedEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.IsExpandedAtRowIndex(System.Int32)">
            <summary>
            Checks if relation is expanded at the specified row in the grid.
            </summary>
            <param name="rowIndex">The absolute row index.</param>
            <returns>True if it is expanded at the specified row.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.CollapseAtRowIndex(System.Int32)">
            <summary>
            Expands the relation at the specified row in the grid. Before the records are
            collapsed, a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowCollapsing"/> event is raised. After the operation
            has completed a <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowCollapsed"/> event is raised.
            </summary>
            <param name="rowIndex">The absolute row index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ExpandAtRowIndex(System.Int32)">
            <summary>
            Expands the relation at the specified row in the grid. Before the records are
            expanded a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowExpanding"/> event is raised. After the operation
            is complete, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowExpanded"/> event is raised.
            </summary>
            <param name="rowIndex">The absolute row index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ExpandAll">
            <summary>
            Expands all nodes in the grid.
            </summary>
            <remarks>
            Expanding all nodes can be a lengthy process. The grid will give feedback
            through a <see cref="T:Syncfusion.ComponentModel.OperationFeedback"/> object about the progress
            of the operation and gives the user the option to abort.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.CollapseAll">
            <summary>
            Collapses all nodes in the grid.
            </summary>
            <remarks>
            Collapsing all nodes can be a lengthy process. The grid will give feedback
            through a <see cref="T:Syncfusion.ComponentModel.OperationFeedback"/> object about the progress
            of the operation and gives the user the option to abort.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnCurrentCellKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
            <summary>
            User pressed key down.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.HandleBoundCurrentCellKeyDown(System.Windows.Forms.KeyEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ShouldDeleteKeyClearCells">
            <summary>
            Shoulds the delete key clear cells.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DeleteRecordsAtRowIndex(System.Int32,System.Int32)">
            <summary>
            Removes the records at the specified rows from the datasource. Before the rows are deleted,
            a cancelable <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleting"/> event is raised. After the operation
            is complete, a <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleted"/> event is raised.
            </summary>
            <param name="top">The first row to delete.</param>
            <param name="bottom">The last row to delete.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnGridValidating(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnResizingColumns(Syncfusion.Windows.Forms.Grid.GridResizingColumnsEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnVisibleChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnUpdatingChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.IsMarkedHeader(System.Int32,System.Int32)">
            <summary>
            Determines if the column header at the specified row and column index should be outlined.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if header should be outlined; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ResetBaseStylesMap">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.BaseStylesMap"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ResetAlphaBlendSelectionColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.AlphaBlendSelectionColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.style">
            <summary>
            Get or Set of Skin Manager Interface
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ResetTableStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.TableStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ResetProperties">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Properties"/> object to its default state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.NameToColIndex(System.String)">
            <summary>
            Returns the column index for a column that matches a given name.
            </summary>
            <param name="name">The name of the field to be matched.</param>
            <returns>The column index in the grid; -1 if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>
            A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DefaultGridBorderStyle">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBorderStyle"/> value to be used as default for cell borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ShowColumnHeaders">
            <summary>
            Gets or sets a value indicating whether the grid should be display column headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DisplayHorizontalLines">
            <summary>
            Gets or sets a value indicating whether horizontal lines should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DisplayVerticalLines">
            <summary>
            Gets or sets a value indicating whether vertical lines should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ApplyVisualStyles">
            <summary>
            Enable or Disable the Legacy styles in the Table Model
            Value should be false to apply ColorStyles
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.BrowseOnly">
            <summary>
            To specify the browse only state of the Grid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.GridLineColor">
            <summary>
            Gets or sets the color of grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.PrintColumnHeader">
            <summary>
            Gets or sets a value indicating whether column headers should be printed when printing the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.PrintHorizontalLines">
            <summary>
            Gets or sets a value indicating whether the grid should draw horizontal lines when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.PrintRowHeader">
            <summary>
            Gets or sets a value indicating whether row headers should be printed when printing the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.PrintVerticalLines">
            <summary>
            Gets or sets a value indicating whether the grid should draw vertical lines when printing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ShowRowHeaders">
            <summary>
            Gets or sets a value indicating whether row headers should be displayed or hidden. (Might be better to use HideCols[0] = false) instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Site">
            <override/>
            <summary>Gets or sets the site of the control.</summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowExpanding">
            <summary>
            Occurs before the record at the specified row is being expanded to show details
            of a child relation.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowExpanded">
            <summary>
            Occurs after the record at the specified row has been expanded to show details
            of a child relation.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowCollapsing">
            <summary>
            Occurs before the record at the specified row is expanded to show details
            of a child relation.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowCollapsed">
            <summary>
            Occurs after the record at the specified row has been expanded to show details
            of a child relation.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleting">
            <summary>
            Occurs before the grid deletes a number of records from the datasource.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleted">
            <summary>
            Occurs after the grid deleted a number of records from the datasource.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEnter">
            <summary>
            Occurs before the current cell is activated in a new row.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowLeave">
            <summary>
            Occurs after the current cell's changes have been saved and before it is deactivated and the changes in the current row are saved to the underlying data table.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowSaved">
            <summary>
            Occurs after the changes in the current row have been saved.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowEditing">
            <summary>
            Occurs before the current row is edited.
            Check <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/>
            of the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/> object for information about the affected record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.FieldChooserShowing">
            <summary>
            Occurs when the FieldChooser dialog is being displayed. 
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.FieldChooserShown">
            <summary>
            Occurs immediately after the FieldChooser dialog is displayed. 
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.FieldChooserClosing">
            <summary>
            Occurs immediately before the FieldChooser dialog is Closed. 
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.FieldChooserClosed">
            <summary>
            Occurs immediately after the FieldChooser dialog is Closed. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/> that manages the underlying
            data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.UseListChangedEvent">
            <summary>
            Gets or sets a value indicating whether the grid should listen to IBindindList.ListChanged events or
            if it should only handle currency manager events.
            </summary>
            <remarks>
            This property is set to false by default to ensure backward compatibility with earlier versions. But
            if you drop a GridDataBoundGrid onto a form in the designer, the property will be set True as default (using
            UseListChangedEvent gives better performance that are listening to currency manager events.)
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ForceUpdateAfterListChangedEvent">
            <summary>
            Gets or sets a value indicating whether the grid should call Control.Update after each
            IBindindList.ListChanged event. This property only has any effect
            if <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.UseListChangedEvent"/> has been set to True.
            </summary>
            <remarks>
            Set this property to False if you want to manually call Update. Manually
            calling Update can have better performance because you can then batch
            several datatable modifications into one operation and then only call update
            when changes are done.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ShowTreeLines">
            <summary>
            Gets or sets a value indicating whether to enable or disable tree-like expand / collapse for row header cells in a hierarchical grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.IndentHierarchies">
            <summary>
            Gets or sets a value indicating whether to show hierarchical levels indented without treelines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataBoundGridModel">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/> that manages data to be displayed in the grid.
            </summary>
            <remarks>
            You can replace the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/> at run-time. The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>
            will release and establish links to the previous model and establish new relationships
            with the new model and then redraw itself.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.AllowResizeToFit">
            <summary>
            Gets or sets a value indicating whether the grid should automatically resize columns to fit cell contents
            on first display of the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Initializing">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModel.BeginInit"/> was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataMember">
            <summary>
              <para>Gets or sets the specific list in a <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataSource"/> for which the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>
            control
            displays a gridModel.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataSource">
            <summary>
              <para>Gets or sets the datasource that the gridModel is displaying data for.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.GridBoundColumns">
            <summary>
            Gets or sets the columns to be displayed in the GridDataBoundGrid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ValidateFailed">
            <summary>
            Occurs when validation of the current record or current cell fails.
            </summary>
            <remarks>
            You can display a message box or correct cell values in this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.SortBehavior">
            <summary>
            Gets or sets the sort behavior if databound grid should sort a column if user clicks on it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.HighlightCurrentColumnHeader">
            <summary>
            Gets or sets a value indicating whether the column header for the current cell should be highlighted.
            </summary>
            <remarks>
            Highlighting the column header will help users identify quickly in which level they are in a hierarchy.
            <para/>
            If you want to customize the look of the highlighted header you should handle the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/>
            event and check <see cref="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.IsMarkedHeader(System.Int32,System.Int32)"/> and set <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ControllerOptions">
            <copyfrom cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged"/><summary>See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelOptions.ControllerOptionsChanged"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.BaseStylesMap">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.BaseStylesMap"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ActivateCurrentCellBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.AllowDragSelectedCols">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedCols"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowDragSelectedCols"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.AlphaBlendSelectionColor">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendSelectionColor"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AlphaBlendSelectionColor"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.AllowSelection">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.AllowSelection"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ColorStyles">
            <summary>
            [Deprecated] Gets or sets the VisualStyles (skins) like Office2010, Office2007, Office2003
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.GridVisualStyles">
            <summary>
            Gets or sets the VisualStyles (skins) like Office2010, Office2007, Office2003.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.GridVisualStylesDrawing">
            <summary>
            Gets or sets the VisualStylesDrawing object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ListBoxSelectionMode">
            <summary>
              <para> Gets or sets the method in which items are selected in
            the <see cref="T:Syncfusion.Windows.Forms.Grid.GridListControl"/>
            .</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.UseRightToLeftCompatibleTextBox">
            <summary>
            Gets or sets a value indicating whether to control the kind of textbox control that is created for TextBox cells. 
            In general the original text box behaves better than the richtext box with Hebrew and arabic languages.
            By default the grid uses the RichTextBox control for cell editing, but if you set
            UseRightToLeftCompatibleTextBox to true then the grid will do editing with original TextBox controls
            instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DrawIndividualSpannedCellBorders">
            <summary>
            Gets or sets a value indicating whether Individual borders need to be drawn for spanned cells when they get focus.
            Ensure UseRightToLeftCompatibleTextBox is set to False to ensure the borders are shown properly such that the actual textbox is not edited directly.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ExcelLikeCurrentCell">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeCurrentCell"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeCurrentCell"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ExcelLikeSelectionFrame">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeSelectionFrame"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ExcelLikeSelectionFrame"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.BackgroundImage">
            <override/>
            <summary>Specifies the background image used for the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Font">
            <override/>
            <summary>Specifies the font used to display text in the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.TableStyle">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.TableStyle"/>
            <summary>Gets or sets the table style.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.MinResizeRowSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeRowSize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeRowSize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.MinResizeColSize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeColSize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MinResizeColSize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.SmoothControlResize">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SmoothControlResize"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.SmoothControlResize"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Properties">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Properties"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Properties"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ResizeRowsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeRowsBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ResizeColsBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeColsBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ResizeColsBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.ShowCurrentCellBorderBehavior">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShowCurrentCellBorderBehavior"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ShowCurrentCellBorderBehavior"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.TransparentBackground">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.TransparentBackground"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.TransparentBackground"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Item(System.Int32,System.Int32)">
            <copyfrom cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/><summary>See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/> in the GridModel class for information.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.EnableRemove">
            <summary>
            Gets or sets a value indicating whether the grid supports removing records if the underlying datasource
            allows it. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowRemove"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.EnableEdit">
            <summary>
            Gets or sets a value indicating whether the grid supports editing records if the underlying datasource
            allows editing records. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowEdit"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.EnableAddNew">
            <summary>
            Gets or sets a value indicating whether the grid supports adding new records if the underlying datasource
            allows adding new records. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowAddNew"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Provider">
            <summary>
            Assigns the new UIAProvider for Accessibility.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.FieldChooserShowingEventArgs">
            <summary>
            Provides data for FieldChooserShowing event which occurs before the FieldChooser dialog 
            Showing in column header.
            </summary>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.FieldChooserShowingEventArgs.#ctor(System.String,System.Object)">
            <summary>
            Constructor for FieldChooserShowingEventArgs
            </summary>
            <param name="caption"> Caption text of FieldChooser dialog. </param>
            <param name="fieldList"> Control of TreeViewAdv or GridControl. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserShowingEventArgs.Caption">
            <summary>
            Gets or Sets the value for FieldChooser dialog caption.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserShowingEventArgs.FieldList">
            <summary>
            Gets or Sets the value for TreeViewAdv or GridControl.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Windows.Forms.Grid.FieldChooserShowingEventHandler" -->
        <member name="T:Syncfusion.Windows.Forms.Grid.FieldChooserShownEventArgs">
            <summary>
            Provides data for FieldChooserShown event which occurs after the FieldChooser dialog 
            Shown in Column Header
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.FieldChooserShownEventArgs.#ctor(System.String,System.Object)">
            <summary>
            Constructor for FieldChooserShownEventArgs.
            </summary>
            <param name="caption"> Caption text of FieldChooser dialog. </param>
            <param name="fieldList"> Control of TreeviewAdv or GridControl. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserShownEventArgs.Caption">
            <summary>
            Gets the caption text of FieldChooser dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserShownEventArgs.FieldList">
            <summary>
            Gets the Value of TreeviewAdv or GridControl.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.FieldChooserShownEventHandler">
            <summary>
            Handles the FieldChooserShown event.
            </summary>
            <param name="sender"> The object instance. </param>
            <param name="e"> The event data. </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.FieldChooserClosingEventArgs">
            <summary>
            Provides data for FieldChooserClosing event which occurs before the FieldChooser dialog 
            Closing in column header.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.FieldChooserClosingEventArgs.#ctor(System.String,System.Object)">
            <summary>
            Constructor for FieldChooserClosingEventArgs.
            </summary>
            <param name="caption"> Caption text of FieldChooser dialog. </param>
            <param name="fieldList"> Control of TreeviewAdv or GridControl. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserClosingEventArgs.Caption">
            <summary>
            Gets or Sets the value for FieldChooser dialog Caption.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserClosingEventArgs.FieldList">
            <summary>
            Gets or Sets Value for TreeViewAdv or GridControl.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Windows.Forms.Grid.FieldChooserClosingEventHandler" -->
        <member name="T:Syncfusion.Windows.Forms.Grid.FieldChooserClosedEventArgs">
            <summary>
            Provides data for FieldChooserClosed event which occurs after the FieldChooser dialog 
            Closed in Column Header.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.FieldChooserClosedEventArgs.#ctor(System.String,System.Object)">
            <summary>
            Constructor for FieldChooserClosedEventArgs.
            </summary>
            <param name="caption"> Caption text of FieldChooser dialog. </param>
            <param name="dialogbox"> Control of TreeviewAdv or GridControl. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserClosedEventArgs.Caption">
            <summary>
            Gets the value for Caption of FieldChooser dialog 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.FieldChooserClosedEventArgs.FieldList">
            <summary>
            Gets the value for TreeviewAdv or GridControl.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.FieldChooserClosedEventHandler">
            <summary>
            Handles the FieldChooserClosed event.
            </summary>
            <param name="sender"> The object instance. </param>
            <param name="e"> The event data. </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel">
            <summary>
            This is the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/> class that holds all data information about a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.#ctor">
            <overload>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/>.
            </overload>
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/>.
            </summary>
            <param name="type">Type information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnBinderChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.BinderChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnColsMoving(Syncfusion.Windows.Forms.Grid.GridRangeMovingEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnClipboardPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnClipboardCanPaste(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnClipboardCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnClipboardCanCut(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnClipboardCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnClipboardCanCopy(Syncfusion.Windows.Forms.Grid.GridCutPasteEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnClearingCells(Syncfusion.Windows.Forms.Grid.GridClearingCellsEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.OnQueryOleDataSourceData(Syncfusion.Windows.Forms.Grid.GridQueryOleDataSourceDataEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.Binder">
            <summary>
            Gets or sets reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/> that manages the underlying
            datasource.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.BinderChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGridModel.Binder"/> has changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridRecordAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigate to the next or previous grid entry.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The navigation attempt fails.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridRecordAccessibleObject.GetFocused">
            <summary>
            Returns the currently focused child, if any.
            Returns this if the object itself is focused.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The control cannot be retrieved.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridFieldHeaderAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigate to the next or previous grid entry.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The navigation attempt fails.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridFieldHeaderAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The default action for the control cannot be performed.
            </exception>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridFieldHeaderAccessibleObject.GetFocused">
            <summary>
            Returns the currently focused child, if any.
            Returns this if the object itself is focused.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The control cannot be retrieved.
            </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridControlDesigner">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.DesignerActionSupportList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> objects contained in the list.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> array that contains the items in this list.
            </returns>
            override
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.SearchOptions.Syncfusion">
            <summary>
            Represents Syncfusion
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.SearchOptions.Forums">
            <summary>
            Represents Forums
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.SearchOptions.KnowledgeBase">
            <summary>
            Represents Knowledge Base
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundIconPaint">
            <summary>
            GridDataBoundIconPaint is a helper class for drawing and caching bitmaps from the DataBound.Resources folder of the Grid assembly
            </summary>
            <remarks>
            The bitmaps are loaded from the manifest and cached. The PaintIcon routine
            will substitute black pixels of the original bitmap and draw them with a 
            specified forecolor.<para/>
            Example:<para/>
               GridDataBoundIconPaint.Paint.PaintIcon(g, rect, Point.Empty, bitmapName, Color.Black);
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundIconPaint.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellButton">
            <summary>
            Defines a cell button element that looks like a + and - button for expanding and collapsing nodes in a tree. 
            Typically used with <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellButton.#ctor(Syncfusion.Windows.Forms.Grid.GridCellRendererBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellButton"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> that draws this cell button element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellButton.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draws the cell button element at the specified row and column index.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="bActive">True if this is the active current cell; False otherwise.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel">
            <summary>
            Implements the data / model part for an expandable row header cell in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>. The
            The expandable row header cell will display a '+' for expanded rows and a '-' for collapsed rows similar to a TreeControl.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>
            Creates a renderer for this cell model that is specific to the GridControlBase.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> the cell renderer is created for.</param>
            <returns>A new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer"/> specific for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer">
            <summary>
            Implements the renderer part for an expandable row header cell in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>. The
            The expandable row header cell will display a '+' for expanded rows and a '-' for collapsed rows similar to a TreeControl.
            </summary>
            <remarks>
            Defines the renderer part of an expandable row header cell. A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> registers "DataBoundRowExpandCell" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>
            of a cells <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell.
            <para/>
            The following table lists some characteristics about the DataBoundRowExpandCell cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>DataBoundRowExpandCell</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Click Only</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized
            for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. To hide grid lines for a certain cell, you can
            set the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBorder.Style"/> of the specific edge to to be
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.None"/>. By default, the right and bottom borders are initialized to
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.Standard"/> and borders are drawn as specified in the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DefaultGridBorderStyle"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>When set to <see cref="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Flat"/>, the header will be drawn with slightly raised edges typical for cell headers. If the grid is XP Themes enabled, the headers will be drawn with XP Themes look. If you specify Sunken or Raised, the header will be drawn with sunken or raised edges and not XP Themed. (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>DataBoundRowExpandCell (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as a current cell when the user click onto the header. Usually you do not want a header to be activated as a current cell unless you want to have editing capabilities such as allowing user to rename header text in place. Such renaming functionality needs to be implemented in a derived class. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description>Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. If the grid is XP Themes enabled, this color will be ignored and the header will be drawn with default XP Themes header background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color of the icon. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>When drawing this header cell this specifies the minimum empty area between the text rectangle without borders and the icon. The icon will be centered inside the remaining rectangle. (Default: GridMarginsInfo.Default)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> object for the given GridControlBase
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>
            Allows custom formatting of a cell by changing its style object.
            </summary>
            <param name="e">A reference to <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs"/> that holds the event data.</param>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)"/> is called from <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.PrepareViewStyleInfo"/>
            in order to allow custom formatting of
            a cell by changing its style object.
            <para/>
            Set the cancel property true if you want to avoid
            the associated cell renderers object <see cref="M:Syncfusion.Windows.Forms.Grid.GridCellRendererBase.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)"/>
            method to be called.<para/>
            Changes made to the style object will not be saved in the grid nor cached. This event
            is called every time a portion of the grid is repainted and the specified cell belongs
            to the invalidated region of the window that needs to be redrawn.<para/>
            Changes to the style object done at this time will also not be reflected when accessing
            cells though the models indexer. See <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>.<para/>
            <note type="note">Do not change base style or cell type at this time.</note>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventHandler"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Grid.GridControlBase.GetViewStyleInfo(System.Int32,System.Int32)"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowExpandCellRenderer.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel">
            <summary>
            Implements the data / model part for a row header cell in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>. The
            row header cell will display an arrow for the current row, a star for the append row, and
            a pencil when the row is being edited.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a cell renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <summary>
            Calculates the preferred size of the cell based on its contents without margins and any buttons.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="queryBounds">grsphical bounds</param>
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer">
            <summary>
            Implements the renderer part of a row header cell in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>. The
            row header cell will display an arrow for the current row, a star for the append row, and
            a pencil when the row is being edited.
            </summary>
            <remarks>
            Defines the renderer part of a row header cell. A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The header cell is XP Themes enabled. It will be drawn themed if <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> is True.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> registers "RowHeaderCell" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>
            of a cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell.
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>When set to <see cref="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Flat"/>, the header will be drawn with slightly raised edges typical for cell headers. If the grid is XP Themes enabled, the headers will be drawn with XP Themes look. If you specify Sunken or Raised, the header will be drawn with sunken or raised edges and not XP Themed. (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>RowHeaderCell (Default: TextBox)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as the current cell when the user clicks onto the header. Usually you do not want a header to be activated as the current cell unless you want to have editing capabilities like allowing user to rename header text in place. Such renaming functionality needs to be implemented in a derived class. (Default: true)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description>Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. If the grid is XP Themes enabled, this color will be ignored and the header will be drawn with default XP Themes header background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color of the arrow, pencil, or star icon. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>When drawing this header cell this specifies the minimum empty area between the text rectangle without borders and the icon. The icon will be centered inside the remaining rectangle. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Themed"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell should be drawn using Windows XP themes when <see cref="P:Syncfusion.Windows.Forms.Grid.GridControlBase.ThemesEnabled"/> has been set.  (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellRenderer"/> object for the given GridControlBase
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCheckBoxCellModel"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer.OnDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer.OnDrawDisplayText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer.OnClick(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer.PaintIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Paint the specified bitmap substituting black pixels with a new color.
            </summary>
            <param name="g">A Graphics object used to draw the bitmap.</param>
            <param name="bounds">A Rectangle which contains the boundary data of the rectangle.</param>
            <param name="offset">A Point that specifies pixels to offset the bitmap from its origin point.</param>
            <param name="bmp">The Bitmap to be drawn on the screen.</param>
            <param name="foreColor">The new color used to substitute black pixels.</param>
            <returns>A Rectangle which contains the boundary data of the drawn bitmap.</returns>
            <remarks>
            The PaintIcon routine
            will substitute black pixels of the original bitmap and draw them with the
            specified forecolor. The bitmap is centered inside the specified bounds. 
            Use the offset if you want to display a "pressed button" state. If the button is
            pressed, specify offset = new Point(1, 1).
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundRowHeaderCellRenderer.PaintIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point,System.String,System.Drawing.Color)">
            <summary>
            Load the bitmap from manifest and paint it substituting black pixels with a new color.
            </summary>
            <param name="g">A Graphics object used to draw the bitmap.</param>
            <param name="bounds">A Rectangle which contains the boundary data of the rectangle.</param>
            <param name="offset">A Point that specifies pixels to offset the bitmap from its origin point.</param>
            <param name="bitmapName">The name of the bitmap.</param>
            <param name="foreColor">The new color used to substitute black pixels.</param>
            <remarks>
            The PaintIcon routine
            will substitute black pixels of the original bitmap and draw them with the
            specified forecolor. The bitmap is centered inside the specified bounds. 
            Use the offset if you want to display a "pressed button" state. If the button is
            pressed, specify offset = new Point(1, 1).
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellButton">
            <summary>
            Defines a cell button element that looks like a + and - button for expanding and collapsing nodes in a tree. 
            Used with <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer"/> as it assumes it is in a hierarchical GridDataBoundGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellButton.#ctor(Syncfusion.Windows.Forms.Grid.GridCellRendererBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellButton"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/>.
            </summary>
            <param name="control">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> that draws this cell button element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellButton.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draws the cell button element at the specified row and column index.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context of the canvas.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="bActive">True if this is the active current cell; False otherwise.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel">
            <summary>
            Implements the data / model part for an expandable row header cell in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> that
            displays treelines. It is used exclusively with a hierarchical GridDataBoundGrid.
            The expandable row header cell will display a '+' for expanded rows and a '-' for collapsed rows similar to a TreeControl.
            </summary>
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.<para/>
            A <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel"/> can serve as model for several <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer"/>
            instances if there are several <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> views for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel"/> for more detailed information about this cell type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel"/> object 
            and stores a reference to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> this cell belongs to.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> for this cell model.</param>    
            <remarks>
            You typically access cell models through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.CellModels"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <override/>
            <summary>Creates a renderer for this cell model.</summary>
            <param name="control">The grid control.</param>
            <returns>Cell renderer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel.OnQueryPrefferedClientSize(System.Drawing.Graphics,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridQueryBounds)">
            <returns>The optimal size of the cell.</returns>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer">
            <summary>
            Implements the renderer part for an expandable row header cell in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>. The
            The expandable row header cell will display a '+' for expanded rows and a '-' for collapsed rows with treelines similar to a TreeControl.
            </summary>
            <remarks>
            Defines the renderer part of a expandable row header cell. A renderer is created for each <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>. There can be several renderers
            associated with one <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer"/> if several views display the same
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            <para/>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> registers "DataBoundRowExpandCell" as identifier in <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/>
            of a cells <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            to associate this cell type with a cell.
            <para/>
            The following table lists some characteristics about the DataBoundRowExpandCell cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>DataBoundRowExpandCell</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Click Only</description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>No</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/></description>
                </item>
            </list>
            <para/>
             <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized
            for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. To hide grid lines for a certain cell, you can
            set the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBorder.Style"/> of the specific edge to to be
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.None"/>. By default, the right and bottom borders are initialized to
            <see cref="F:Syncfusion.Windows.Forms.Grid.GridBorderStyle.Standard"/> and borders are drawn as specified in the
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.DefaultGridBorderStyle"/> property of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> instance. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>When set to <see cref="F:Syncfusion.Windows.Forms.Grid.GridCellAppearance.Flat"/>, the header will be drawn with slightly raised edges typical for cell headers. If the grid is XP Themes enabled the headers will be drawn with XP Themes look. If you specify Sunken or Raised, the header will be drawn with sunken or raised edges and not XP Themed. (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>DataBoundRowExpandCell (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as the3 current cell when the user clicks onto the header. Usually you do not want a header to be activated as the current cell unless you want to have editing capabilities such as allowing users to rename header text in place. Such renaming functionality needs to be implemented in a derived class. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description>Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. If the grid is XP Themes enabled, this color will be ignored and the header will be drawn with default XP Themes header background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color of the icon. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>When drawing this header cell this specifies the minimum empty area between the text rectangle without borders and the icon. The icon will be centered inside the remaining rectangle. (Default: GridMarginsInfo.Default)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellRendererBase"/> object for the given GridControlBase
            and <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer.OnPrepareViewStyleInfo(Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs)">
            <override/>
            <summary>
            Allows custom formatting of a cell by changing its style object.
            </summary>
            <param name="e">A reference to <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrepareViewStyleInfoEventArgs"/> that holds the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer.OnLayout(System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Drawing.Rectangle[])">
            <summary>
            This method is called from PerformLayout to calculate the client rectangle given
            the inner rectangle of a cell and any boundaries of cell buttons.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="innerBounds">The <see cref="T:System.Drawing.Rectangle"/> with the inner bounds of a cell.</param>
            <param name="buttonsBounds">An array of <see cref="T:System.Drawing.Rectangle"/> with bounds for each cell button element.</param>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
            <summary>
            Draws the content for specified cell.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="cellRectangle">Cell rectangle.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <param name="style">Cell style information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer.OnDrawCellButton(Syncfusion.Windows.Forms.Grid.GridCellButton,System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundTreeCellRenderer.LineColor">
            <summary>
            Gets or sets color used for drawing the treelines.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBarTextChangedEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarTextChanged"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBarCreatingColumnHeaderEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.CreatingColumnHeader"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarShowDialog"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBarFilterCompletedEventHandler">
            <summary>
            Represents a method that handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarFilterCompleted"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBarCreatingColumnHeaderEventArgs">
            <summary>
            EventArgs used by the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.CreatingColumnHeader"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBarCreatingColumnHeaderEventArgs.#ctor(System.String)">
            <summary>
             Constructor for GridFilterBarCreatingColumnHeaderEventArgs.
            </summary>
            <param name="colName">Mapping name of the column that is about to have a
            header cell created for it.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFilterBarCreatingColumnHeaderEventArgs.ColName">
            <summary>
            Gets Mapping name of the column.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBarTextChangedEventArgs">
            <summary>
            EventArgs used by the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarTextChanged"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBarTextChangedEventArgs.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventArgs">
            <summary>
            EventArgs used by the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarShowDialog"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventArgs.#ctor(System.String,System.Windows.Forms.DialogResult)">
            <summary>
            Initializes the event args.
            </summary>
            <param name="filterCriteria">The filter criteria.</param>
            <param name="result">The dialog result.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventArgs.FilterCriteria">
            <summary>
            Gets or sets the filter criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventArgs.Result">
            <summary>
            Gets or sets the dialog result (if Handled = True was set).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFilterBar">
            <summary>
            Encapsulates the functionality of adding a header row of combo boxes
            to a GridDataBoundGrid so the rows displayed in the grid can be filtered
            using the combo boxes.
            </summary>
            <remarks>
            Please note that currently, FilterBars are only supported for simple 
            GridDataBoundGrids that are not hierarchical. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridFilterBar"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.OnFilterBarTextChanged(Syncfusion.Windows.Forms.Grid.GridFilterBarTextChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarTextChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFilterBarTextChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.OnCreatingColumnHeader(Syncfusion.Windows.Forms.Grid.GridFilterBarCreatingColumnHeaderEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.CreatingColumnHeader"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFilterBarCreatingColumnHeaderEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.OnFilterBarShowDialog(Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventArgs)">
            <summary>
            Raises the  <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarShowDialog"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.OnFilterBarFilterCompleted(Syncfusion.Windows.Forms.Grid.GridFilterBarTextChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarTextChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.Grid.GridFilterBarTextChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFilterBar.originalFilterOnTable">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFilterBar.originalSortOnTable">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFilterBar.originalDataView">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GetGrid">
            <summary>
            Accessor for the wired grid.  
            </summary>
            <returns>Returns the wired <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.SetGrid(Syncfusion.Windows.Forms.Grid.GridDataBoundGrid)">
            <summary>
            Specifies the wired grid.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> object to be wired.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GetFilterRow">
            <summary>
            The row index for the FilterBar row.  
            </summary>
            <returns>Returns the row index where the Filterbar is displayed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.SetFilterRow(System.Int32)">
            <summary>
            Sets the row index where the FilterBar is displayed.
            </summary>
            <param name="r">The row index where the FilterBar is displayed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GetDataTable">
            <summary>
            The DataTable associated with the displayed data in the wired grid.
            </summary>
            <returns>The DataTable.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.SetDataTable(System.Data.DataTable)">
            <summary>
            Sets the DataTable associated with the displayed data in the wired grid.
            </summary>
            <param name="dt">The DataTable.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.WireGrid(Syncfusion.Windows.Forms.Grid.GridDataBoundGrid)">
            <summary>
            Associates a GridDataBoundGrid with this FilterBar.
            </summary>
            <param name="grid">The GridDataBoundGrid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.WireGrid(Syncfusion.Windows.Forms.Grid.GridDataBoundGrid,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Associates a GridDataBoundGrid with this FilterBar.
            </summary>
            <param name="grid">The GridDataBoundGrid.</param>
            <param name="style">The GridStyleInfo object that sets the appearance of cells in the FilterBar row.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.UnwireGrid">
            <summary>
            Disassociates a grid with this FilterBar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GridKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GridCurrentCellShowingDropDown(System.Object,Syncfusion.Windows.Forms.Grid.GridCurrentCellShowingDropDownEventArgs)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GridCurrentCellAcceptedChanges(System.Object,System.ComponentModel.CancelEventArgs)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GridCurrentCellCloseDropDown(System.Object,Syncfusion.Windows.Forms.PopupClosedEventArgs)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.CreateUniqueEntries(System.Data.DataView,System.String)">
            <summary>
            Creates a DataTable of unique choices for a FilterBar entry.
            </summary>
            <param name="dv">The DataView that is being displayed in the grid.</param>
            <param name="colName">The column name of the column whose FilterBar choices are being constructed.</param>
            <returns>A DataTable.</returns>
            <remarks>This method is called to generate the list of entries for the default drop-down cell. 
            The method inserts (none) and (custom) as the first two entries in the list. The other entries
            are unique occurrences of entries from the specified column. The (none) and (custom) strings can be 
            changed through <see cref="F:Syncfusion.Windows.Forms.Grid.GridFilterBar.GridFilterBarStrings"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.GetFilterFromRow(Syncfusion.Windows.Forms.Grid.GridDataBoundGrid)">
            <summary>
            Returns the filter string based on current cell values in the FilterBar.
            </summary>
            <param name="grid">The grid holding the FilterBar.</param>
            <returns>Returns a string that is appropriate to use as a DataView.RowFilter string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBar.ResetFilterRow(Syncfusion.Windows.Forms.Grid.GridDataBoundGrid)">
            <summary>
            Blanks the filter string on every column.
            </summary>
            <param name="grid">The grid holding the FilterBar.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFilterBar.GridFilterBarStrings">
            <summary>
            String array that holds the strings used in GridFilterBar.
            </summary>
            <remarks>If you want to change these strings,
            you can set your new strings into the appropriate position in the GridFilterBarStrings 
            array. Here is the code that shows the default settings. You should assign your new
            strings to the corresponding positions. 
            <para/>
            The first two entries are the special items in the droplists for filter combo box cells. If you 
            set one or both of these strings to the empty string, that option will not appear in
            the droplist.
            </remarks>
            <example>Here is the code that shows position of each string in GridFilterBarStrings.
            <code lang="C#">
                   public string[] GridFilterBarStrings = new string[]
                   {
                       "(none)",                                        //0
                       "(custom)",                                        //1
                       "equals",                                        //2
                       "does not equal",                                //3
                       "is greater than",                                //4
                       "is greater than or equal to",                    //5
                       "is less than",                                    //6
                       "is less than or equal to",                        //7
                       "begins with",                                    //8
                       "does not begin with",                            //9
                       "ends with",                                    //10
                       "does not end with",                            //11
                       "contains",                                        //12
                       "does not contain",                                //13
                       "Use * to represent any series of characters",    //14
                       "Show rows where:",                                //15
                       "Improper custom filter: ",                        //16
                       "I and "                                        //17
                   };
            </code>
            </example>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarTextChanged">
            <summary>
            Raised immediately prior to the GridFilterBar.RowFilter property changing.
            </summary>
            <remarks>Use this event if you need to know when the RowFilter is about to change.
            For example, handling this event will allow you to display the current row filter.</remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.CreatingColumnHeader">
            <summary>
            Lets you control whether or not a column will display a drop-down in the added
            filter row.
            </summary>
            <remarks>To indicate that a column should not contain a filter cell, set
            the Cancel member of the events args to True.</remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarShowDialog">
            <summary>
            Lets you display a custom filter dialog of your choosing.
            </summary>
            <remarks>
            Your dialog should provide a properly formatted e.FilterCriteria that will be assigned to the 
            GridFilterBar.RowFilter property to determine the filtered contents of the grid. To indicate that
            your filter should be applied, set e.Result = DialogResult.OK and e.Handled = True. 
            To cancel the filter operation and leave the filter state of 
            the grid as is, set e.Result = DialogResult.Cancel and e.Handled = True.  
            To have the grid display its default dialog, set e.Handled = False.
            </remarks>
            <example>
              <para>The following example displays some arbitrary dialog. The dialog returns information
              necessary to set the proper values in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridFilterBarShowDialogEventArgs"/> e.
              If you want the default dialog shown, set e.handled = False. If you do not want the default dialog
              displayed, you set e.Handled = True. When e.Handled = True, you can indicate that the value 
              of e.FilterCriteria should be used to filter the display by setting e.Result = DialogResult.OK. 
              </para>
              <code lang="C#">
                       //Show my own custom filter. 
                       private void GridFilterBarShowDialogEventHandler(object send, GridFilterBarShowDialogEventArgs e)
                       {
                           MyFilterDialog dlg = new MyFilterDialog();
                           DialogResult result = dlg.ShowDialog();
            <para/>
                           if(result == DialogResult.Ignore)
                           {
                               //Show the default dialog.
                               e.Handled = false;
                           }
                           else 
                           {
                               //Otherwise, don't show default and set the result.
                               e.Handled = true;
                               e.Result = result; //cancel or OK-filter the grid with e.FilterCriteria
                               e.FilterCriteria = dlg.textBox1.Text; // the filter string
                           }
                       }
              </code>
            </example>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFilterBar.FilterBarFilterCompleted">
            <summary>
            Raised immediately after a filter has be completed.
            </summary>
            <remarks>Use this event if you need to know when your user has completed a filter action.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFilterBar.RowFilter">
            <summary>
            Gets or sets the RowFilter for use as the DataView.RowFilter property for the DataView
            associated with the current GridDataBoundGrid.DataSource.
            </summary>
            <remarks>Setting this property will apply the filter contained in the string
            to the default DataView of the GridDataBoundGrid. This member is set as you
            use the combo boxes on the FilterBar. But you can also set it explicitly as well.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFilterBar.StyleInfo">
            <summary>
            Gets or sets the default style for the cells in the FilterBar row. 
            </summary>
            <remarks>You can use this property to control the basic appearance, such as BackColor
            or Font, of the cells on the FilterBar row.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFilterBar.ParenthesesAroundColumnFilters">
            <summary>
            Gets or sets a value indicating whether to enclosed each column filter in parentheses when they are ANDed to 
            create the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFilterBar.RowFilter"/> string. 
            </summary>
            <remarks>The default value is true. This property only has an effect if you have 
            multiple column filters set, and have also set a 
            compound filter using an OR clause in the Custom dialog. In this case, the parentheses
            are needed to ensure the proper evaluation of the logical expression. Versions earlier than
            4.1.0.0, did not provide these added parentheses. If you need this earlier behavior, then set
            this property to false.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFilterBar.Wired">
            <summary>
            Gets a value indicating whether this FilterBar object is associated with a GridDataBoundGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFilterBarCustomDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBarCustomDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFilterBarCustomDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentRecordItemChangedBehavior">
            <summary>
            Defines the default behavior when the grid is notified from the underlying IBindingList
            that the data for the current record are changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentRecordItemChangedBehavior.None">
            <summary>
            Represents None.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentRecordItemChangedBehavior.ReloadCurrentRecord">
            <summary>
            Discard any changes for the current record and display the modified data
            into the current record.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentRecordItemChangedBehavior.KeepCurrentRecord">
            <summary>
            Keep changes that were made for the current record and keep
            the current cell's control text and mark the
            current record as modified (show pencil in row header).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridCurrentRecordItemChangedBehavior.KeepCurrentCellText">
            <summary>
            Keep the text of the current cell, mark current record as modified
            (show pencil in row header) when text of current cell differs.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridTextDataObjectConsumer">
            <summary>
            Implements a DataObject consumer for text data. Will handle data provided in DataFormats.Text and DataFormats.UnicodeText format.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer">
            <summary>
            Implement this interface in order to participate as a possible DataObject consumer. See <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer.QueryAcceptData(System.Windows.Forms.IDataObject,Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer,Syncfusion.Windows.Forms.Grid.GridQueryAcceptDataOptions)">
            <summary>
            Queries the DataObject consumer if it knows how to handle the IDataObject.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="consumer">Another consumer that is capable of reading the data. Might be NULL.</param>
            <param name="options">Reserved for future use.</param>
            <returns>True if this consumer is able to read the data from <paramref name="dataObject"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer.DetermineRowColCount(System.Windows.Forms.IDataObject)">
            <summary>
            Queries the dimension in rows and columns of the data object.
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>returns size</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer.DropAtRowCol(System.Windows.Forms.IDataObject,System.Int32,System.Int32)">
            <summary>
            Paste the contents of the data object at the specified cell coordinates.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer.Name">
            <summary>
            Gets the name of the DataObject consumer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridTextDataObjectConsumer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGridTextDataObjectConsumer"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> this object should be associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridTextDataObjectConsumer.QueryAcceptData(System.Windows.Forms.IDataObject,Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer,Syncfusion.Windows.Forms.Grid.GridQueryAcceptDataOptions)">
            <summary>
            Queries the DataObject consumer if it knows how to handle the IDataObject.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="consumer">Another consumer that is capable of reading the data. Might be NULL.</param>
            <param name="options">Reserved for future use.</param>
            <returns>True if this consumer is able to read the data from <paramref name="dataObject"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridTextDataObjectConsumer.DetermineRowColCount(System.Windows.Forms.IDataObject)">
            <summary>
            Queries the dimension in rows and columns of the data object.
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>returns Dimension.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGridTextDataObjectConsumer.DropAtRowCol(System.Windows.Forms.IDataObject,System.Int32,System.Int32)">
            <summary>
            Paste the contents of the data object at the specified cell coordinates.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGridTextDataObjectConsumer.Name">
            <summary>
            Gets the name of the DataObject consumer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder">
            <summary>
            This is a helper class for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> that manages access to the
            data source.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> implements the <see cref="T:Syncfusion.Windows.Forms.Grid.IGridModelDataProvider"/>
            interface that lets it catch <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/>, <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/>,
            <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/>, and <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> events
            in one place.
            <para/>
            The methods in this interface are called before the named events are raised and thus
            give you a chance to control the event's behavior before other subscribers can handle it.
            <para/>
            You access the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/> instance with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DataProvider"/>
            property of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/> and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
            <param name="model">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>this object should be associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ColIndexToField(System.Int32)">
            <summary>
            Converts a column index in a grid to a zero-based field number adjusted for column headers. The resulting
            field number can be used as an index to look up a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.InternalColumns"/>
            collection.
            </summary>
            <param name="colIndex">The column index in the grid.</param>
            <returns>A zero-based field number in the datasource.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.FieldToColIndex(System.Int32)">
            <summary>
            Converts a zero-based field number to a column index in a grid adjusted for column headers.
            </summary>
            <param name="fieldNum">A zero-based field number in the datasource.</param>
            <returns>The column index in the grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.NameToField(System.String)">
            <summary>
            Returns the zero-based field number for a column that matches a given name. The resulting
            field number can be used as an index to look up a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.InternalColumns"/>
            collection.
            </summary>
            <param name="name">The name of the field to be matched.</param>
            <returns>A zero-based field number in the datasource; -1 if not found.</returns>
            <remarks>
            This function only searches the columns in the root level. If you have several relations
            displayed in the grid, the nested relations will not be searched by this function.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.NameToColIndex(System.String)">
            <summary>
            Returns the column index for a column that matches a given name.
            Returns the zero-based field number for a column that matches a given name. The resulting
            field number can be used as an index for <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.Item(System.Int32,System.Int32)"/>.
            </summary>
            <param name="name">The name of the field to be matched.</param>
            <returns>The column index in the grid; -1 if not found.</returns>
            <remarks>
            This function only searches the columns in the root level. If you have several relations
            displayed in the grid, the nested relations will not be searched by this function.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.NameToRowIndex(System.String)">
            <summary>
            Returns the row index for a row that matches a given name.
            </summary>
            <param name="name">The name of the row to be matched.</param>
            <returns>The row index in the grid; -1 if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.InitializeColumns">
            <summary>
            Recreates the internal columns collection or loops through the existing <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GridBoundColumns"/>
            collection and reinitializes columns with the correct <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.PropertyDescriptor"/> based on
            the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundColumn.MappingName"/>.
            </summary>
            <remarks>
            This method is automatically called when a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DataSource"/> is assigned to the grid.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.LayoutColumns(System.String[])">
            <summary>
            Rearranges how columns are displayed in the grid and allows you to specify covered cells
            and / or break records into several rows displayed in the grid.
            </summary>
            <param name="mappingNames">A string array with field names. <para/>
            The following strings have a specific meaning: <para/>
            "-" specifies a covered cell.<para/>
            "." indicates line break inside the record. Subsequent fields will be displayed in another row.<para/>
            "" specifies an empty "whitespace" column.<para/>
            Other that these, you should use the same mapping names that you also use with <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects.
            </param>
            <example>
            See the "MultiRowRecord" and "ExpandGrid" examples for sample code.
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetHierarchyLevel(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> with information about columns displayed
            for the specified relation.
            </summary>
            <param name="name">The name of the relation. This should be the same name you used
            for adding the relation with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AddRelation(System.String)"/>.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> with information about columns displayed
            for the specified relation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetHierarchyLevel(System.Int32)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> with information about columns displayed
            for the specified relation.
            </summary>
            <param name="index">The zero-based hierarchy level for this relation.
            </param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> with information about columns displayed
            for the specified relation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AddRelation(System.String)">
            <summary>
            Adds a <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> to the grid for a specified relation. If you are referring
            to a relation within a <see cref="T:System.Data.DataSet"/>, the name of the
            relation should be the same name you used when adding the relation to <see cref="P:System.Data.DataSet.Relations"/>
            of <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="nestedDataMember">The name of the relation. This can be the name of a <see cref="T:System.Data.DataRelation"/>
            or the name of a <see cref="T:System.ComponentModel.PropertyDescriptor"/> that references any <see cref="T:System.Collections.IList"/>.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> with information about columns displayed
            for the newly added relation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CreateBoundColumnsCollection">
            <summary>
            Instantiates a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> that holds the collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
            objects. If you want to use a class derived from the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> you should also derive
            a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> and set <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BoundColumnsCollectionType"/>. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BoundColumnsCollectionType"/> for a sample.
            </summary>
            <returns>An empty <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RowIndexToPosition(System.Int32)">
            <summary>
            Converts an absolute row index in a grid to a zero-based position in the same grid adjusted for row headers. The first
            grid position is the 0-based index starting with the first non-header row in the grid.
            </summary>
            <param name="rowIndex">The absolute row index in the grid.</param>
            <returns>The zero-based position in the grid adjusted for row headers.</returns>
            <remarks>
            If you have a grid with 3 row headers:<para/>
            RowIndexToPosition(4) will return 1.<para/>
            RowIndexToPosition(3) will return 0.<para/>
            RowIndexToPosition(2) will return -1.<para/>
            RowIndexToPosition(1) will return -1.<para/>
            The row index and the grid position do not depend on <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RelationCount"/> and number of rows per record.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.PositionToRowIndex(System.Int32)">
            <summary>
            Converts a zero-based position in the grid to an absolute row index in the grid.
            </summary>
            <param name="gridPosition">A zero-based position in the grid. The first
            position is the 0-based index starting with the first non-header row in the grid.</param>
            <returns>The row index in the grid.</returns>
            <remarks>
            If you have a grid with 3 row headers:<para/>
            PositionToRowIndex(-1) will throw exception.<para/>
            PositionToRowIndex(0) will return 3.<para/>
            PositionToRowIndex(1) will return 4.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RowIndexToListManagerPosition(System.Int32)">
            <summary>
            Converts an absolute row index in a grid to a zero-based record index of the datasource displayed in the grid.
            </summary>
            <param name="rowIndex">The absolute row index in the grid.</param>
            <returns>Zero-based record index of the data source displayed in the grid.</returns>
            <remarks>
            The returned value depends on the number of rows per record and the current expansion state of
            hierarchy levels in the grid.<para/>
            Only the list manager position for the outer hierarchy is returned.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ListManagerPositionToRowIndex(System.Int32)">
            <summary>
            Converts a zero-based position of the data source displayed in the grid to an absolute row index in the grid.
            </summary>
            <param name="record">A zero-based record in the data source displayed in the grid. </param>
            <returns>The row index in the grid. </returns>
            <remarks>
            The returned value depends on the number of rows per record and the current expansion state of
            hierarchy levels in the grid.<para/>
            Only the list manager position for the outer hierarchy is accepted as input.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundRecordState"/> for the specified absolute row index with information about
            the hierarchy level and the record displayed at the specified row.
            </summary>
            <param name="rowIndex">The absolute row index in the grid.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundRecordState"/> with information about
            the hierarchy level and the record displayed at the specified row.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RecordEqualsAtRowIndex(System.Int32,System.Int32)">
            <summary>
            Checks if both rows represent the same record of the underlying data source.
            </summary>
            <param name="rowIndex1">The first row index.</param>
            <param name="rowIndex2">The second row index.</param>
            <returns>True if both rows show the same record of the underlying data source.</returns>
            <remarks>
            Normally different rows will represent different records in the data source. However,
            you can break one record into several rows with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.LayoutColumns(System.String[])"/>. In that
            case, several rows can represent the same record in the datasource.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ListManagerPositionToPosition(System.Int32)">
            <summary>
            Returns the grid position for a zero-based record in list manager position.
            </summary>
            <param name="position">Zero-based record in list manager.</param>
            <returns>Zero-based grid position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.PositionToListManagerPosition(System.Int32)">
            <summary>
            Returns zero-based record in list manager for zero-based grid position.
            </summary>
            <param name="gridPosition">Zero-base grid position.</param>
            <returns>Zero-based record in list manager.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResetHierarchyLevels">
            <summary>
            Call this if you have changed the underlying datasource and added several relations.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.childListHandler">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResetError">
            <summary>
            Resets error information for the current record.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RefreshRows(System.Windows.Forms.CurrencyManager)">
            <summary>
            Refreshes the child view using the DataRelation to get to
            the child rows of the selected row.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.QueryColCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryColCount"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.QueryRowCount(Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryRowCount"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridRowColCountEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.QueryCellInfo(Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.QueryCellInfo"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SaveCellInfo(Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs)">
            <summary>
            Method handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModel.SaveCellInfo"/> event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.Grid.GridSaveCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BeginEdit">
            <summary>
            Begins an edit on the current record.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EndEdit">
            <summary>
            Pushes changes since a <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BeginEdit"/> call for the current record.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CancelEdit">
            <summary>
            Cancels the current edit operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResetField(System.Int32)">
            <summary>
            Resets a field back to its original value in the current record.
            </summary>
            <param name="fieldNum">The zero-based field index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsFieldDirty(System.Int32)">
            <summary>
            Checks if a field is modified in the current record.
            </summary>
            <param name="fieldNum">The zero-based field index.</param>
            <returns>True if field is changed; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsAnyDirtyField">
            <summary>
            Checks if any field in the current record is modified.
            </summary>
            <returns>true if there are pending changes; false if current record is not modified.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AddNew">
            <summary>
            Adds a new record to the datasource.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnEditModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EditModeChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SetCurrentPosition(System.Int32,System.Boolean)">
            <summary>
            Changes the current record in the datasource.
            </summary>
            <param name="value">The zero-based position in the datasource for the new current record.</param>
            <param name="raiseCurrentPositionChanged"> specifies if a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentPositionChanged"/> event should be raised.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RaiseCurrentPositionChanged">
            <summary>
            Raises a <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentPositionChanged"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnCurrentPositionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentPositionChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.Sort(System.Int32)">
            <summary>
            Sorts the datasource by the specified field.
            </summary>
            <param name="fieldNum">This number specifies the field to use as key for a sort.</param>
            <remarks>
            When the datasource is sorted by the specified field, the sort direction is toggled
            between ascending and descending.<para/>
            Sorting is supported only for columns displayed in the root level for grid with
            nested relations displayed in the grid.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RemoveRecords(System.Int32,System.Int32)">
            <summary>
            Removes the specified records from the datasource (without sending a <see cref="E:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.RowsDeleting"/> event; use <see cref="M:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DeleteRecordsAtRowIndex(System.Int32,System.Int32)"/>
            instead if you need it.
            </summary>
            <param name="first">The zero-based position of the first record.</param>
            <param name="last">The zero-based position of the last record.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnGridBoundColumnsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GridBoundColumnsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SetDataBinding(System.Object,System.String)">
            <summary>
              <para>Sets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataSource"/> and <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataMember"/> properties at run-time.</para>
            </summary>
            <param name="dataSource">The datasource, typed as <see cref="T:System.Object"/>, for the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid" qualify="true"/> control.</param>
            <param name="dataMember">The <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataMember"/> string that specifies the table to bind to within the object returned by the <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataSource"/> property.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnBindingContextChanged(System.EventArgs)">
            <summary>
            This is called when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BindingContext"/> property is changed.
            </summary>
            <param name="e">The EventArgs.Empty</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DataSourceChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnRecordsRemoved(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RecordsRemoved"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.listManager_Changed(System.Object,System.EventArgs)">
            <summary>
            Row in master view changed. Reload row count, rows.
            </summary>
            <param name="sender">Event source.</param>
            <param name="ea">Event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SuspendBinding">
            <summary>
            Suspends data binding until <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResumeBinding"/> is called.
            </summary>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SuspendBinding"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResumeBinding"/> are two methods that allow the
            temporary suspension and resumption of data binding. You would typically suspend data binding
            if you want to make several changes to the data source without immediately updating the grid
            after each change.
            <para/>
            For example, if you want to clear out all records in your data set and refill it with its original
            data, you can improve performance of this operation substantially if the grid does not need to
            immediately reflect every row change while the data set is filled.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResumeBinding">
            <summary>
            Resumes data binding after a previous <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SuspendBinding"/> call.
            </summary>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SuspendBinding"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResumeBinding"/> are two methods that allow the
            temporary suspension and resumption of data binding. You would typically suspend data binding
            if you want to make several changes to the data source without immediately updating the grid
            after each change.
            <para/>
            For example, if you want to clear out all records in your data set and refill it with its original
            data, you can improve performance of this operation substantially if the grid does not need to
            immediately reflect every row change while the data set is filled.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ItemChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.ItemChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnRowChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RowChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnCurrentCellListItemChanged(Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventArgs)">
            <summary>
            Occurs when the grid is notified from the underlying IBindingList and
            lets you dynamically define the behavior how to resolve conflict with
            pending changes in current record.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnBindingListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BindingListChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BindToCurrencyManager">
            <summary>
            Gets or sets a value indicating whether list should be attached to <see cref="T:System.Windows.Forms.CurrencyManager"/>
            or if you would like the engine to be detached from a CurrencyManager. (Default is True)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AutoInitCellTypes">
            <summary>
            Gets or sets a value indicating whether the grid should set <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> automatically
            for columns that have dates or boolean values.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RootHierarchyLevel">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> with information about columns displayed
            for the root list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.HierarchyLevelCount">
            <summary>
            Gets the number of hierarchies displayed in this grid. A regular data source without
            nested relations will have a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.HierarchyLevelCount"/> of 1.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RelationCount">
            <summary>
            Gets the number of relations displayed in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowAddNew">
            <summary>
            Gets a value indicating whether a datasource supports adding new records.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SupportsAddNew">
            <summary>
            Gets a value indicating whether to support add new. Use AllowAddNew instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowEdit">
            <summary>
            Gets a value indicating whether a datasource supports editing records.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DirectSaveCellInfo">
            <summary>
            Gets or sets a value indicating whether to save cell values directly into the datasource without moving the current
            record and without calling BeginEdit or EndEdit.
            </summary>
            <remarks>
            The clipboard paste and clipboard deleted functions temporarily raise this
            flag when pasting several rows.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowSetValueOnCurrentItem">
            <summary>
            Gets or sets a value indicating whether the datasource is a DataView and the user edits the contents of a cell
            in the current record, the value will also be set in the underlying record.
            If this is a problem for, e.g. if you want to be able to modify contents of the
            current record from outside after it was switched into edit mode, you can set
            this AllowSetValueOnCurrentItem to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RecordCount">
            <summary>
            Gets the number of records in the datasource. If you are displaying a grid with nested relations, the
            only the record count for the root data source is displayed ignoring any expanded nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BoundColumnsCollectionType">
            <summary>
            Gets or sets if you want to use a class derived from <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>, you should also derive
            a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumnsCollection"/> and set <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BoundColumnsCollectionType"/>.
            </summary>
            <example>
            This sample demonstrates how to implement a derived CustomGridColumn:
            <para/>
            <coderef file="D:\sfgrid\Forum\myboundcolumn\CustomGridColumn.cs" name="CustomGridColumn" lang="C#"><code lang="C#">
                /// <summary>
                /// A specialization of the GridBoundColumn class with additional
                /// functionality.
                /// </summary>
                public class CustomGridColumn : GridBoundColumn, ICloneable
                {
                   private int width;
                   private int widthPercentage;
            <para/>
                   /// <summary>
                   /// Default constructor.
                   /// </summary>
                    public CustomGridColumn()
                    {
                    }
            <para/>
                   public int Width
                   {
                       get { return width; }
                       set { width = value; }
                   }
            <para/>
                   public int WidthPercentage
                   {
                       get { return widthPercentage; }
                       set { widthPercentage = value; }
                   }
            <para/>
                    public CustomGridColumn(PropertyDescriptor prop)
                        : base(prop)
                    {
                    }
            <para/>
                    object ICloneable.Clone()
                    {
                        return base.Clone();
                    }
            <para/>
            <para/>
                }
            <para/>
                [ListBindableAttribute(false)]
                [Editor(typeof(GridBoundColumnsCollectionEditor), typeof(System.Drawing.Design.UITypeEditor))]
                public class CustomGridColumnsCollection : GridBoundColumnsCollection, ICloneable
                {
                    public CustomGridColumnsCollection(GridModelDataBinder table)
                        : base(table)
                    {
                    }
            <para/>
                    public override GridBoundColumn CreateBoundColumn(PropertyDescriptor pd)
                    {
                        return new CustomGridColumn(pd);
                    }
            <para/>
            <para/>
                    /// <summary>
                    /// Creates a new CustomGridColumnsCollection and creates copies of all members in this collection.
                    /// </summary>
                    /// <returns>A CustomGridColumnsCollection object.</returns>
                    public override object Clone()
                    {
                        GridModelDataBinder owner = null;
                        owner = this.Owner as GridModelDataBinder;
                        CustomGridColumnsCollection clone = new CustomGridColumnsCollection(owner);
                        foreach (GridBoundColumn item in this)
                            clone.Add((GridBoundColumn) item); //.Clone());
                        return clone;
                    }
            <para/>
                    /// <overload>
                    /// Gets a specified CustomGridColumn in the CustomGridColumnsCollection.
                    /// </overload>
                    /// <summary>
                    /// Gets a specified CustomGridColumn in the CustomGridColumnsCollection.
                    /// </summary>
                    public new CustomGridColumn this[int index]
                    {
                        get
                        {
                            return (CustomGridColumn) base[index];
                        }
                    }
            <para/>
                    /// <summary>
                    /// Gets a specified CustomGridColumn in the CustomGridColumnsCollection.
                    /// </summary>
                    public new CustomGridColumn this[string columnName]
                    {
                        get
                        {
                            return (CustomGridColumn) base[columnName];
                        }
                    }
            <para/>
                    /// <summary>
                    /// Gets a specified CustomGridColumn in the CustomGridColumnsCollection.
                    /// </summary>
                    public new CustomGridColumn this[PropertyDescriptor propDesc]
                    {
                        get
                        {
                            return (CustomGridColumn) base[propDesc];
                        }
                    }
                }</code></coderef>
            <para/>
            <coderef file="D:\sfgrid\Forum\myboundcolumn\SyncFusionBoundGrid.cs" name="SyncFusionBoundGrid" lang="C#"><code lang="C#">
                public class SyncFusionBoundGrid : GridDataBoundGrid
                {
                   /// <summary>
                   /// Default constructor.
                   /// </summary>
                    public SyncFusionBoundGrid() : base()
                   {
                        GridModelDataBinder.BoundColumnsCollectionType = typeof(CustomGridColumnsCollection);
                   }
            <para/>
                   /// <summary>
                   /// A collection of grid bound columns. This property is overridden so
                   /// that the type used to define a grid bound column is a specialized
                   /// version.
                   /// </summary>
                   [ Browsable(false), DesignerSerializationVisibilityAttribute( DesignerSerializationVisibility.Hidden ) ]
                   public override GridBoundColumnsCollection GridBoundColumns
                   {
                       get
                       {
                           return base.GridBoundColumns;
                       }
                       set
                       {
            <para/>
                           base.GridBoundColumns = value;
                       }
                   }
            <para/>
                    /// <summary>
                    /// A collection of grid bound columns. This property is overridden so
                    /// that the type used to define a grid bound column is a specialized
                    /// version.
                    /// </summary>
                    [ DesignerSerializationVisibilityAttribute( DesignerSerializationVisibility.Content ) ]
                    [ LocalizableAttribute(true) ]
                    [ Description( "Manages the columns to be displayed in the GridDataBoundGrid." ) ]
                    [ Category( "Data" ) ]
                    [ RefreshProperties( RefreshProperties.All ) ]
                    [ Editor( typeof(GridBoundColumnsCollectionEditor), typeof(UITypeEditor) ) ]
                    public CustomGridColumnsCollection CustomGridColumns
                    {
                        get
                        {
                            return base.GridBoundColumns as CustomGridColumnsCollection;
                        }
                        set
                        {
            <para/>
                            base.GridBoundColumns = value;
                        }
                    }
                }</code></coderef>
            <para/>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OptimizeListChangedEvent">
            <internalonly/>
            <summary>Gets or sets a value indicating whether OptimizeListChangedEvent. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ForceUpdateAfterListChangedEvent">
            <internalonly/>
            <summary>Gets or sets a value indicating whether ForceUpdateAfterListChangedEvent. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ErrorMessage">
            <summary>
            Gets the error message of the last error.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.HasError">
            <summary>
            Gets a value indicating whether an error occurred in the last save operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.Exception">
            <summary>
            Gets the exception for the last save operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.InEndEdit">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EndEdit"/> has been called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AddNewForceItemChangedEventHack">
            <internalonly/>
            <summary>Gets or sets a value indicating whether add new ForceItemChangedEvent hack. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.InCancelEdit">
            <exclude/>
            <summary>Gets a value indicating whether the current edit operation is being cancelled.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EnableEdit">
            <summary>
            Gets or sets a value indicating whether the grid supports editing records if the underlying datasource
            allows it. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowEdit"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EnableAddNew">
            <summary>
            Gets or sets a value indicating whether the grid supports editing records if the underlying datasource
            allows it. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowAddNew"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsDirty">
            <summary>
            Gets a value indicating whether there are pending changes to the current record.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsEditing">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BeginEdit"/> has been called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsAddNew">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AddNew"/> has been called.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EditModeChanged">
            <summary>
            Occurs when <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BeginEdit"/>, <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EndEdit"/>, <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CancelEdit"/>, or <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AddNew"/> is called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentPosition">
            <summary>
            Gets or sets the zero-based position of the current record in the datasource.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SavedPosition">
            <summary>
            Gets the last position before <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentPosition"/> was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentRowIndex">
            <summary>
            Gets the row index in the grid for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentPosition"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SavedRowIndex">
            <summary>
            Gets the row index in the grid for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SavedPosition"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsAppendRow">
            <summary>
            Gets a value indicating whether the grid's current row is positioned at the append row (if any).
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentPositionChanged">
            <summary>
            Occurs when the current record position in the datasource is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowRemove">
            <summary>
            Gets a value indicating whether the datasource allows removing records.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.EnableRemove">
            <summary>
            Gets or sets a value indicating whether the grid supports removing records if the underlying datasource
            allows it. See <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AllowRemove"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DataSource">
            <summary>
              <para>Gets or sets the datasource that the gridModel is displaying data for.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DataMember">
            <summary>
              <para>Gets or sets the specific list in a <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.DataSource"/> for which the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/>
            control
            displays a gridModel.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GridBoundColumns">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> control.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GridBoundColumnsChanged">
            <summary>
            Occurs when columns have been added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.Site">
            <summary>
            Gets or sets Property Site (ISite)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.InternalColumns">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> control.
            This can be either the columns specified by the user or if no columns were specified it returns all
            columns that were automatically propagated from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BindingContext">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BindingContext"/> for this object. You can assign a <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BindingContext"/>
            from a parent form to this property.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DataSourceChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DataSource"/> property has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RecordsRemoved">
            <summary>
            Occurs after records are removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsSuspendBinding">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SuspendBinding"/> was called.
            </summary>
            <remarks>
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.SuspendBinding"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ResumeBinding"/> are two methods that allow the
            temporary suspension and resumption of data binding. You would typically suspend data binding
            if you want to make several changes to the datasource without immediately updating the grid
            after each change.
            <para/>
            For example, if you want to clear out all the records in your data set and refill it with its original
            data, you can improve performance of this operation substantially if the grid does not need to
            immediately reflect every row change while the data set is filled.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.InRowChanged">
            <summary>
            Gets a value indicating whether in row changed. True while in <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.OnRowChanged(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ItemChanged">
            <summary>
            Occurs when contents of a record have changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RowChanged">
            <summary>
            Occurs when contents of a record have changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DefaultCurrentRecordItemChangedBehavior">
            <summary>
            Gets or sets the default behavior when the grid is notified from the underlying IBindingList
            that the data for the current record are changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentCellListItemChanged">
            <summary>
            Occurs when the grid is notified from the underlying IBindingList and
            lets you dynamically define the behavior how to resolve conflict with
            pending changes in current record.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.BindingListChanged">
            <summary>
            Occurs before the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder"/> processes the <see cref="E:System.ComponentModel.IBindingList.ListChanged"/> event
            of an attached source list.
            </summary>
            <remarks>
            The reason for firing this event is to give a programmer chance to react to a <see cref="E:System.ComponentModel.IBindingList.ListChanged"/>
            event before the binder since there is otherwise no order guaranteed when an IBindingList raises a ListChanged
            event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.IsDesignMode">
            <summary>
            Gets or sets a value indicating whether is design mode. True if component is designed inside a designer; False otherwise.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.DoNotDisposeLists">
            <internalonly/>
            <summary>Gets or sets a value indicating whether DoNotDisposeLists. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetChildListHandler">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListUtil">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> class holds information about a hierarchy level in a
            grid. A grid has at least one root level. If there are nested relations inside the grid
            the grid will hold an additional GridHierarchyLevel for each relation.
            </summary>
            <remarks>
            The grid provides access to <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/> though the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.RootHierarchyLevel"/>
            property and <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetHierarchyLevel(System.String)"/> and <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.AddRelation(System.String)"/> functions
            of a <see cref="P:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid.Binder"/>. <para/>
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.HierarchyLevelCount"/> will provide you with number of hierarchy levels.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.OnGridBoundColumnsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.GridBoundColumnsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.GetColCount">
            <summary>
            Returns the number of columns that this relation displays in the grid. If a record
            is broken into several rows, the column count will be the maximum column count for all
            rows in the record.
            </summary>
            <returns>The number of columns that this relation displays in the grid.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.RowFieldToField(System.Int32,System.Int32)">
            <summary>
            Calculates a zero-based field number that can be used as an index in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.InternalColumns"/> based
            on the zero-based row index in the record and the zero-based field column in the grid.
            </summary>
            <param name="row">Zero-base row index.</param>
            <param name="fieldNum">Zero-based field index in the grid. If you have an absolute column index,
            you should first convert it with <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.ColIndexToField(System.Int32)"/>.</param>
            <returns>A zero-based field number that can be used as an index to access a <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/>
            in <see cref="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.InternalColumns"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.FieldToRowField(System.Int32,System.Int32@)">
            <summary>
            Calculates the zero-based row index in the record and the zero-based field column in the grid base on a
            zero-based field number that can be used as an index in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.InternalColumns"/>.
            </summary>
            <param name="fieldNum">A field number that can be used as an index in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.InternalColumns"/>.</param>
            <param name="row">Returns the zero-based row index in the record.</param>
            <returns>Returns the zero-based field number in the grid. You can call <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.FieldToColIndex(System.Int32)"/>
            to get the associated column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.LayoutColumns(System.String[])">
            <summary>
            Rearranges how columns are displayed in the grid and allows you to specify covered cells
            and / or break records into several rows displayed in the grid.
            </summary>
            <param name="mappingNames">A string array with field names. <para/>
            The following strings have a specific meaning: <para/>
            "-" specifies a covered cell.<para/>
            "." indicated line break inside the record. Subsequent fields will be displayed in another row.<para/>
            "" specifies an empty "whitespace" column.<para/>
            Other than these, you should use the same mapping names that you also use with <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects.
            </param>
            <example>
            See the "MultiRowRecord" and "ExpandGrid" examples for sample code.
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates a new grid column for the specified <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="pd">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> for this column.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.RowStyle">
            <summary>
            Gets the appearance of rows that belong to this relation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.HeaderStyle">
            <summary>
            Gets the appearance of column headers for rows that belong to this relation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.Relation">
            <summary>
            Gets Relation descriptor for sublevel
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.InternalColumns">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects for this relation.
            This can be either the columns specified by the user or if no columns were specified, it returns all
            columns that were automatically propagated from the datasource.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.GridBoundColumns">
            <summary>
            Gets or sets a collection of <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundColumn"/> objects in the <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataBoundGrid"/> control.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.GridBoundColumnsChanged">
            <summary>
            Occurs when columns have been added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.LevelIndex">
            <summary>
            Gets the zero-based index for this hierarchy level.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.RowCountPerRecord">
            <summary>
            Gets Number of rows per record.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel.ShowHeaders">
            <summary>
            Gets or sets a value indicating whether headers for this relation should be shown or hidden.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridBoundRecordState">
            <summary>
            Holds information about
            the hierarchy level and the record displayed at a specific row. Each row in the grid is associated with a
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridBoundRecordState"/>. Use the <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetRecordStateAtRowIndex(System.Int32)"/> to
            get access to state information of a row.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.Parent">
            <summary>
            Gets a reference to the record state of the parent node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.Table">
            <summary>
            Gets a reference to the list this record belongs to. (E.g. DataRowView when you browse a DataTable).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.ListManager">
            <summary>
            Gets a reference to the ListManager for the <see cref="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.Table"/> this record belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.Position">
            <summary>
            Gets the zero-based record index in the the list this row belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.RowIndexInRecord">
            <summary>
            Gets the zero-based row index within a record if the record spans over multiple rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.Expanded">
            <summary>
            Gets a value indicating whether this node is expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.ChildList">
            <summary>
            Gets a reference to the child list for this node. (E.g. DataRowView when you browse a DataTable).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.HasChildList">
            <summary>
            Gets a value indicating whether this node has any children.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.LevelIndex">
            <summary>
            Gets the zero-based index for the hierarchy level. Use <see cref="M:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.GetHierarchyLevel(System.String)"/>
            to get access to the related <see cref="T:Syncfusion.Windows.Forms.Grid.GridHierarchyLevel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridBoundRecordState.ChildCount">
            <summary>
            Gets the number of child records for this node.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventHandler">
            <summary>
            A method that represents a handler for the <see cref="E:Syncfusion.Windows.Forms.Grid.GridModelDataBinder.CurrentCellListItemChanged"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventArgs">
            <summary>
            Lets you dynamically define the behavior when the grid is notified from the underlying IBindingList
            that the data for the current records are changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventArgs.#ctor(System.Int32,System.Boolean,Syncfusion.Windows.Forms.Grid.GridCurrentCell,Syncfusion.Windows.Forms.Grid.GridCurrentRecordItemChangedBehavior)">
            <summary>
            Initializes the event arguments.
            </summary>
            <param name="recordIndex">The current record position.</param>
            <param name="isEditing">Indicates if current record was edited by user.</param>
            <param name="gcc">A reference to the GridCurrentCell, lets you check gcc.IsModified, for example.</param>
            <param name="currentRecordItemChangedBehavior">Specifies how the grid should resolve this conflict.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventArgs.RecordIndex">
            <summary>
            Gets the current record position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventArgs.IsEditing">
            <summary>
            Gets a value indicating whether current record was edited by user.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventArgs.CurrentCell">
            <summary>
            Gets a reference to the GridCurrentCell, lets you check CurrentCell.IsModified, for example.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridCurrentCellListItemChangedEventArgs.CurrentRecordItemChangedBehavior">
            <summary>
            Gets or sets how the grid should resolve this conflict.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl">
            <summary>
               Provides a <see cref="T:Syncfusion.Windows.Forms.RecordNavigationControl"/> with support for a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl"/>.
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl"/> and associates it with a grid.
            </summary>
            <param name="gridControl">The grid to be displayed in this record navigation control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.WireGrid(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Implements hooks with the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> for current cell movement.
            </summary>
            <param name="gridControl">The grid control to listen to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.UnwireGrid(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Reset hooks with the specified <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
            <param name="gridControl">The grid control to listen to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.CreateNewControl(System.Int32,System.Int32,System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Creates a new control for the specified splitter pane.
            </summary>       
            <param name="row">The row in a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <param name="column">The column in a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <param name="mainControl">The control in the first splitter pane.</param>
            <param name="parent">A parent control. Can be a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <returns>A new instance of <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.DisposeControl(System.Int32,System.Int32,System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Hides or disposes the control for the specified splitter pane.
            </summary>      
            <param name="row">The row in a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <param name="column">The column in a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
            <param name="control">The control in the splitter pane that should be hidden.</param>
            <param name="parent">A parent control. Can be a <see cref="T:Syncfusion.Windows.Forms.SplitterControl"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.RowIndexToRecord(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Int32)">
            <summary>
            Calculates the one-based record displayed at a specific row. 
            </summary>
            <param name="grid">A reference to the grid.</param>
            <param name="rowIndex">The row index.</param>
            <remarks>
            When the grid has more than one hierarchy level, the record
            in the root level will be returned.
            </remarks>
            <returns>
            The one-based record (as displayed in the record navigation bar) for the given row index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.RecordToRowIndex(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Int32)">
            <summary>
            Calculates the first row in the grid for a one-based record index. 
            </summary>
            <param name="grid">A reference to the grid.</param>
            <param name="record">The one-based record. When the grid has more than one hierarchy level, only the record
            for the root level can be specified.</param>
            <returns>Row index.</returns>
            <remarks>
            The first row index for the specified record.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.OnCurrentRecordChanging(Syncfusion.Windows.Forms.CurrentRecordEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.Site">
            <override/>
            <summary>Gets or sets the site of the control.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.GridControl">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that is displayed in the record navigation pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that the user drags onto it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.EnabledArrowColor">
            <summary>
            Gets or sets the color of arrows in enabled buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.DisabledArrowColor">
            <summary>
            Gets or sets the color of arrows in disabled buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.ButtonLook">
            <summary>
            Gets or sets the button look for the arrow buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.GridOfficeScrollBars">
            <summary>
            Gets or sets the Office like scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.HSplitPos">
            <summary>
            Gets or sets the horizontal splitter position in percentages of the splitter control's width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.Label">
            <summary>
            Gets or sets the label to be displayed before the record field textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.MaxLabel">
            <summary>
            Gets or sets an optional maximum label (e.g. "of 1000").
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.MaxRecord">
            <summary>
             Gets or sets the maximum record position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.MinRecord">
            <summary>
             Gets or sets the minimum record position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.NavigationBarWidth">
            <summary>
            Gets or sets the width of the navigation bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.MinRepeatClickDelay">
            <summary>
            Gets / sets the shortest interval for firing scroll event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.NavigationButtons">
            <summary>
            Gets or sets the arrow button that should be shown in an arrow bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.AllowAddNew">
            <summary>
            Indicates whether adding new records is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.NavigationBarBackColor">
            <summary>
            Gets or sets the backcolor of the navigation bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.Office2007ScrollBars">
            <summary>
            Toggles between standard and Office2007 scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.Office2007ScrollBarsColorScheme">
            <summary>
            Gets or sets the style of Office2007 scroll bars
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.Office2010ScrollBarsColorScheme">
            <summary>
            Gets or sets the style of Office2007 scroll bars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.RepeatClickDelay">
            <summary>
            Gets / sets the number of Milliseconds to wait before repeatedly firing scroll event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.ShowHorizontalScrollBar">
            <summary>
            Toggles visibility of the Horizontal scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.ShowToolTips">
            <summary>
            Indicates whether ToolTips are being shown for tabs that have ToolTips set on
            them.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.ShowVerticalScrollBar">
            <summary>
            Toggles visibility of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.SplitBars">
            <summary>
            Gets or sets a value indicating what split behavior is supported. Rows, Columns or Both.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.VSplitPos">
            <summary>
            Gets or sets the vertical splitter position in percentages of the splitter control's height.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridRecordNavigationControl.ThemesEnabled">
            <summary>
            Gets / sets whether the control should be drawn using Windows XP Themes if available.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionMarkerLocation.None">
            <summary>
            Represents None
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionMarkerLocation.Default">
            <summary>
            Represents Default
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionMarkerLocation.Top">
            <summary>
            Represents Top
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridSelectionMarkerLocation.Left">
            <summary>
            Represents Left
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPaintExcelLikeSelection">
            <summary>
            Helper class for drawing of Excel-like selection frame.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintExcelLikeSelection.ToString">
            <override/>
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintExcelLikeSelection.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a GridPaintExcelLikeSelection and attaches it to the grid.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintExcelLikeSelection.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPaintExcelLikeSelection.DrawSelectionFrame(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Drawing.Graphics,System.Boolean,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog">
            <summary>
            A find and replace dialog that can be used to search cells within a grid. The dialog
            communicates with the grid through the <see cref="T:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink"/> interface.
            </summary>
            <remarks>
            See the  <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink"/> for an example of how to enable find and
            replace support for a grid.
            <para/>
            If you want to find and replace in the grid without displaying this dialog,
            you should instantiate a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink"/> object and call its
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Find(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)"/> or <see cref="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Replace(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)"/> \
            method. <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.#ctor">
            <summary>
            Disallow explicit construction of this dialog. Use <see cref="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.Instance"/>
            instead.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.OnOptionsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.OptionsChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.SetActiveSinkIfVisible(Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink)">
            <summary>
            Register the current target of find and replace operations. Call this
            from your controls <see cref="E:System.Windows.Forms.Control.Enter"/> event handler.
            </summary>
            <param name="sink">The new target for find and replace operations.</param>
            <remarks>
            The method checks if there is an active dialog displayed. Otherwise,
            the method will have no effect.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.ResetFindLocation">
            <summary>
            Gets or sets current selection in your current find and replace target control. For a 
            grid, this should be a GridRangeInfo.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.AddToSearchedList(System.String)">
            <summary>
            Adds the string to the search list of the find what combo box.
            </summary>
            <param name="str">The search string to be added.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.OnHandleDestroyed(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.OnTextNotFound(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.TextNotFound"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.OnReachedStartingPoint(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.ReachedStartingPoint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.FindNext">
            <summary>
            Find Next occurrence of string.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.SetState(Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink,System.String,System.Boolean)">
            <summary>
            Initializes the dialog.
            </summary>
            <param name="view">The target for find / replace operations.</param>
            <param name="str">The text to be shown in find text box.</param>
            <param name="bReplace">Specifies if dialog should be shown in find-only or replace mode.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.Instance">
            <summary>
            Gets an instance of the find replace dialog. Creates a single
            shared instance if necessary.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.TextSearched">
            <summary>
            Gets or sets the text to be searched.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.Options">
            <summary>
            Gets or sets show or hide various dialog elements.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.OptionsChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.Options"/> property has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.ActiveSink">
            <summary>
            Gets or sets the current target of find and replace operations.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.TextNotFound">
            <summary>
            Occurs when the find text was not found.
            </summary>
            <remarks>
            Set e.Cancel = True if you do not want to display the
            default "not found" message box or if you want to display
            a customized dialog.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.ReachedStartingPoint">
            <summary>
            Occurs when the find operation reaches the starting point again.
            </summary>
            <remarks>
            Set e.Cancel = True if you do not want to display the
            default "reached starting point" message box or if you want to display
            a customized dialog.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.ShowReplaceButton">
            <summary>
            Gets or sets a value indicating whether the "Replace" button should be visible. Set this false
            if you called <see cref="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog.SetState(Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink,System.String,System.Boolean)"/> to show dialog in find-only mode and do not
            want users to give a choice to switch to replace mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs">
            <summary>
            Provides information about the find and replace dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs.#ctor(System.String,System.String,Syncfusion.Windows.Forms.Grid.GridFindTextOptions,System.Object)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs"/> with options for a find or replace operation.
            </summary>
            <param name="findString">The text to be searched.</param>
            <param name="replaceString">The replacement text.</param>
            <param name="options">Search criteria.</param>
            <param name="locationInfo">Information about the current selection. If target is a grid control,
            this should be of type <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs.FindString">
            <summary>
            Gets or sets the text to be searched.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs.ReplaceString">
            <summary>
            Gets or sets the replacement text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs.Options">
            <summary>
            Gets or sets Options. Search criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs.LocationInfo">
            <summary>
            Gets or sets information about the current selection. If target is a grid control,
            this is of type <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogOptions">
            <summary>
            Options used for customizing <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog"/>:
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogOptions.None">
            <summary>
            Represents None.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogOptions.ShowMatchCase">
            <summary>
            Show Match Case check box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogOptions.ShowMatchWholeCell">
            <summary>
            Show Match Case check box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogOptions.ShowSearchUp">
            <summary>
            Show Search Up check box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogOptions.ShowSearchSelection">
            <summary>
            Show Selection combo box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogOptions.All">
            <summary>
            Default setting.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink">
            <summary>
            Provides a default implementation of a <see cref="T:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink"/>
            for a grid control.
            </summary>
            <example>
            The following example demonstrates how to enable a grid control for find and replace support:
            <code lang="C#">
            GridFindReplaceDialogSink findReplaceDialogSink;
            <para/>
            public GridFindReplaceDialogSink GridFindReplaceDialogSink
            {
                get
                {
                    if (findReplaceDialogSink == null)
                    {
                        findReplaceDialogSink = new GridFindReplaceDialogSink(this);
                    }
                    return findReplaceDialogSink;
                }
            }
            <para/>
            protected override void OnCurrentCellActivated(EventArgs e)
            {
                GridFindReplaceDialog.ResetFindLocation();
                base.OnCurrentCellActivated(e);
            }
            <para/>
            protected override void OnControlGotFocus()
            {
                GridFindReplaceDialog.SetActiveSinkIfVisible(GridFindReplaceDialogSink);
                base.OnControlGotFocus();
            }
            <para/>
            // to show the dialog:
            GridFindReplaceDialog frDialog = GridFindReplaceDialog.Instance;
            frDialog.SetState(grid.GridFindReplaceDialogSink, "", false);
            frDialog.Show();
            </code>
            <code lang="VB">
            Dim findReplaceDialogSink As GridFindReplaceDialogSink
            <para/>
            <para/>
            Public ReadOnly Property GridFindReplaceDialogSink() As GridFindReplaceDialogSink
                Get
                    If findReplaceDialogSink Is Nothing Then
                        findReplaceDialogSink = New GridFindReplaceDialogSink(Me)
                    End If
                    Return findReplaceDialogSink
                End Get
            End Property
            <para/>
            <para/>
            Protected Overrides Sub OnCurrentCellActivated(e As EventArgs)
                GridFindReplaceDialog.ResetFindLocation()
                MyBase.OnCurrentCellActivated(e)
            End Sub 'OnCurrentCellActivated
            <para/>
            <para/>
            Protected Overrides Sub OnControlGotFocus()
                GridFindReplaceDialog.SetActiveSinkIfVisible(GridFindReplaceDialogSink)
                MyBase.OnControlGotFocus()
            End Sub 'OnEnter
            <para/>
            ' to show the dialog:
            Dim frDialog As GridFindReplaceDialog = GridFindReplaceDialog.Instance
            frDialog.SetState(grid.GridFindReplaceDialogSink, "", False)
            frDialog.Show()
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink">
            <summary>
            Provides an interface that the <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialog"/> uses
            to communicate with its target control for find and replace operations. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink"/>
            for an implementation for a regular grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink.Find(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)">
            <summary>
            Finds the text with the specified criteria.
            </summary>
            <param name="e">Text and search criteria.</param>
            <returns>The location info (typically a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>) or NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink.Replace(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)">
            <summary>
            Replaces the text with the specified criteria.
            </summary>
            <param name="e">Text and search criteria.</param>
            <returns>The location info (typically a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>) or NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink.ReplaceAll(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)">
            <summary>
            Replace the text in all cells with the specified criteria.
            </summary>
            <param name="e">Text and search criteria.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink.ShowInfoMessage(System.String,System.String)">
            <summary>
            Displays a warning message.
            </summary>
            <param name="msg">The message text.</param>
            <param name="category">The dialog title.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridFindReplaceDialogSink.GetScreenRect(System.Object)">
            <summary>
            Returns the screen bounds for the selection object. The find and replace dialog
            calls this method to ensure that it does not hide the current selected text after
            a successful find operation.
            </summary>
            <param name="lc">The location object, typically a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</param>
            <returns>The bounds in screen coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Constructs a GridFindReplaceDialogSink and associates it with a grid control.
            </summary>
            <param name="grid">The grid control this object operates on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Find(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)">
            <summary>
            Finds the text with the specified criteria.
            </summary>
            <param name="e">Text and search criteria.</param>
            <returns>The location info (typically a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>) or NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.InternalFind(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)">
            <summary>
            Internals the find.
            </summary>
            <param name="find">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs"/> instance containing the event data.</param>
            <returns>returns object</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.FindInRange(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs,Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Finds the in range.
            </summary>
            <param name="find">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs"/> instance containing the event data.</param>
            <param name="selRange">The sel grid range.</param>
            <param name="start">The start grid range.</param>
            <param name="end">The end grid range.</param>
            <returns>returns GridRangeInfo</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.GetNextCell(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Gets the next cell.
            </summary>
            <param name="rg">The grid range info.</param>
            <param name="nRow">The row index</param>
            <param name="nCol">The col index.</param>
            <param name="bSortByRow">if set to <c>true</c> [b sort by row].</param>
            <param name="searchUp">if set to <c>true</c> [search up].</param>
            <returns>returns the boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.GetScreenRect(System.Object)">
            <summary>
            Returns the screen bounds for the selection object. The find and replace dialog
            calls this method to ensure that it does not hide the current selected text after
            a successful find operation.
            </summary>
            <param name="lc">The location object, typically a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>.</param>
            <returns>The bounds in screen coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Replace(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)">
            <summary>
            Replaces the text with the specified criteria.
            </summary>
            <param name="e">Text and search criteria.</param>
            <returns>The location info (typically a <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/>) or NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.ReplaceAll(Syncfusion.Windows.Forms.Grid.GridFindReplaceEventArgs)">
            <summary>
            Replace the text in all cells with the specified criteria.
            </summary>
            <param name="e">Text and search criteria.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.ShowInfoMessage(System.String,System.String)">
            <summary>
            Displays a warning message.
            </summary>
            <param name="msg">The message text.</param>
            <param name="category">The dialog title.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Operation.None">
            <summary>
            Represents None
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Operation.Find">
            <summary>
            Represents Find
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Operation.Replace">
            <summary>
            Represents Replace
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFindReplaceDialogSink.Operation.ReplaceAll">
            <summary>
            Represents ReplaceAll
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridAwareTextBox">
            <summary>
            A derived text box that dynamically displays and edits the contents of the 
            CurrentCell of a grid. 
            </summary>
            <remarks>
            You can drop this text box anywhere on a form, and use its WireGrid method to 
            bind it to the CurrentCell of a grid. So, any changes in the text box
            are reflected in the CurrentCell of the grid, and any changes to the CurrentCell
            are reflected in the text box.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridAwareTextBox"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.WireGrid(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Use to bind this text box to the CurrentCell of a GridControlBase.
            </summary>
            <param name="grid">The GridControlBase whose CurrentCell is being bound.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.UnwireGrid(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Removes the binding between this text box and the CurrentCell of the grid.
            </summary>
            <param name="grid">The GridControlBase whose CurrentCell is being bound.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.GridCurrentCellActivated(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellActivated"/> event of the <see cref="N:Syncfusion.Windows.Forms.Grid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
            <remarks>
            The GridCurrentCellActivated is called when the user enters into the grid cell.
            The default behavior is to set the text in the GridAwareTextBox to the current text that is stored in the
            cell's GridStyleInfo object. Override this method to modify this behavior or to add additional actions when
            the user enters the grid cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.GridCurrentCellChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellChanged"/> event of the <see cref="N:Syncfusion.Windows.Forms.Grid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
            <remarks>
            The GridCurrentCellChanged is called when the user modifies the text in the grid cell.
            The default behavior is to set the text in the GridAwareTextBox to the ControlText from the CurrentCell renderer.
            Override this method to modify this behavior or to add additional actions when
            the user types the text within the grid cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.GridCurrentCellRejectedChanges(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.CurrentCellRejectedChanges"/> event of the <see cref="N:Syncfusion.Windows.Forms.Grid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
            <remarks>
            The GridCurrentCellRejectedChanges is called when the user presses the escape while editing a cell in the grid.
            The default behavior is to reset the text in the GridAwareTextBox to the current text that is stored in the
            cell's GridStyleInfo object. Override this method to modify this behavior or to add additional actions when
            the user presses escape while editing within the grid cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.SetText(System.String)">
            <summary>
            Sets the Text property of the GridAwareTextBox without raising a TextChanged event.
            </summary>
            <param name="text">The text to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.GetCurrentCell">
            <summary>
            Returns the CurrentCell of the wired grid.
            </summary>
            <returns>The CurrentCell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.OnTextChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to make the grid process the Enter key.
            </summary>
            <param name="e">The KeyEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.Dispose(System.Boolean)">
            <summary>
            Overridden to unwire the grid.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.OnVisibleChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.DisabledBackColor">
            <summary>
            Gets or sets color of the text box background when the grid cell is not editable for some reason.
            </summary>
            <remarks>
            This color is used for the text box backcolor when the current grid cell is not editable,
            or if there is no current grid cell. You can set it to SystemColors.Control to see a 
            a standard gray disabled background.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.EnabledBackColor">
            <summary>
            Gets or sets color of the background of the text box when the current grid cell is editable.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.BackColor">
            <summary>
            Hides the base.BackColor. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.CausesValidation">
            <summary>
            Gets or sets a value indicating whether to cause validation. Force a false setting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridAwareTextBox.Text">
            <summary>
            Force an empty initial string.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel">
            <summary>
            This GridCellModel supports entering formulas in a grid cell. This support is provided
            through the <see cref="P:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.Engine"/> member of this class. Engine is
            a <see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaEngine"/>.
            </summary>
            <remarks>
            The default behavior is that any cell whose CellType is GridFormulaCellModel will
            be interpreted as a formula cell provided the text in the cell starts with '='. 
            So, for such cells you would enter formulas such as
            =A1+A2+A3 or =Sum(A1:A3), an an attempt would be made to parse and compute the entry.
            <para/>
            Alternatively, you can use the <see cref="F:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.formulaChar"/> character
            to specify which cells of CellType GridFormulaCellModel are to be used as formulas.
            You set this formulaChar private property through the class constructor which passes
            this parameter. If you set this value to '\0', every cell of CellType GridFormulaCellModel
            will be treated as a formula.
            <para/>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.RefreshCells(System.Int32,System.Int32)"/> method redraws all the formula cells that depend upon
            a particular cell. This method is called when the user changes a value that affects
            other formula cells.
            <para/>
            The <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)"/> method is where the actual calculations are done,
            if necessary, through calls to the Engine methods. This method also conditionally
            parses the formula only if it has been modified since the previous parse.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.formulaChar">
            <summary>
            Set this field to a particular character such as '=' to conditionally flag a cell
            whose CellType is GridFormulaCellModel as holding a formula. If you do not 
            set this field, then all cells of CellType GridFormulaCellModel that begin with '='
            will be treated as a formula. You set this private field as the call constructor. 
            If you set this value to '\0', every cell of CellType GridFormulaCellModel
            will be treated as a formula.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <overload>
            Initializes a new GridFormulaCellModel object.
            </overload>
            <summary>
            Use this constructor to force all cells of CellType GridFormulaCellModel whose
            text begin with '=' to be regarded as holding formulas.
            </summary>
            <param name="grid">The GridModel using this GridFormulaCellModel.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel,System.Char)">
            <summary>
            Only cells whose contents begin with formulaChar will be treated as a formula.
            Other cells of CellType GridFormulaCellModel will be treated as GridTextBoxCellModel.
            The character formulaChar is ignored for parsing and computing purposes.
            </summary>
            <param name="grid">The GridModel using this GridFormulaCellModel.</param>
            <param name="formulaChar">Any GridFormulaCellModel beginning with this
            character will be treated as a formula. If you set this value to '\0', 
            every cell of CellType GridFormulaCellModel
            will be treated as a formula.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.#ctor(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.Windows.Forms.Grid.GridFormulaEngine,System.Char)">
            <summary>
            Constructor for use with an existing GridFormulaEngine.
            </summary>
            <param name="grid">The GridModel using this GridFormulaCellModel.</param>
            <param name="engine">An existing GridFormulaEngine.</param>
            <param name="formulaChar">Any GridFormulaCellModel beginning with this
            character will be treated as a formula. If you set this value to '\0', 
            every cell of CellType GridFormulaCellModel
            will be treated as a formula.</param>
            <remarks>Use this constructor if you want to use derived GridFormulaCellModel
             and GridFormulaCellRenderer classes that share a single GridFormulaEngine.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.OnModelDeserialization(System.Object,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Called from GridModel implementation of IDeserializationCallback.OnDeserialization.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="model">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> that was deserialized.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the cell model.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the cell model.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.RefreshCells(System.Int32,System.Int32)">
            <summary>
            This method forces any formula cell dependent upon the passed-in cell in the row
            and column to be recomputed. This method is called by the model whenever
            the contents of the passed-in cell is changed. For example, the user changing a
            single non-formula cell may require the recomputing of several additional formula cells. 
            This method triggers the redrawing of these dependent cells.
            </summary>
            <param name="row">Row index of the cell that was modified by the user.</param>
            <param name="col">Column index of the cell that was modified by the user.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.RefreshRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Recalculates every cell that depends upon any cell in the passed-in range.
            </summary>
            <remarks>Calls the Engine.RefreshRange.</remarks>
            <param name="range">GridRangeInfo object to be refreshed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.RecalculateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Recalculates any formula cells in the specified range.
            </summary>
            <remarks>The implementation is delegated to Engine.RecalculateRange.</remarks>
            <param name="range">GridRangeInfo object that specifies the cells to be recalculated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.RecalculateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Recalculates any formula cells in the specified range.
            </summary>
            <remarks>The implementation is delegated to Engine.RecalculateRange.</remarks>
            <param name="range">GridRangeInfo object that specifies the cells to be recalculated.</param>
            <param name="forceCalculations">Determines whether the calculation is performed 
            immediately or delayed until the next time the cell is drawn.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.fromClipboardCut">
            <summary>
            Specifies if the clipboard buffer came from cut operation or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.GetFormattedText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Object,System.Int32)">
            <summary>
            Triggers the parsing and computing of formulas.
            </summary>
            <remarks>
            Overridden to trigger the parsing and computing of formulas. The 
            computed value is returned for non-editing cells. The raw formula
            text is returned when the cell is actively being edited.
            </remarks>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object that holds cell information.</param>
            <param name="value">The value to format.</param>
            <param name="textInfo">textInfo is a hint who is calling, default is GridCellBaseTextInfo.DisplayText.</param>
            <returns>Either the computed value or the raw formula text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.CreateRenderer(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Overridden to return a GridFormulaCellRenderer class.
            </summary>
            <param name="control">The grid control.</param>
            <returns>returns a GridFormulaCellRenderer object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.Engine">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaEngine"/> encapsulates all formula features. Use this object
            to add / remove library functions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel.CalculatingSuspended">
            <summary>
            Gets or sets a value indicating whether formulas are immediately calculated as dependent cells are changed.
            </summary>
            <remarks>Use this property to suspend calculations while a series of changes 
            are made to dependent cells either by the user or programmatically. When the changes are 
            complete, set this property to false, and then call RecalculateRange to recalculate
            the affected range. 
            <para/> 
            The implementation delegates this property to the Engine.CalculatingSuspended property.
            </remarks>
            <example> Use this code to suspend, and then later resume, calculations.
            <code lang="C#">
                   //suspend calculations...
                   GridFormulaCellModel formulaModel = this.gridControl1.CellModels["FormulaCell"] as GridFormulaCellModel;
                   formulaModel.CalculatingSuspended = true;
             <para/>       
                   ....
                   //make changes, say to, cells in the GridRangeInfo.Cells(1,1,10,20).
                   ....
            <para/>        
                   //later resume calculations and refresh any cells that depend on GridRangeInfo.Cells(1,1,10,20)
                   GridFormulaCellModel formulaModel = this.gridControl1.CellModels["FormulaCell"] as GridFormulaCellModel;
                   formulaModel.CalculatingSuspended = false;
                   formulaModel.RefreshRange(GridRangeInfo.Cells(1,1,10,20));
             <para/>        
            </code>
            <code lang="VB">
                   'suspend calculations...
                   Dim formulaModel As GridFormulaCellModel = Me.gridControl1.CellModel("FormulaCell") 
                   formulaModel.CalculatingSuspended = True
            <para/>                                        
                   ....
                   'make changes, say to, cells in the GridRangeInfo.Cells(1,1,10,20).
                   ....
            <para/>        
                   'later resume calculations and refresh any cells that depend on GridRangeInfo.Cells(1,1,10,20)
                   Dim formulaModel As GridFormulaCellModel = Me.gridControl1.CellModel("FormulaCell") 
                   formulaModel.CalculatingSuspended = False
                   formulaModel.RefreshRange(GridRangeInfo.Cells(1, 1, 10, 2))
            <para/>        
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer">
            <summary>
            Implements a GridCellRender that supports formulas.
            </summary>
            <remarks>
            See <see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel"/> for a discussion about formula engine
            and customization.
            <para/>
            The following table lists some characteristics about the FormulaCell cell type:
            <para/>
            <list type="table">
                <listheader>
                    <term>Item</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term>CellType</term>
                    <description>FormulaCell</description>
                </item>
                <item>
                    <term>Renderer</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer"/></description>
                </item>
                <item>
                    <term>Model</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaCellModel"/></description>
                </item>
                <item>
                    <term>XP Themes Support</term>
                    <description>NA</description>
                </item>
                <item>
                    <term>Interactive</term>
                    <description>Edit with Text and Formula Input</description>
                </item>
                <item>
                    <term>Control</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxControl"/></description>
                </item>
                <item>
                    <term>Floating Support</term>
                    <description>Both</description>
                </item>
                <item>
                    <term>Base Type</term>
                    <description><see cref="T:Syncfusion.Windows.Forms.Grid.GridTextBoxCellRenderer"/></description>
                </item>
            </list>
            <para/>
            <para/>
            The cell's behavior and appearance can be customized with the following properties of the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> class:
            <para/>
            <list type="table">
                <listheader>
                    <term>PropertyName</term>
                    <description>Description</description>
                </listheader>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AllowEnter"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if pressing the &lt;Enter&gt;-Key should insert a new line into the edited text. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if the cell height should automatically increase when the edited text does not fit into the cell and <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is True. If <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> is False, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.AutoSize"/> will affect the column width. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.BaseStyle"/> (<see cref="T:System.String"/>)</term>
                    <description>The base style for this style instance with default values for properties that are not initialized for this style object. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Borders"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridBordersInfo"/>)</term>
                    <description>Top, left, bottom, and right border settings. (Default: GridBordersInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellAppearance"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellAppearance"/>)</term>
                    <description>Specifies if cell edges shall be drawn raised, sunken, or flat (default). (Default: GridCellAppearance.Flat)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellTipText"/> (<see cref="T:System.String"/>)</term>
                    <description>ToolTip text to be displayed when user hovers mouse over cell. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellType"/> (<see cref="T:System.String"/>)</term>
                    <description>FormulaCell (Default: Text Box)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValue"/> (<see cref="T:System.Object"/>)</term>
                    <description>This property holds the cell value. Although the cell value is typically a string, it can also be any other primitive type such as int, byte, enum, or any custom type that is derived from <see cref="T:System.Object"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> (<see cref="T:System.Type"/>)</term>
                    <description>Specifies the preferred <see cref="T:System.Type"/> for cell values. When you assign a value to the <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/> object, the value will be converted to this type. If the value cannot be converted, <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> will contain error information. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/> (<see cref="T:System.Globalization.CultureInfo"/>)</term>
                    <description>The culture information holds rules for parsing and formatting the cell's value. (Default: null)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Enabled"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if the cell can be activated as current cell or if the cell should be skipped when moving the current cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Error"/> (<see cref="T:System.String"/>)</term>
                    <description>Holds error information if a value could not be converted to the <see cref="T:System.Type"/> specified with <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>. (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloatCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if text can float into the boundaries of a neighboring cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FloodCell"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Gets / sets if this cell can be flooded by a previous cell. (Default: True)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Font"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFontInfo"/>)</term>
                    <description>The font for drawing text. (Default: GridFontInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Format"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the format mask for formatting the cell value. You can specify numeric format strings,
            date format strings or enumeration format strings as discussed in the section "Format Specifiers and Format Providers" of the .NET Framework Developers Guide (see ms-help://MS.VSCC/MS.MSDNVS/cpguide/html/cpconformatspecifiersformatproviders.htm) (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.FormulaTag"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridFormulaTag"/>)</term>
                    <description>A formula tag that is associated with a cell. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HorizontalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment"/>)</term>
                    <description>Specifies horizontal alignment of text in the cell. (Default: GridHorizontalAlignment.Left)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.HotkeyPrefix"/> (<see cref="T:System.Drawing.Text.HotkeyPrefix"/>)</term>
                    <description>Specifies how hot-key prefixes should be displayed. Hot-keys are indicated in text with an '&amp;' (ampersand). When you enable a hot-key prefix, the specific characters can be displayed underlined or regular. The '&amp;' will not be displayed. (Default: HotkeyPrefix.Show)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Specifies an index for an image in the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> of a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: -1)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> (<see cref="T:System.Windows.Forms.ImageList"/>)</term>
                    <description>The <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageList"/> that holds a collection of images. Cells can choose images with the <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ImageIndex"/> property in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>
            instance. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Interior"/> (<see cref="T:Syncfusion.Drawing.BrushInfo"/>)</term>
                    <description> Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a cell's
             background. (Default: SystemColors.Window)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MaxLength"/> (<see cref="T:System.Int32"/>)</term>
                    <description>Limits the number of characters the user can type into the cell. Note: When selecting a text from a choice list or when pasting text, the text can be longer. Additional validation is necessary on your side. (Default: 0)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.MergeCell"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMergeCellDirection"/>)</term>
                    <description>Specifies merge behavior for an individual cell when merging cells feature has been enabled in a <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> with  <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.MergeCellsMode"/>. (Default: GridMergeCellDirection.None)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ReadOnly"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if cell contents can be modified by the user. You can programmatically change Read-only cells by setting <see cref="P:Syncfusion.Windows.Forms.Grid.GridModel.DiscardReadOnly"/> to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Text"/> (<see cref="T:System.String"/>)</term>
                    <description>Gets / sets the value as a string. If a <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/>
            is specified, the text will be parsed and converted to the type specified with
            <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CellValueType"/> using any <see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.CultureInfo"/>
            information.
             (Default: String.Empty)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextColor"/> (<see cref="T:System.Drawing.Color"/>)</term>
                    <description>Lets you specify the color for drawing the cell text. (Default: SystemColors.WindowText)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.TextMargins"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridMarginsInfo"/>)</term>
                    <description>Holds text margins in pixels. When drawing a cell, this specifies the empty area between the
            text rectangle and the client rectangle of the cell without borders and cell buttons. (Default: GridMarginsInfo.Default)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.Trimming"/> (<see cref="T:System.Drawing.StringTrimming"/>)</term>
                    <description>Indicates how text is trimmed when it exceeds the edges of the cell text rectangle. (Default: StringTrimming.Character)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.ValidateValue"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridCellValidateValueInfo"/>)</term>
                    <description>Holds validation rules for cell values that are being checked before any user changes are committed to the grid cell's style object. (Default: NULL)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalAlignment"/> (<see cref="T:Syncfusion.Windows.Forms.Grid.GridVerticalAlignment"/>)</term>
                    <description>Specifies vertical alignment of text in the cell. (Default: GridVerticalAlignment.Top)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.VerticalScrollbar"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text box should show a vertical scrollbar when text is being edited and does not fit in cell. WrapText must be initialized to True. (Default: False)</description>
                </item>
                <item>
                    <term><see cref="P:Syncfusion.Windows.Forms.Grid.GridStyleInfo.WrapText"/> (<see cref="T:System.Boolean"/>)</term>
                    <description>Specifies if text should be wrapped when it does not fit into a single line. (Default: True)</description>
                </item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,Syncfusion.Windows.Forms.Grid.GridCellModelBase)">
            <summary>
            Initializes a new GridFormulaCellRenderer object for the given GridControlBase
            and GridCellModelBase.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that displays this cell renderer.</param>
            <param name="cellModel">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridCellModelBase"/> that holds data for this cell renderer that should
            be shared among views.</param>
            <remarks>References to GridControlBase, 
            and GridCellModelBase will be saved.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer.OnActivated">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer.InitializeControlText(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer.Copy">
            <override/>
            <summary>Called when user initiates ClipboardCopy operation. Used for a single cell only. Returns True if successful; False if failed.</summary>
            <returns>returns False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer.Paste">
            <override/>
            <summary>Called when user initiates ClipboardPaste operation. True if successful; False if failed.</summary>
            <returns>returns False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer.OnValidate">
            <summary>
            This method is called from GridCurrentCell.Validate after GridCurrentCell.Validating event has been
            fired. The default version checks if the active text fits any criteria as specified
            in the style object: It can be parsed into a cell value and meets GridCellValidateValueInfo criteria.
            </summary>
            <returns>
            True if the modified text is valid; False otherwise.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaCellRenderer.ForceEditWhenActivated">
            <summary>
            Gets or sets a value indicating whether GridFormulaCellRenderer should honor the <see cref="P:Syncfusion.Windows.Forms.Grid.GridModelOptions.ActivateCurrentCellBehavior"/>
            and only start editing mode as specified in that setting or if it should ignore that setting and always
            switch into edit mode as soon as it is activated.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaEngine">
            <summary>
            Encapsulates the code required to parse and compute formulas. Hashtable
            properties maintain a Formula Library of functions as well as a list
            of dependent cells.
            <para/>
            You can add and remove library functions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.formulaChar">
            <summary>
            The character that indicates a formula.
            </summary>
            <remarks>
            If this character is not 0, the text of a cell
            must begin with this character if the cell contains
            a formula. Common usage would be to use '=' as the
            character to begin a formula in a cell.
            <para/> 
            This value is normally set through the cell model constructor.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetSheetFamilyItem(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Returns the GridSheetFamilyItem for the specified model. If there was no item registered for 
            the model, a new item is created and cached.
            </summary>
            <param name="model">The grid model.</param>
            <returns>The GridSheetFamilyItem for the specified model.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.AdjustReferences(System.String,System.Int32,System.Int32)">
            <summary>
            Helper method for adjusting formulas.
            </summary>
            <param name="origText">Valid unparsed formula string.</param>
            <param name="rowOffset">Row offset adjusmtent to be made to the origText.</param>
            <param name="colOffset">Column offset adjustment to be made to the origText</param>
            <returns>Unparsed formula string derived from origText by adjusting the row 
            and column references.
            </returns>
            <remarks>
            For example, calling AdjustReferences("=A4+C4", 2, 1) returns the string "=B6+D6".
            This is a helper method that is used to adjust formula references for inserted and
            deleted rows and columns. Normally, you would not need this method unless you 
            are managing formulas outside the GridControl as in a virtual GridControl or a 
            GridDataBoundGrid. This AdjustReferences implementation does not support 
            updating references with sheet names within the formulas.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.AdjustReferences(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Helper method for adjusting formulas.
            </summary>
            <param name="origText">Valid unparsed formula string.</param>
            <param name="rowOffset">Row offset adjusmtent to be made to the origText.</param>
            <param name="colOffset">Column offset adjustment to be made to the origText</param>
            <param name="sheetNameWhereCopied">The name of the sheet where the copy took place.</param>
            <param name="currentSheetName">The name of the sheet where the cell holding origText is located.</param>
            <returns>Unparsed formula string derived from origText by adjusting the row 
            and column references.
            </returns>
            <remarks>
            This AdjustReferences implementation does support 
            updating references with sheet names within the formulas.</remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.fromClipboardCut">
            <summary>
            Specifies if the clipboard buffer came from cut operation or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ToString">
            <summary>
            Displays information on the cell currently being calculated.
            </summary>
            <returns>String with information on the cell currently being calculated.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RemoveGridSheet(System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Removes a sheet from a sheet family.
            </summary>
            <param name="sheetName">The name of the sheet to be removed.</param>
            <param name="grid">The GridModel associated with this sheet.</param>
            <remarks>
            This method only updates the GridFormulaEngine structure with respect to 
            removing a sheet from a family of sheets that has been created 
            using <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RegisterGridAsSheet(System.String,Syncfusion.Windows.Forms.Grid.GridModel,System.Int32)"/>.
             <para/>
            This procedure first renames the sheet to be deleted as #REF using 
            <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ChangeGridSheetName(System.String,System.String,Syncfusion.Windows.Forms.Grid.GridModel)"/>. This has the effect of replacing
            any formula on another sheet that references this deleted sheet with a
            #REF to indicate that formula has a reference problem. It will then 
            call <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.UnregisterGridAsSheet(System.String,Syncfusion.Windows.Forms.Grid.GridModel)"/> with the new name #REF
            to remove the renamed sheet. 
             <para/>
            This method does not remove the grid from your UI structures. For example,
            if you have several grids in a TabControl, calling RemoveGridSheet
            does not remove the grid from any tabpage.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ValidSheetChars">
            <summary>
            Used by the <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ChangeGridSheetName(System.String,System.String,Syncfusion.Windows.Forms.Grid.GridModel)"/> method to decide
            what characters can precede a SheetName in a formula. The default
            value is "+-/*&lt;&gt;=(,:".
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ChangeGridSheetName(System.String,System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Changes a sheetname that was previously registered using <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RegisterGridAsSheet(System.String,Syncfusion.Windows.Forms.Grid.GridModel,System.Int32)"/>. 
            This method iterates through all the cells in all the sheets in the sheet family, swapping all 
            occurrences of the oldName in any formula with the newName.
            </summary>
            <param name="oldName">The old sheet name.</param>
            <param name="newName">The new sheet name.</param>
            <param name="grid">True if the sheet was successfully renamed. If false returns,
            check whether the sheet family already contains the new name.</param>
            <returns>returns boolean value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RegisterGridAsSheet(System.String,Syncfusion.Windows.Forms.Grid.GridModel,System.Int32)">
            <summary>
            Registers a grid so it can be referenced in a formula from another grid.
            </summary>
            <param name="refName">The reference name used to refer to this grid from formulas in other grids.
            </param>
            <param name="model">The GridModel from the grid being registered.
            </param>
            /// <param name="sheetFamilyID">An integer previously created with a call 
            to GridFormulaEngine.CreateSheetFamilyID. This number is used to identify
            the grids as belonging to a particular family of grids. You can only reference
            grids from within the same family.
            </param>
            <remarks>
            Essential Grid supports multisheet references with its formulas. For example, if you
            have two tabpages with a GridControl on each, you can reference cells from the first
            in the second grid. For this to work, both grids need to be registered using this method.
             <para/>
            The syntax for using a sheet reference as part of a formula is to prefix a cell reference 
            with the sheet reference name followed by an exclamation point.
             <para/>
            The formula "= sheet1!A1 + sheet2!C3" would add the value of cell A1 for 
            the grid whose reference name is sheet1 to the value from cell C3 in the grid 
            whose reference name is sheet2.
              <para/>
            </remarks>
            <example> Use this code to use cross sheet references.
            <code lang="C#">
                   //Register 3 grids so cell can be referenced across grids.
                   int sheetfamilyID = GridFormulaEngine.CreateSheetFamilyID();
                   GridFormulaEngine.RegisterGridAsSheet("summary", this.gridControl1.Model, sheetfamilyID);
                   GridFormulaEngine.RegisterGridAsSheet("income", this.gridControl2.Model, sheetfamilyID);
                   GridFormulaEngine.RegisterGridAsSheet("expenses", this.gridControl3.Model, sheetfamilyID);
                   ....
                   //Sample formula usage for cells in gridControl1, the 'summary' grid.
                   //This code sums up some cells from gridControl3, the 'expenses' grid, 
                   //and gridControl2, the 'income' grid.
             <para/>       
                   //Sum the range B2:B8 from the expenses grid.
                   this.gridControl1[3,4].Text = "= Sum(expenses!B2:expenses!B8)";
            <para/>
                   //Sum the range B2:B4 from the income grid.
                   this.gridControl1[4,4].Text = "= Sum(income!B2:income!B4)";
             <para/>       
            </code>
            <code lang="VB">
                   'Register 3 grids so cells can be referenced across grids.
                   Dim sheetfamilyID As Integer = GridFormulaEngine.CreateSheetFamilyID();
                   GridFormulaEngine.RegisterGridAsSheet("summary", Me.gridControl1.Model, sheetfamilyID)
                   GridFormulaEngine.RegisterGridAsSheet("income", Me.gridControl2.Model, sheetfamilyID) 
                   GridFormulaEngine.RegisterGridAsSheet("expenses", Me.gridControl3.Model, sheetfamilyID) 
                   ....
                   'Sample formula usage for cells in gridControl1, the 'summary' grid.
                   'This code sums ups some cells from gridControl3, the 'expenses' grid, 
                   'and gridControl2, the 'income' grid.
              <para/>      
                   'Sum the range B2:B8 from the expenses grid.
                   Me.gridControl1(3,4).Text = "= Sum(expenses!B2:expenses!B8)"
            <para/>
                   'Sum the range B2:B4 from the income grid.
                   Me.gridControl1(4,4).Text = "= Sum(income!B2:income!B4)"
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.CreateSheetFamilyID">
            <summary>
            Returns an integer that is used to identify a family of grids.
            </summary>
            <returns>return integer</returns>
            <remarks>
            Essential Grid supports multisheet references within a family of grids. To use
            this functionality, you employ the method to get a unique identifier for
            the family. Then in the RegisterGridAsSheet method that you call to add grids
            to this family, you pass this unique identifier to mark the grids as belonging
            to this family. You can only cross reference grids within the same family.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.UnregisterGridAsSheet(System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Unregisters a grid so it can no longer be referenced in a formula from another grid.
            </summary>
            <param name="refName">The reference name used to refer to this grid from formulas in other grids.
            </param>
            <param name="model">The grid model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.#ctor(Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Constructor for GridFormulaEngine.
            </summary>
            <param name="gridModel">The GridModel from the underlying grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.Refresh(System.String)">
            <summary>
            Recalculates any cell that depends upon the passed in cell.
            </summary>
            <param name="s">A cell such as A21 or EE31.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RefreshRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Recalculates every cell that depends upon any cell in the passed-in range.
            </summary>
            <remarks>For example, if range is GridRangeInfo(1,1,2,2), and cells (5,6) and
            (12,17) hold formulas that reference the cells in the range, then cells (5,6) 
            and (12,17) will be re-computed as the result of this call.</remarks>
            <param name="range">GridRangeInfo object to be refreshed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RecalculateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo)">
            <summary>
            Recalculates any formula cells in the specified range.
            </summary>
            <remarks>The calculations for non-visible formula cells are performed the next time 
             cell are actually displayed. If you want the calculation performed immediately 
             on cells (visible or not), call the two argument overload of RecalculateRange, 
             passing the forceCalculations argument as True.</remarks>
            <param name="range">GridRangeInfo object that specifies the cells to be recalculated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RecalculateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean)">
            <summary>
            Recalculates any formula cells in the specified range.
            </summary>
            <param name="range">GridRangeInfo object that specifies the cells to be recalculated.</param>
            <param name="forceCalculations">Determines whether the calculations on non-visible
            cells are performed immediately or delayed until the next time the cell is drawn.
            For visible cells, the calculations are done immediately.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RecalculateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,System.Boolean,System.Boolean)">
            <summary>
            Recalculates any formula cells in the specified range.
            </summary>
            <param name="range">GridRangeInfo object that specifies the cells to be recalculated.</param>
            <param name="forceCalculations">Determines whether the calculations on non-visible
            cells are performed immediately or delayed until the next time the cell is drawn.
            For visible cells, the calculations are done immediately.</param>
            <param name="forceParsing">When forceParsing is False, a formula is only 
            re-parsed if FormulaTag is NULL, or FormulaTag.Formula is empty. Otherwise, the existing
            parsed formula in FormulaTag.Formula is used to perform the calculation. The value
            of forceParsing only affects the Engine if forceCalculations is True.</param>
            <remarks> This method does not do anything if <see cref="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.CalculatingSuspended"/> is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RecalculateRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridModel,System.Boolean,System.Boolean)">
            <summary>
            Recalculates any formula cells in the specified range.
            </summary>
            <param name="range">GridRangInfo object that specifies the cells to be recalculated.</param>
            <param name="grd">The GridModel object where the range to be updated is located.</param>
            <param name="forceCalculations">Determines whether the calculations on non-visible
            cells are performed immediately or delayed until the next time the cell is drawn.
            For visible cells, the calculations are done immediately.</param>
            <param name="forceParsing">When forceParsing is False, a formula is only 
            re-parsed if FormulaTag is NULL, or FormulaTag.Formula is empty. Otherwise, the existing
            parsed formula in FormulaTag.Formula is used to perform the calculation. The value
            of forceParsing only affects the Engine if forceCalculations is True.</param>
            <remarks> This method does not do anything if <see cref="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.CalculatingSuspended"/> is True.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.grid_CellsChanged(System.Object,Syncfusion.Windows.Forms.Grid.GridCellsChangedEventArgs)">
            <summary>
            updates the value to perform calcuation for range of cells in RecalculateRange function
            </summary>
            <param name="sender">grid model</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.FormulaErrorStrings">
            <summary>
            String array that holds the strings used in error messages within the Formula Engine.
            </summary>
            <remarks>If you want to change the error messages displayed within the Formula Engine,
            you can set the new strings into the appropriate position in the FormulaErrorStrings 
            array. You should assign your new
            strings to the corresponding positions. 
            </remarks>
            <example>Here is the code that shows position of each string in FormulaErrorStrings:
            <code lang="C#">
                   public string[] FormulaErrorStrings = new string[]
                   {
                       "binary operators cannot start an expression",    //0
                       "cannot parse",                                    //1
                       "bad library",                                    //2
                       "invalid char in front of",                        //3
                       "number contains 2 decimal points",                //4
                       "expression cannot end with an operator",        //5
                       "invalid characters following an operator",        //6
                       "invalid character in number",                    //7
                       "mismatched parentheses",                        //8
                       "unknown formula name",                            //9
                       "requires a single argument",                    //10
                       "requires 3 arguments",                            //11
                       "invalid Math argument",                        //12
                       "requires 2 arguments",                            //13
                       "bad index",                                    //14
                       "too complex",                                    //15
                       "circular reference: ",                            //16
                       "missing formula",                                //17
                       "improper formula",                                //18
                       "invalid expression",                            //19
                       "cell empty"                                    //20
                       "bad formula",                                    //21
                       "empty expression",                                //22
                       "Virtual Mode required - set UsesVirtualDataSource", //23
                       "mismatched string quotes",                     //24
                       "wrong number of arguments",                    //25
                       "invalid arguments",                            //26
                       "iterations do not converge",                   //27
                       "Control named '{0}' is already registered",    //28
                    "Calculation overflow",                            //29
                    "missing operand"                                //30
                    "unknown sheet"                                //30
                   };
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ParseDecimalSeparator">
            <summary>
            Character recognized by the parsing engine as decimal separator for numbers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ParseArgumentSeparator">
            <summary>
            Character recognized by the parsing code as the delimiter for arguments in a named formula's argument list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.IsFormulaValid(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Checks if given string holds a valid formula.
            </summary>
            <param name="text">String to be tested.</param>
            <param name="parsedFormula">Tokenized string holding holding valid parsed formula.</param>
            <param name="errorMessage">Error message from the grid if string is invalid.</param>
            <param name="computedValue">Computed value from parsed formula.</param>
            <returns>True if string holds a valid formula, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.IsFormulaValid(System.String)">
            <summary>
            Checks if the given string holds a valid formula.
            </summary>
            <param name="text">String to be tested.</param>
            <returns>True if string holds a valid formula, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.Parse(System.String)">
            <summary>
            Parses a formula string into a tokenized string.
            </summary>
            <param name="text">The string to be parsed.</param>
            <returns>The parsed string.</returns>
            <remarks> 
             This method accepts a string that holds a formula, like =Sum(A1:B5), 
             and translates this string into a tokenized expression that can
             be computed using the ComputedValue method. Before 
             calling the method, you should set FormulaContextCell
             to properly reflect which cell owns this formula.
             The return value, which is 
             the tokenized string, is referred to as a parsed formula string.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.MarkNamedRanges(System.String@)">
            <summary>
            Replaces namedranges with their values.
            </summary>
            <remarks>
            Accepts a string such as Sin(SumRange), and tokenizes it into
            bqSIN[A1A4a]b which serves as input to ComputedValue.
            </remarks>
            <param name="argList">argList containing named ranges.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.MarkLibraryFormulas(System.String@)">
            <summary>
            Tokenizes all library references.
            </summary>
            <remarks>
            Accepts a string such as Sin(A1+A2), and tokenizes it into
            bqSIN[A1A2a]b which serves as input to ComputedValue.
            </remarks>
            <param name="formula">Formula to be tokenized.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.UpdateDependentNamedRangeCell(System.String)">
            <summary>
            Updates all cells that depend upon the given named range.
            </summary>
            <param name="key">The named range whose cells should be updated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RemoveNamedRangeDependency(System.String)">
            <summary>
            Removes entries in the DependentNamedRangeCells collection for the given named range.
            </summary>
            <param name="key">The named range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.SetNamedRangeDependency(System.String,System.String)">
            <summary>
            Adds a cell to the DependentNamedRangeCells list.
            </summary>
            <param name="key">The named range.</param>
            <param name="cell1">The cell (such as C11 or AJ232).</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.AdjustNameRangesForSize">
            <summary>
            Orders a namedrange collection according to string length.
            </summary>
            <remarks>The GridFormulaEngine needs an ordered list of named ranges 
            to be able to properly parse named ranges. If you manually add named ranges
            to namedranges, then you should call this method afterwards.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.AddNamedRange(System.String,System.String)">
            <summary>
            Adds a named range to the namedranges collection.
            </summary>
            <param name="name">The name of the range to be added.</param>
            <param name="range">The range to be added.</param>
            <returns>True if successfully added, False otherwise.</returns>
            <remarks>
            The range should be a string such as A4:C8.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RemoveNamedRange(System.String)">
            <summary>
            Removes a range from the namedranges collection.
            </summary>
            <param name="name">The name of the range to be removed.</param>
            <returns>True is successfully remove, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.AddFunction(System.String,Syncfusion.Windows.Forms.Grid.GridFormulaEngine.LibraryFunction)">
            <summary>
            Adds a function to the Function Library.
            </summary>
            <param name="name">The name of the function to be added.</param>
            <param name="func">The function to be added.</param>
            <returns>True if successfully removed, False otherwise.</returns>
            <remarks>
            LibraryFunction is a delegate the defines the signature of functions that
            you can add to the Function Library.
            <code>
            public delegate string LibraryFunction(string args);
            </code>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RemoveFunction(System.String)">
            <summary>
            Removes a function from the Function Library.
            </summary>
            <param name="name">The name of the function to be removed.</param>
            <returns>True if successfully removed, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAvg(System.String)">
            <summary>
            Returns the simple average of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the simple average of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeOr(System.String)">
            <summary>
            Returns the inclusive OR of all values treated as logical values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers. Each item in the list is considered True if it is nonzero,
            and False if it is zero.</param>
            <returns>A string holding the OR of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAnd(System.String)">
            <summary>
            Returns the AND of all values treated as logical values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers. Each item in the list is considered True if it is nonzero,
            and False if it is zero.</param>
            <returns>A string holding the AND of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNot(System.String)">
            <summary>
             Flips the logical value represented by the argument.
            </summary>
            <remarks>
               The argument is
            treated as a logical expression with a non-zero value considered True and a zero value considered False.
            </remarks>
            <param name="args">A string holding either a single argument consisting of a 
            cell reference, a formula, or a number. 
            </param>
            <returns>Returns 0 if the argument evaluates to a non-zero value. Otherwise, it returns 1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIf(System.String)">
            <summary>
            Conditionally computes one of two alternatives depending upon a logical expression.
            </summary>
            <remarks>
               The first argument is
            treated as a logical expression with a non-zero value considered True and a zero value considered False.
            The value of only one of the alternatives is computed depending upon the logical expression.
            </remarks>
            <param name="args">A string holding a list of three arguments. 
            </param>
            <returns>Returns a string holding the second argument if the first argument is True (non-zero). Otherwise, it returns a string holding the third argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSum(System.String)">
            <summary>
            Returns the sum of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the sum of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMax(System.String)">
            <summary>
            Returns the maximum value of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the maximum value of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMin(System.String)">
            <summary>
            Returns the minimum value of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the minimum value of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePI(System.String)">
            <summary>
            Returns the number pi.
            </summary>
            <param name="args">Ignored. Can be empty.</param>
            <returns>A string holding the number pi.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSign(System.String)">
            <summary>
            Returns a number indicating the sign of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding a number representing the sign of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePow(System.String)">
            <summary>
            Returns a specified number raised to the specified power.
            </summary>
            <param name="args">String containing two parameters separated by commas:
            the first being base number,
            the second being the exponent.</param>
            <returns>A string holding the value of the base number raised to the exponent.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAcos(System.String)">
            <summary>
            Computes angle whose cosine is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding angle whose cosine is the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAsin(System.String)">
            <summary>
            Computes angle whose sine is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding angle whose sine is the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAtan(System.String)">
            <summary>
            Computes angle whose tangent is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCos(System.String)">
            <summary>
            Computes the cosine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the cosine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSin(System.String)">
            <summary>
            Computes the sine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the sine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCosh(System.String)">
            <summary>
            Computes the hyperbolic cosine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic cosine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSinh(System.String)">
            <summary>
            Computes the hyperbolic sine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic sine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTanh(System.String)">
            <summary>
            Computes the hyperbolic tangent of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCeiling(System.String)">
            <summary>
            Computes the smallest whole number greater than or equal to the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the smallest whole number greater than or equal to the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFloor(System.String)">
            <summary>
            Computes the largest whole number less than or equal to the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the largest whole number less than or equal to the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLn(System.String)">
            <summary>
            Computes the natural logarithm of the value in the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding natural logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLog(System.String)">
            <summary>
            Computes the logarithm of the first value using the second value as the base.
            </summary>
            <param name="argList">A cell reference, formula, or number.</param>
            <returns>A string holding logarithm of the value in the argument using the second argument as the base.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLog10(System.String)">
            <summary>
            Computes the base 10 logarithm of the value in the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding base 10 logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeExp(System.String)">
            <summary>
            Computes e raised to the value of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the e raised to the value of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSqrt(System.String)">
            <summary>
            Computes the square root of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the square root of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAbs(System.String)">
            <summary>
            Computes the absolute value of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the absolute value of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTan(System.String)">
            <summary>
            Computes the tangent the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRand(System.String)">
            <summary>
            Returns an evenly distributed random number greater than or equal
            zero and less than one.
            </summary>
            <param name="args">Ignored. Can be empty.</param>
            <returns>A string holding the random number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSumIf(System.String)">
            <summary>
            Computes the sum of range2
            if the item in the range1 satisfies the condition.
            </summary>
            <param name="range">Range1, condition, range2.</param>
            <returns>The conditional sum.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDb(System.String)">
            <summary>
            Computes the declining balance of an asset.
            </summary>
            <param name="argList"> Delimited string containing the initial cost, 
            salvage value, life of asset, period of calculation, and months in initial year.</param>
            <returns>returns declining balance of an asset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDdb(System.String)">
            <summary>
            Computes the double declining balance of an asset.
            </summary>
            <param name="argList"> Delimited string containing the initial cost, 
            salvage value, life of asset, period of calculation, factor.</param>
            <returns>returns double declining balance of an asset</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFv(System.String)">
            <summary>
            Computes the future value of an investment.
            </summary>
            <param name="argList"> Delimited string containing the rate as percentage per period, 
            number of periods, payment per period, present value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>returns future value of an investment</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIpmt(System.String)">
            <summary>
            Computes the interest payment for a period.
            </summary>
            <param name="argList"> Delimited string containing the rate as percentage per period, the period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Interest payment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIrr(System.String)">
            <summary>
            Computes the internal rate of return of a series of cash flows.
            </summary>
            <param name="argList"> Delimited string containing a range of cells and an initial guess.</param>
            <returns>Internal rate of return.</returns>
            <remarks>
            This IRR calculation uses Newton's method to approximate a root of 
                      f(r) = Sum( values[i]/(1+r)^i) = 0
            where the Sum index is i = 1 to the number of values. The algorithm returns a value if 
            the relative difference between root approximations is less than 1e-5. It fails if this
            accuracy is not attained in 20 iterations.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeXirr(System.String)">
            <summary>
            Computes the internal rate of return of a series of cash flows.
            </summary>
            <param name="argList">values, dates, guess. Values and dates are ranges of cells holding the values and dates.
            Guess is the initial guess. The first date is the the start date for the calculation.</param>
            <returns>Internal rate of return.</returns>
            <remarks>
            This XIRR calculation is similar to IRR except that the values are not equally spaced in time.
             The algorithm returns a value if 
            the relative difference between root approximations is less than 1e-5. It fails if this
            accuracy is not attained in 20 iterations.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIspmt(System.String)">
            <summary>
            Computes the simple interest payment.
            </summary>
            <param name="argList"> Delimited string containing the rate as percentage per period, the period,
            number of periods, and present value.</param>
            <returns>Simple interest payment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMirr(System.String)">
            <summary>
            Computes the modified internal rate of return of a series of cash flows.
            </summary>
            <param name="argList"> Delimited string containing a range of cells, 
            finance interest rate, and a reinvest interest rate.</param>
            <returns>Modified internal rate of return.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNper(System.String)">
            <summary>
            Computes the number of periods in an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, 
            payment per period, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Number of periods.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNpv(System.String)">
            <summary>
            Computes the net present value of an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period  
            and a list of invested values.</param>
            <returns>Net present value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePmt(System.String)">
            <summary>
            Computes the payment for a loan.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, 
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Payment amount.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePpmt(System.String)">
            <summary>
            Computes the principal payment for a period.
            </summary>
            <param name="argList"> Delimited string containing the rate as percentage per period, the period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Principal payment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePv(System.String)">
            <summary>
            Computes the present value of an investment.
            </summary>
            <param name="argList"> Delimited string containing the rate as percentage per period, 
            number of periods, payment per period, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Present value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRate(System.String)">
            <summary>
            Computes the internal rate of return of a series of cash flows.
            </summary>
            <param name="argList"> Delimited string containing a range of cells and an initial guess.</param>
            <returns>Internal rate of return.</returns>
            <remarks>
            This IRR calculation uses Newton's method to approximate a root of 
                      f(r) = Sum( values[i]/(1+r)^i) = 0
            where the Sum index is i = 1 to the number of values. The algorithm returns a value if 
            the relative difference between root approximations is less than 1e-7. It fails if this
            accuracy is not attained in 20 iterations.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSln(System.String)">
            <summary>
            Computes the straight-line depreciation of an asset per period.
            </summary>
            <param name="argList"> Delimited string containing the cost, 
            salvage value, and life.</param>
            <returns>returns Depreciation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSyd(System.String)">
            <summary>
            Computes the sum of years digits depreciation of an asset per period.
            </summary>
            <param name="argList"> Delimited string containing the cost, 
            salvage value, life, and period.</param>
            <returns>Depreciation for the requested period.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeVdb(System.String)">
            <summary>
            Computes the variable declining balance of an asset
            </summary>
            <param name="argList"> Delimited string containing the initial cost, 
            salvage value, life of asset, period of calculation, factor.</param>
            <returns>Variable declining balance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAcosh(System.String)">
            <summary>
            The inverse of Cosh.
            </summary>
            <param name="args">Value >= 1.</param>
            <returns>returns ACosh(value).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAsinh(System.String)">
            <summary>
            The inverse of Sinh.
            </summary>
            <param name="args">The Value.</param>
            <returns>returns ASinh(value).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAtanh(System.String)">
            <summary>
            The inverse of Tanh.
            </summary>
            <param name="args">|Value| &lt; 1.</param>
            <returns>returns ATanh(value).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAtan2(System.String)">
            <summary>
            The ArcTangent of the x and y values. 
            </summary>
            <param name="argList">x_value and y_value.</param>
            <returns>Angle whose tangent is y_value/x_value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCombin(System.String)">
            <summary>
            The number of combinations of a given number of items. 
            </summary>
            <param name="argList">number, number_items.</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDegrees(System.String)">
            <summary>
            Converts radians into degrees.
            </summary>
            <param name="args">Value in radians.</param>
            <returns>returns Degrees.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeEven(System.String)">
            <summary>
            Rounds up to larger in magnitude even number.
            </summary>
            <param name="args">Number to be rounded.</param>
            <returns>Rounded even value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFact(System.String)">
            <summary>
            Factorial of a given number.
            </summary>
            <param name="args">The x args.</param>
            <returns>returns x!.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeOdd(System.String)">
            <summary>
            Rounds up to larger in magnitude odd number.
            </summary>
            <param name="args">Number to be rounded.</param>
            <returns>Rounded odd value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRadians(System.String)">
            <summary>
            Converts degrees into radians.
            </summary>
            <param name="args">Value in degrees.</param>
            <returns>returns Radians.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRound(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRounddown(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRoundup(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSumsq(System.String)">
            <summary>
            Returns the sum of the square of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the sum of the squares of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSumx2my2(System.String)">
            <summary>
            Returns the sum of the differences of squares of the two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the differences of squares.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSumx2py2(System.String)">
            <summary>
            Returns the sum of the sums of squares of the two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the sums of squares.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSumxmy2(System.String)">
            <summary>
            Returns the sum of the squares of the differences between two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the squares of the differences.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.Treat1900AsLeapYear">
            <summary>
            Specifies if 1900 should be treated as Leap Year (Excel Compatibility)
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDate(System.String)">
            <summary>
            Returns the number of days since 01 Jan 1900.
            </summary>
            <param name="argList">Year, month, and day.</param>
            <returns>Number of days.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetSerialDateFromDate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the serial day number for the given date.
            </summary>
            <param name="y">The year of the date.</param>
            <param name="m">The month of the date.</param>
            <param name="d">The day of the date.</param>
            <returns>The serial day number.</returns>
            <remarks>The serial day number is the number of days since January 1, 1900 with the serial
            day number of January 1, 1900 being counted as 1. The serial day number is how Excel stores dates.
            It is useful for including dates in calculations.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetDateFromSerialDate(System.Int32)">
            <summary>
            Gets the date associated with a serial day number.
            </summary>
            <param name="serialDayNumber">The serial day number.</param>
            <returns>The date value.</returns>
            <remarks>The serial day number is the number of days since January 1, 1900 with the serial
            day number of January 1, 1900 being counted as 1. The serial day number is how Excel stores dates.
            It is useful for including dates in calculations.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDatevalue(System.String)">
            <summary>
            Returns the number of days since 01 Jan 1900.
            </summary>
            <param name="argList">Text containing a date.</param>
            <returns>Number of days.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDay(System.String)">
            <summary>
            Returns the day of the serial number date.
            </summary>
            <param name="argList">Serial number date.</param>
            <returns>returns Day.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDays360(System.String)">
            <summary>
            Number of days between 2 dates using 360 day year.
            </summary>
            <param name="argList">Serial number date1, serial number date1, and method.</param>
            <returns>Days between the dates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeHour(System.String)">
            <summary>
            Returns the hour of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>returns Hour.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMinute(System.String)">
            <summary>
            Returns the Minute of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>returns Minute.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSecond(System.String)">
            <summary>
            Returns the second of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>returns Second.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMonth(System.String)">
            <summary>
            Returns the month of the given date.
            </summary>
            <param name="argList">Given time.</param>
            <returns>returns Month.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNow(System.String)">
            <summary>
            Returns the current date and time as a date serial number.
            </summary>
            <param name="argList">value ignored.</param>
            <returns>rCurrent date and time as serial number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeToday(System.String)">
            <summary>
            Returns the current date as a date serial number.
            </summary>
            <param name="argList">value ignored.</param>
            <returns>Current date as date serial number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTime(System.String)">
            <summary>
            Returns a fraction of a day.
            </summary>
            <param name="argList">Hour, minute, and second.</param>
            <returns>Fraction of a day.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTimevalue(System.String)">
            <summary>
            Returns a fraction of a day.
            </summary>
            <param name="argList">Time as a text string.</param>
            <returns>Fraction of a day.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeWeekday(System.String)">
            <summary>
            Day of the week.
            </summary>
            <param name="argList">Serial number date1 and return_type.</param>
            <returns>Days between the dates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeYear(System.String)">
            <summary>
            Returns the year of the given date.
            </summary>
            <param name="argList">Given date.</param>
            <returns>returns Month.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAvedev(System.String)">
            <summary>
            Returns the average deviation of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the average deviation of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeAveragea(System.String)">
            <summary>
            Returns the simple average of all values (including text) listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the simple average of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeGammaln(System.String)">
            <summary>
            Returns the natural logarithm of the gamma function.
            </summary>
            <param name="argList">The value to be evaluated.</param>
            <returns>Returns natural logarithm of gamma function.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeGammadist(System.String)">
            <summary>
            Returns the gamma distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>Returns gamma distribution.</returns>
            <remarks>
            X, alpha and beta should be positive real numbers. Cumulative should be either 
            True if you want to return the value of the distribution function, or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeGammainv(System.String)">
            <summary>
            Returns the inverse of gamma distribution.
            </summary>
            <param name="argList">P, alpha, beta</param>
            <returns>Returns x such that gamma distribution at x is p.</returns>
            <remarks>
            P, alpha and beta should be positive real numbers, with p between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeGeomean(System.String)">
            <summary>
            Returns the geometric mean of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>The geometric mean of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeHarmean(System.String)">
            <summary>
            Returns the harmonic mean of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>The harmonic mean all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeHypgeomdist(System.String)">
            <summary>
            Returns the hypergeometric distribution.
            </summary>
            <param name="argList">Number of sample successes, number of sample, number of population successes, number of population.</param>
            <returns>Returns the gamma distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIntercept(System.String)">
            <summary>
            Returns the y-intercept of the least square fit line through the given points.
            </summary>
            <param name="range">y_range, x_range.</param>
            <returns>returns y-intercept.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeBinomdist(System.String)">
            <summary>
            Returns the binomial distribution.
            </summary>
            <param name="argList">Number of successes, number of trials, probability, cumulative.</param>
            <returns>Returns binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeChidist(System.String)">
            <summary>
            Returns the chi-squared distribution.
            </summary>
            <param name="argList">X degrees of freedom.</param>
            <returns>Returns chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeChiinv(System.String)">
            <summary>
            Returns the inverse of the chi-squared distribution.
            </summary>
            <param name="argList">X degrees of freedom.</param>
            <returns>Returns inverse of the chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeChitest(System.String)">
            <summary>
            Returns the Chi Test for independence.
            </summary>
            <param name="range">Actual_range, expected_range.</param>
            <returns>returns y-intercept.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNormdist(System.String)">
            <summary>
            Returns the normal distribution.
            </summary>
            <param name="argList">X, mean, standarddev, cumulative.</param>
            <returns>Returns normal distribution.</returns>
            <remarks>
            Cumulative should be either 
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNormsDist(System.String)">
            <summary>
            Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one.
            <para>Syntax: NORMSDIST(z)</para>
            </summary>
            <param name="argList">Z is the value for which you want the distribution.</param>
            <returns>Returns string standard normal cumulative distribution function</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNorminv(System.String)">
            <summary>
            Returns the inverse of normal distribution.
            </summary>
            <param name="argList">P, mean, standard deviation.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNormsInv(System.String)">
            <summary>
            Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.
            <para>Syntax: NORMSINV(p)</para>
            </summary>
            <param name="argList">p is a probability corresponding to the normal distribution.</param>
            <returns>Returns string for inverse of the standard normal cumulative distribution</returns>
            <remarks>
            p should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeConfidence(System.String)">
            <summary>
            Returns a confidence interval radius.
            </summary>
            <param name="argList">Alpha, standard deviation, size.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCorrel(System.String)">
            <summary>
            Returns the correlation coefficient between the two sets of points.
            </summary>
            <param name="range">Range1, range2.</param>
            <returns>Correlation coefficient.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCount(System.String)">
            <summary>
            Returns the count of all values (including text) listed in the argument
            evaluate to a number.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of all numerical values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCounta(System.String)">
            <summary>
            Returns the count of all values (including text) listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCountblank(System.String)">
            <summary>
            Returns the count of blank cells listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of blank cells listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCountif(System.String)">
            <summary>
            Counts the cells specified by some criteria.
            </summary>
            <param name="argList">The criteria range, the criteria.</param>
            <returns>returns string to the cell count</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCovar(System.String)">
            <summary>
            Returns the covariance between the two sets of points.
            </summary>
            <param name="range">Range1, range2.</param>
            <returns>returns Covariance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeCritbinom(System.String)">
            <summary>
            Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.
            </summary>
            <param name="argList">Number of trials, probability, alpha.</param>
            <returns>Returns the critcal value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDevsq(System.String)">
            <summary>
            Returns the sum of the squares of the mean deviations.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>Sum of the squares of the mean deviation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeExpondist(System.String)">
            <summary>
            Returns the exponential distribution.
            </summary>
            <param name="argList">X, lambda, cumulative.</param>
            <returns>Returns exponential distribution.</returns>
            <remarks>
            Cumulative should be either 
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFdist(System.String)">
            <summary>
            Returns the F (Fisher) probability distribution.
            </summary>
            <param name="argList">X, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the F probability distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFinv(System.String)">
            <summary>
            Returns the inverse of F distribution.
            </summary>
            <param name="argList">P, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns x such that F distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFisher(System.String)">
            <summary>
            Returns the Fisher transformation of the input variable.
            </summary>
            <param name="argList">Input variable x.</param>
            <returns>Fisher transformation of x.</returns>
            <remarks>
            X should be between -1 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFisherinv(System.String)">
            <summary>
            Returns the inverse of Fisher transformation.
            </summary>
            <param name="argList">Input variable y.</param>
            <returns>The value x such that the Fisher transformation y is x.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeForecast(System.String)">
            <summary>
            Returns a forecasted value based on two sets of points using Least Square Fit regression.
            </summary>
            <param name="range">X, rangex, rangey.</param>
            <returns>returns Forecasted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeKurt(System.String)">
            <summary>
            Returns the kurtosis of the passed-in values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>The kurtosis of the data.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLarge(System.String)">
            <summary>
            Returns the kth largest value in the range.
            </summary>
            <param name="range">The Range, k.</param>
            <returns>Kth largest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLognormdist(System.String)">
            <summary>
            Returns the lognormal distribution.
            </summary>
            <param name="argList">X, mean, standarddev.</param>
            <returns>Returns lognormal distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLoginv(System.String)">
            <summary>
            Returns the inverse of the lognormal distribution.
            </summary>
            <param name="argList">P, mean, standarddev.</param>
            <returns>Returns the value x where the lognormal distribution of x is p.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMaxa(System.String)">
            <summary>
            Returns the maximum value of all values listed in the argument including logical values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the maximum value of all values listed in the argument.</returns>
            <remarks> True is treated as 1 and False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMedian(System.String)">
            <summary>
            Returns the median value in the range.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>Median value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMina(System.String)">
            <summary>
            Returns the minimum value of all values listed in the argument including logical values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the minimum value of all values listed in the argument.</returns>
            <remarks> True is treated as 1 and False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMode(System.String)">
            <summary>
            Returns the most frequent value in the range.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>The most frequent value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNegbinomdist(System.String)">
            <summary>
            Returns the negative binomial distribution.
            </summary>
            <param name="argList">Number of failures, success threshold, probability, cumulative.</param>
            <returns>Returns negative binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePearson(System.String)">
            <summary>
            Returns the Pearson product moment correlation coefficient.
            </summary>
            <param name="range">range1, range2</param>
            <returns>Pearson product</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePercentile(System.String)">
            <summary>
            Returns the percentile position in the range.
            </summary>
            <param name="range">The Range, k.</param>
            <returns>Percentile position.</returns>
            <remarks>K is a value between 0 and 1.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePercentrank(System.String)">
            <summary>
            Returns the percentage rank in the range.
            </summary>
            <param name="range">Range, x, significant digits.</param>
            <returns>Percentile position.</returns>
            <remarks>Significant digits are optional, defaulting to 3.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePermut(System.String)">
            <summary>
            The number of permutations of n items taken k at the time. 
            </summary>
            <param name="argList">The arglist, N, k</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputePoisson(System.String)">
            <summary>
            Returns the Poisson distribution.
            </summary>
            <param name="argList">X, mean, cumulative.</param>
            <returns>Returns the exponential distribution.</returns>
            <remarks>
            Cumulative should be either 
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeProb(System.String)">
            <summary>
            Returns the probability that a value in the given range occurs.
            </summary>
            <param name="range">Xrange1, prange2, lowerbound, upperbound.</param>
            <returns>The probability.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeQuartile(System.String)">
            <summary>
            Returns the quartile position in the range.
            </summary>
            <param name="range">The Range, q.</param>
            <returns>Percentile position.</returns>
            <remarks>Q is 0, 1, 2, 3, 4.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRank(System.String)">
            <summary>
            Returns the rank of x in the range.
            </summary>
            <param name="range">X, range, order.</param>
            <returns>returns Rank.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRsq(System.String)">
            <summary>
            Returns the square of the Pearson product moment correlation coefficient.
            </summary>
            <param name="range">Range1, range2.</param>
            <returns>Square of the Pearson product.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSkew(System.String)">
            <summary>
            Returns the skewness of a distribution.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>Skewness of a distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLogest(System.String)">
            <summary>
            Returns the m parameter of the exponential curve y = b * m^x that best fits the given points. Only the first two Excel parameters are used.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns m parameter.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeGrowth(System.String)">
            <summary>
            Returns the growth estimate using the exponential curve y = b * m^x that best fits the given points. Only the first two Excel parameters are used.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns estimated value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.SetValueToGridColumnOrRow(System.String,System.Object,System.Boolean,System.Int32)">
            <summary>
            A method that sets the data value to the specified cell.
            </summary>
            <param name="value">The value.</param>
            <param name="fixedIndex">Index value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLogestMB(System.Double[],System.Double[],System.Double@,System.Double@)">
            <summary>
            Returns the m and b value used in exponential curve y = b * m^x.
            </summary>
            <param name="y">The set of y-values required in y = b*m^x</param>
            <param name="x">The set of x-values in y = b*m^x</param>
            <returns>returns calculated b,m value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLogestb(System.String)">
            <summary>
            Returns the b parameter of the exponential curve y = b * m^x that best fits the given points.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns b parameter.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSlope(System.String)">
            <summary>
            Returns the slope of the least square fit line through the given points.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns y-intercept.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSmall(System.String)">
            <summary>
            Returns the kth smallest value in the range.
            </summary>
            <param name="range">The Range, k.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeStandardize(System.String)">
            <summary>
            Returns a normalized value.
            </summary>
            <param name="argList">X, mean, stddev.</param>
            <returns>Normalized value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeStdev(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeStdeva(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
            <remarks>Treats True as 1 and False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeStdevp(System.String)">
            <summary>
            Returns the population standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>The population standard deviation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeStdevpa(System.String)">
            <summary>
            Returns the population standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.
            </param>
            <returns>The population standard deviation.</returns>
            <remarks>Treats True as 1 and False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSteyx(System.String)">
            <summary>
            Returns the standard error of the least square fit line through the given points.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>Standard error.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTrimmean(System.String)">
            <summary>
            Returns the mean of the range after removing points on either extreme.
            </summary>
            <param name="range">Range, percent.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeVar(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeVara(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
            <remarks> True is treated as 1 and False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeVarp(System.String)">
            <summary>
            Returns population variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>The population variance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeVarpa(System.String)">
            <summary>
            Returns population variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>The population variance.</returns>
            <remarks> True is treated as 1 and False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeWeibull(System.String)">
            <summary>
            Returns the Weibull distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>Returns Weibull distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeZtest(System.String)">
            <summary>
            Returns the one-tailed probability value of a Z test.
            </summary>
            <param name="range">Range, mu, sigma.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeHLookUp(System.String)">
            <summary>
            Returns a horizontal table look up value.
            </summary>
            <param name="range">Contains search value, table, return index and match properties.</param>
            <returns>Matching value found in the table.</returns>
            <remarks> For example, =HLOOKUP("Axles",A1:C4,2,TRUE) looks for the exact 
            match for Axles in A1:C1 and returns the corresponding value in A2:C2. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeVLookUp(System.String)">
            <summary>
            Returns a vertical table look up value.
            </summary>
            <param name="range">Contains search value, table, return index and match properties.</param>
            <returns>Matching value found in the table.</returns>
            <remarks> For example, =VLOOKUP("Axles",A1:C4,2,TRUE) looks for the exact 
            match for Axles in A1:A4 and returns the corresponding value in B1:B4. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLeft(System.String)">
            <summary>
            Returns the left so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>returns a string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLen(System.String)">
            <summary>
            Returns the length of the given string.
            </summary>
            <param name="range">Contains the string.</param>
            <returns>An integer length.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMid(System.String)">
            <summary>
            Returns a substring of the given string.
            </summary>
            <param name="range">Contains the original string, start position of the substring, 
            and the number of characters in the substring.</param>
            <returns>returns a string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRight(System.String)">
            <summary>
            Returns the right so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>returns a string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.IsSeparatorInTIC(System.String)">
            <summary>
            Returns True if the ParseArgumentSeparator character is included in a string.
            </summary>
            <param name="s">The string to be searched.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetStringArray(System.String)">
            <summary>
            Returns an array of strings from an argument list.
            </summary>
            <param name="s">A delimited argument list.</param>
            <returns>Array of strings from an argument list.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeConcatenate(System.String)">
            <summary>
            Returns a single character string.
            </summary>
            <param name="range">List of strings to be concatenated.</param>
            <returns>A single string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIndex(System.String)">
            <summary>
            Returns the value at a specified row and column from within a given range.
            </summary>
            <param name="arg">look_range, row, col</param>
            <returns>The value.</returns>
            <remarks>
            Both array and reference form of this function are supported.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIndirect(System.String)">
            <summary>
            Returns the reference specified by a text string. References are immediately evaluated to display their contents.
            <para>Syntax: INDIRECT(CellRefString, [IsA1Style])</para>
            </summary>
            <param name="args">Cell reference string.</param>
            <returns>Reference specified the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSubstitute(System.String)">
            <summary>
            In a given string, this method substitutes an occurrence of one string with another string.
            </summary>
            <param name="range">A list of 3 or 4 arguments: the original string, the search string, the 
            replacement string, and optionally, an integer representing the occurrence to be replaced.
               </param>
            <returns>The modified string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeProduct(System.String)">
            <summary>
            Returns the product of the arguments in the list.
            </summary>
            <param name="range">List of arguments.</param>
            <returns>Product of the arguments.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeText(System.String)">
            <summary>
            Returns a quoted string from a date or number.
            </summary>
            <param name="range">Value to be converted to a string.</param>
            <returns>Quoted string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeValue(System.String)">
            <summary>
            Returns a number.
            </summary>
            <param name="range">A date or number string.</param>
            <returns>returns a number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMod(System.String)">
            <summary>
            Returns the remainder after dividing one number by another.
            </summary>
            <param name="range">Two numbers in a list.</param>
            <returns>The remainder.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeInt(System.String)">
            <summary>
            Returns the integer value.
            </summary>
            <param name="range">Number to be truncated.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTrunc(System.String)">
            <summary>
            Truncates a number to an integer.
            </summary>
            <param name="range">Value and number of digits.</param>
            <returns>Truncated value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSumProduct(System.String)">
            <summary>
            Returns the sum of the products of corresponding values.
            </summary>
            <param name="range">Two cell ranges.</param>
            <returns>Sum of the products.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsError(System.String)">
            <summary>
            Returns True is the string denotes an error.
            </summary>
            <param name="range">String to be tested.</param>
            <returns>True if the value is an error.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsNumber(System.String)">
            <summary>
            Determines whether the string contains a number or not.
            </summary>
            <param name="range">String to be tested.</param>
            <returns>True if the string is a number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFalse(System.String)">
            <summary>
            Returns the logical value False. 
            </summary>
            <returns>Logical False value string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTrue(System.String)">
            <summary>
            Returns the logical value True.
            </summary>
            <returns>Logical True value string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeDollar(System.String)">
            <summary>
            Converts a number to text using currency format.
            </summary>
            <param name="args">Number and the number of digits.</param>
            <returns>Currency format string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFixed(System.String)">
            <summary>
            Rounds a number to the specified number of decimals, formats the number
            in decimal format using a period and commas, and return the result as text.
            </summary>
            <param name="args">
            Number, number of digits, a flag that prevents from include
            commas in the returned text.
            </param>
            <returns>Formatted number as string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLower(System.String)">
            <summary>
            Converts text to lowercase.
            </summary>
            <param name="args">Value to convert.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeUpper(System.String)">
            <summary>
            Converts text to uppercase.
            </summary>
            <param name="args">Value to convert.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeTrim(System.String)">
            <summary>
            Removes all leading and trailing white-space characters.
            </summary>
            <param name="args">Value to trim.</param>
            <returns>
            The string that remains after all leading and trailing white-space characters
            were removed.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsLogical(System.String)">
            <summary>
            Determines whether the value is a logical value.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is a logical value, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsNA(System.String)">
            <summary>
            Determines whether the value is the #NA error value.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is the #NA error value, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsErr(System.String)">
            <summary>
            Returns True is the string denotes an error except #N/A.
            </summary>
            <param name="range">Value to be tested.</param>
            <returns>True if the value is an error except #N/A, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsBlank(System.String)">
            <summary>
            Determines whether the value is empty string.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is empty, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsText(System.String)">
            <summary>
            Determines whether the value is string or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is a string, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsNonText(System.String)">
            <summary>
            Determines whether the value is not a string.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is not a string, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMultinomial(System.String)">
            <summary>
            Returns the Multinominal value of given range of numbers.
            </summary>
            <param name="range">Given numbers</param>
            <returns>Multinominal value of given range of numbers</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeMround(System.String)">
            <summary>
            Rounds the given number to a specified multiple number
            </summary>
            <param name="argList">Given number, multiple value</param>
            <returns>Mround value of given number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRandbetween(System.String)">
            <summary>
            Returns the random integer number between the given two numbers.
            </summary>
            <param name="argList">StartNumber, EndNumber</param>
            <returns>Random number between two values</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeSqrtpi(System.String)">
            <summary>
            Return the square root of product of given number with PI.
            </summary>
            <param name="args">number to find Sqrtpi.</param>
            <returns>Return Sqrtpi value of giveen number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeQuotient(System.String)">
            <summary>
            Returns the integer portion of division function.
            </summary>
            <param name="range">Numerator, Denominator to find the quotient</param>
            <returns>Returns integer value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeFactdouble(System.String)">
            <summary>
            Returns the Double Factorial value for given number
            </summary>
            <param name="args">number to find FactDouble</param>
            <returns>FactDouble of given number </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeGcd(System.String)">
            <summary>
            Returns the largest integer divides the numbers without any reminders.
            </summary>
            <param name="range">number1,number2,...</param>
            <returns>GCD value of given numbers.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeLcm(System.String)">
            <summary>
            Returns the smallest positive integer that is a multiple of all given values.
            </summary>
            <param name="range">Number1,Number2,...</param>
            <returns>LCM value of given numbers</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeRoman(System.String)">
            <summary>
            Returns the arabic numeral to roman in TEXT format
            </summary>
            <param name="argList">Number ,Form for style of roman text 
            0 or omitted Classic. 
            1 More concise.  
            2 More concise.
            3 More concise.
            4 Simplified. 
            TRUE Classic. 
            FALSE Simplified. 
            </param>
            <returns>Retuns the Roman string of given numaric value based on the style form</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIfError(System.String)">
            <summary>
            Returns a value you specify if a formula evaluates to an error
            otherwise, returns the result of the formula.
            </summary>
            <param name="args">String to be tested.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeT(System.String)">
            <summary>
            Returns the string or text referred by the given value.
            </summary>
            <param name="args">value to find the refrred text - Required </param>
            <returns>Referred Text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsEven(System.String)">
            <summary>
            Determines whether the value is even or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True, if the value is even, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeIsOdd(System.String)">
            <summary>
            Determines whether the value is odd or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True, if the value is odd, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeN(System.String)">
            <summary>
            Returns a number converted from the provided value.
            </summary>
            <param name="args">Value to be converted.</param>
            <returns>A number in string format or an error string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNA(System.String)">
            <summary>
            Returns the error value(#N/A). Used internally.
            </summary>
            <param name="args">empty string.</param>
            <returns>error value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeNA">
            <summary>
            Returns the error value (#N/A - value not available).
            </summary>
            <returns>error value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputeErrorType(System.String)">
            <summary>
             Returns a number corresponding to the predefined error values(#NULL!, #VALUE!, #REF!, #NAME?, #NUM!, #N/A, "#GETTING_DATA). Returns #N/A if not or any value enclosed within double quotes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.IsCellReference(System.String)">
            <summary>
            Determines whether the arg is a valid cell name.
            </summary>
            <param name="args">Cell name.</param>
            <returns>True is the arg is a valid cell name, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.IsFormulaResultString(System.String,System.String)">
            <summary>
            Determines whether the computed value is a valid cell name.
            </summary>
            <param name="formula">Formula to </param>
            <param name="cell">The cell name</param>
            <returns>True if the computed value is string type, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RecurciveFormulaCheck(System.String,System.String)">
            <summary>
            Determines whether the computed value is a valid cell name
            by checking all it dependent cells.
            </summary>
            <returns>return boolean value to indicate whether the computed value is a valid cell name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.InitLibraryFunctions">
            <summary>
            Creates and initially loads the Function Library with the supported functions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetCellsFromArgs(System.String)">
            <summary>
            Accepts an argument string and returns a string array of cells.
            </summary>
            <remarks>
               Converts arguments in these forms to a string array of individual cells.<para/>
                   A1,A2,B4,C1,...,D8<para/>
                   A1:A5<para/>
                   A1:C5<para/>
            </remarks>
            <param name="args">String containing a cell range.</param>
            <returns>String array of cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.SplitArguments(System.String,System.Char)">
            <summary>
            A method to split the arguments using argument seperator.
            </summary>
            <param name="args">arguments to split.</param>
            <param name="argSeperator">argument seperator used to split.</param>
            <returns>A string array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetValueFromGrid(System.Int32,System.Int32)">
            <summary>
            Conditionally gets either the formula value or the cell 
            value depending upon whether the requested cell is a FormulaCell.
            </summary>
            <param name="row">Row index of the requested cell.</param>
            <param name="col">Column index of the requested cell.</param>
            <returns>String holding either the cell value or the computed formula value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetValueFromGrid(System.String)">
            <summary>
            Conditionally gets either the formula value or the cell 
            value depending upon whether the requested cell is a FormulaCell.
            </summary>
            <param name="cell1">The alphanumeric cell label, like A1, or EE14.</param>
            <returns>String holding either the cell value or the computed formula value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetValueFromArg(System.String)">
            <summary>
            Computes the value contained in the argument.
            </summary>
            <remarks>
            This method takes the argument and checks whether it is a 
            parsed formula, raw number, or cell reference like A21.
            The return value is a string that holds the computed value of 
            the passed-in argument.
            </remarks>
            <param name="arg">A parsed formula, raw number, or cell reference.</param>
            <returns>A string with the computed number in it.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetValueFromArg(System.String,System.Boolean)">
            <summary>
            Computes the value contained in the argument.
            </summary>
            <remarks>
            This method takes the argument and checks whether it is a 
            parsed formula, raw number, or cell reference like A21.
            The return value is a string that holds the computed value of 
            the passed-in argument.
            </remarks>
            <param name="arg">A parsed formula, raw number, or cell reference.</param>
            <param name="returnString">If False, this method returns the empty 
            string if the arg is a string. If True, this method will return the string value.</param>
            <returns>A string with the arg value in it.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.RowIndex(System.String)">
            <summary>
            Returns the row index from a cell reference.
            </summary>
            <param name="s">String holding a cell reference such as C21 or AB11.</param>
            <returns>An integer with the corresponding row number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ColIndex(System.String)">
            <summary>
            Returns a column index from a cell reference.
            </summary>
            <param name="s">String holding a cell reference such as C21 or AB11.</param>
            <returns>An integer with the corresponding column number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ComputedValue(System.String)">
            <summary>
            Computes the value of a parsed formula.
            </summary>
            <param name="formula">The formula to be computed.</param>
            <returns>A string holding the computed value.</returns>
            <remarks> 
             The string passed into ComputedValue must have been parsed using the Parse
             method. Before calling the method, you should set FormulaContextCell
             to properly reflect which cell owns this formula.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.IsDirty(Syncfusion.Windows.Forms.Grid.GridFormulaTag)">
            <summary>
            Returns whether or not the calculation for this GridFormulaTag is current or not.
            </summary>
            <param name="tag">The GridFormulaTag to be tested.</param>
            <returns>Returns true if the tag has been computed with the most recent values, false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.SetDirty(Syncfusion.Windows.Forms.Grid.GridFormulaTag)">
            <summary>
            Marks the underlying formula as dirty, indicating it needs to be recomputed. It does this by setting the Text property to null.
            </summary>
            <param name="tag">The GridFormulaTag to be marked as not computed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetFormulaText(System.String@)">
            <summary>
            Given a string, it returns a string that is passed through the FormulaParsing event
            to allow any listener to modify it.
            </summary>
            <param name="s">A string that is to be potentially parsed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.IsCircularReference(System.String,System.String)">
            <summary>
            Determines whether the given formula at the given cell will cause a circular reference.
            </summary>
            <param name="cell">The alphanumeric cell label, like A1, or EE14.</param>
            <param name="formula">The formula to be tested.</param>
            <returns>True if the given formula causes a circular reference, false otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.FormulaContextCell">
            <summary>
            Gets or sets the cell (in the column-row notation of A1 or E21) whose 
            formula is being parsed or computed.
            </summary>
            <remarks>
            This property should be set only if you are directly parsing and 
            computing formulas by calling the Parse or ComputedValue methods. In this 
            case, you should set the property before calling either method. FormulaContextCell
            is used to provide support for CurrentRowNotation, circular calculation checks,
            and reference updating.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.SupportBlanksInSheetNames">
            <summary>
            Gets or sets a value indicating whether blanks are treated as significant in sheet names.
            </summary>
            <remarks>
            Earlier versions of GridFormulaEngine did not support the use of blanks
            in sheet names. (They were treated as insignificant.) The current version
            does treat blanks as significant. If you want to revert to the prior
            treatment of blanks in sheet names, then set this property to false.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.FixedReferenceOnlyOnPaste">
            <summary>
            Gets or sets a value indicating whether fixed references should be adjusted on other than paste.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.DependentCells">
            <summary>
            Gets a mapping between a cell and a list of formula cells that depend on it.
            </summary>
            <remarks>
            The key is the given cell, and the value is a Hashtable of cells containing
            formulas that reference this cell.
            </remarks>
            <example> Here is code that will list formula cells affected by changing the given cell.
            <code lang="C#">
               public void DisplayAllAffectedCells()
               {
                   GridFormulaEngine engine = ((GridFormulaCellModel)this.gridControl1.CellModels["FormulaCell"]).Engine;
            <para/>    
                   foreach(object o in engine.DependentCells.Keys)
                   {
                       string s1 = o as string;
                       Console.Write(s1 + " affects ");
                       Hashtable ht = (Hashtable) engine.DependentCells[s1];
                       foreach(object o1 in ht.Keys)
                       {
                           string s2 = o1 as string;
                           Console.Write(s2 + " ");
                       }
                       Console.WriteLine(string.Empty);
                   }
               }
            </code>
            <code lang="VB">
                   Public Sub DisplayAllAffectedCells()
                       Dim engine As GridFormulaEngine = CType(Me.gridControl1.CellModels("FormulaCell"), GridFormulaCellModel).Engine
                       Dim o As Object
                       For Each o In  engine.DependentCells.Keys
                           Dim s1 As String = CStr(o)
                           Console.Write((s1 + " affects "))
                           Dim ht As Hashtable = CType(engine.DependentCells(s1), Hashtable)
                           Dim o1 As Object
                           For Each o1 In  ht.Keys
                               Dim s2 As String = CStr(o1)
                               Console.Write((s2 + " "))
                           Next o1
                           Console.WriteLine(string.Empty)
                       Next o
                   End Sub 'DisplayAllAffectedCells
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.DependentFormulaCells">
            <summary>
            Gets a mapping between a formula cell and a list of cells upon which it depends.
            </summary>
            <remarks>
            The key is the given formula cell, and the value is a Hashtable of cells that this 
            formula cell references.
            </remarks>
            <example> Here is code that lists formula cells affected by changing a given cell:
            <code lang="C#">
                   public void DisplayAllFormulaDependencies()
                   {
                       GridFormulaEngine engine = ((GridFormulaCellModel)this.gridControl1.CellModels["FormulaCell"]).Engine;
             <para/>           
                       foreach(object o in engine.DependentFormulaCells.Keys)
                       {
                           string s1 = o as string;
                           Console.Write(s1 + " depends upon ");
                           Hashtable ht = (Hashtable) engine.DependentFormulaCells[s1];
                           foreach(object o1 in ht.Keys)
                           {
                               string s2 = o1 as string;
                               Console.Write(s2 + " ");
                           }
                           Console.WriteLine(string.Empty);
                       }
                   }
            </code>
            <code lang="VB">
                   Public Sub DisplayAllFormulaDependencies()
                       Dim engine As GridFormulaEngine = CType(Me.gridControl1.CellModels("FormulaCell"), GridFormulaCellModel).Engine
            <para/>   
                       Dim o As Object
                       For Each o In  engine.DependentFormulaCells.Keys
                           Dim s1 As String = CStr(o)
                           Console.Write((s1 + " depends upon "))
                           Dim ht As Hashtable = CType(engine.DependentFormulaCells(s1), Hashtable)
                           Dim o1 As Object
                           For Each o1 In  ht.Keys
                               Dim s2 As String = CStr(o1) 
                               Console.Write((s2 + " "))
                           Next o1
                           Console.WriteLine(string.Empty)
                       Next o
                   End Sub 'DisplayAllFormulaDependencies
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.FormulaCopyFlags">
            <summary>
            Gets or sets behavior for copy, paste, and drag-and-drop operations.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.MaximumCircularChecks">
            <summary>
            Gets or sets the number of recursive checks done
            for circular references.
            </summary>
            <remarks>
            When you edit a cell, the engine parsing will attempt
            to flag circular references as an error. This value sets the
            number of dependent cells it will check before assuming there
            is no circular reference. Checking every reference can be 
            time consuming depending upon the formulas being used. This
            property lets you decide how many recursions the engine will 
            allow when looking for circular references. The default value
            is -1 meaning no checks are done as you type formula into the 
            cell. Setting this property to int.MaxValue will make the 
            engine check all dependent cells for a circular reference.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.DoCircularCheckInValidating">
            <summary>
            Gets or sets a value indicating whether circular references should be checked in 
            the CurrentCell.Validating event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.CloneableFormulaTags">
            <summary>
            Gets or sets a value indicating whether FormulaTags are cloned when
            setting one FormulaTag object equal to another. 
            </summary>
            <remarks>
            This is by default set to False as normally the FormulaEngine
            expects to be working with referenced objects, and not clones 
            of referenced objects.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.UsesVirtualDataSource">
            <summary>
            Gets or sets a value indicating whether the underlying data is virtually bound to the grid.
            </summary>
            <remarks>If the formula engine knows the data is stored within a GridControl.Data
            object, it can optimize data access. If the grid is being populated through
            virtual techniques (handling QueryCellInfo), the formula engine has to get the data 
            through that means. The default value is to assume the data is coming from a virtual
            datasource. There are some other situations, like formulas in headers or frozen cells, when
            this property should be set to True.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.CalculatingSuspended">
            <summary>
            Gets or sets a value indicating whether formulas are immediately calculated as dependent cells are changed.
            </summary>
            <remarks>Use this property to suspend calculations while a series of changes 
            are made to dependent cells either by the user or programmatically. When the changes are 
            complete, set this property to False, and then call Engine.RecalculateRange to recalculate
            the affected range. See the sample in GridFormulaCellModel.CalculatingSuspended.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.MaximumRecursiveCalls">
            <summary>
            Gets or sets the maximum number of recursive calls that can be used to compute a cellvalue.
            </summary>
            <remarks>This property comes into play when you have a calculated formula cell that depends on  
            another calculated formula that depends on another calculated formula and so on. If the 
            'depends on another formula' number exceeds MaximumRecursiveCalls, you will see a Too Complex message
            displayed in the cell. The default value is 100, but you can set it higher or lower depending upon 
            your expected needs. The purpose of the limit is to avoid a circular reference locking up your
            application.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.CurrentRowNotationEnabled">
            <summary>
            Gets or sets a value indicating whether to enable / disable using row = 0 in formulas to represent the current row.
            </summary>
            <remarks> 
            When this property is set True, entering zero as a row in a formula is
            interpreted to be the current row. Using the current row notation allows
            you to sort a column in the grid and maintain the relative formula. 
            After sorting, you do have to call engine.RecalculateRange to allow the
            relative formulas to reset themselves. See the Grid\Samples\Quick Start\GridControlSort 
            sample to see this sorting support in action.
            </remarks>
            <example>Here is code that places a formula in column 4 that sums
            columns 1 and 3. Notice it just sets CellType and Text properties
            on the column style for the column. It is not required that you visit
            each cell in the column to assign such a formula. 
            <code lang="C#">
            //column 4 is formula col which used relative notation (row = 0)
            //to enter the formulas as a simple string as the default value
            //in the column
            this.gridControl1.ColWidths[4] = 100;
            this.gridControl1[0, 4].Text = "FormulaCell";
            this.gridControl1.ColStyles[4].CellType = "FormulaCell";
            this.gridControl1.ColStyles[4].Text = "= A0 + C0"; 
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ForceSaveCellInfo">
            <summary>
            Gets or sets a value indicating whether a SaveCellInfo event should be raised even if the affected
            cell is off-screen.
            </summary>
            <remarks>
            The default behavior is not to raise a SaveCellInfo event for off-screen
            cells when a value is modified that affects such cells. This is done for 
            performance considerations. But if you need the SaveCellInfo event raised for
            every change, you can set this property to ensure this event is raised.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.CatchExceptionsInRecalculateRange">
            <summary>
            Gets or sets whether further calculations on a formula will be attempted in the RecalculateRange method if there is an exception 
            raised during the parsing or calculating of the formula.
            </summary>
            <remarks>
            The default value is false for backward compatibilty purposes. If you set this property to true, then during calls to RecalculateRange with
            forceCalculations = true, if an exception is raised during parsing or computing, the cell will display "#REF!". This property only has 
            effect if you call RecalculateRange with the forceCalculations parameter set to true.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.MarkUnknownSheetRanges">
            <summary>
            Gets or sets whether formulas involving unknown sheet names are marked with #REF! text.
            </summary>
            <remarks>The default value is false. When this property is false, the engine throws an 
            unknown sheet name error when a formula uses a sheet name that has not been registered
            with the engine. If you want to avoid this exception being thrown, set this property to 
            true. In this case, the cell will display #REF! and be ignored by the engine.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ForceParsingOfLibraryFunctionArguments">
            <summary>
            Gets or sets a value indicating whether all function arguments are parsed using GridFormulaEngine.Parse.
            </summary>
            <remarks>
            If you are using NamedRanges or CurrentRowNotationEnabled inside function arguments, 
            you should set this property 
            to true to make sure the proper substitutions are done on the arguments.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.NamedRanges">
            <summary>
            Gets the named range Hashtable.
            </summary>
            <remarks>
            The key is the uppercase name and the value is the range for this name.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.NamedRangesOriginalNames">
            <summary>
            Gets the named range Hashtable that holds the original case name as the value.
            </summary>
            <remarks>
            The key is the uppercase name and the value is the original name.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.NamedRangesSized">
            <summary>
            Gets namedranges in order of string length.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.DependentNamedRangeCells">
            <summary>
            Gets hashtables containing cells that depend upon namedranges.
            </summary>
            <remarks>
            The key properties in DependentNamedRangeCells are namedranges. The
            value properties are hashtables.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.LibraryFunctions">
            <summary>
            Gets the current library functions.
            </summary>
            <remarks>
            This field gives you direct access to all Library Functions. 
            The function name serves as the hash key, and the function delegate
            serves as the hash value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.UseCommonLibrary">
            <summary>
            Gets or sets a value indicating whether you want all grids to share the same collection of library functions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetValueFromArgPreserveLeadingZeros">
            <summary>
            Gets or sets whether leading zeros are preserved in a call to <see cref="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.GetValueFromArg(System.String)"/>.
            </summary>
            <remarks>
            If the value of arg is "0123" or a cell reference like A1 where A1 holds 0123, then the default behavior
            is for GetValueFromArg(arg) to return 123, stripping away any leading zeros. If you want calls to
            GetValueFromArg to preserve the leading zeros, then set GetValueFromArgPreserveLeadingZeros to true.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.UseNoAmpersandQuotes">
            <summary>
            Gets or sets a value indicating whether strings concatenated using the ampersand operator should 
            be returned inside double quote marks.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.MaximumStackDepth">
            <summary>
            Gets or sets depth of the engine's calculation stack.
            </summary>
            <remarks>
            It is unlikely that you will need to adjust this value, as
            its default value of 100 is quite large.
            Any time a formula is to be computed, a Stack object is created
            with this number of elements to hold temporary calculations
            as the formula is being computed. 
            For example, this formula: 1+1+1+...+1 requires a stack 
            depth of 2 as there are only 2 temporary values needed as the 
            formula is evaluated. However, this formula: 1+(1+(1+(1+1)))
            requires a depth of 5, as the five 1's are pushed onto the 
            stack before the first addition (the right-most one) is
            performed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.FunctionEngineContext">
            <summary>
            Gets the formula engine that holds the proper state information for LibraryFunction call.
            </summary>
            <remarks>
            If you are adding your own custom library functions and need to access GridFormulaEngine members like
            GetCellsFromArgs or GetValueFromArg from your code, then you should use this static property to retrieve the proper
            GridFormulaEngine object. This only matters if you are using multiple grids that you have registered using
            RegisterGridAsSheet, and are adding your own custom formulas. Note that GridFormulaEngine.FunctionEngineContext
            is only defined within the scope of a library function call, and will be null at all other times.
            </remarks>
            <example> Use GridFormulaEngine.FunctionEngineContext to retrieve the engine 
            when writing custom functions.
            <code lang="C#">
            public string ComputeSumPosNums(string args)
            {
                GridFormulaEngine engine = GridFormulaEngine.FunctionEngineContext;
                string sum = string.Empty;
                foreach(string r in args.Split(new char[]{','}))
                {
                    if(r.IndexOf(':') > -1) //is a cellrange
                    {
                        foreach(string s in engine.GetCellsFromArgs(r))
                        {
                            s1 = engine.GetValueFromArg(s).Replace("'",string.Empty);
                            //... do some calculations to compute sum
                        }
                    }
                }    
                return sum.ToString();
            }
            </code>
            <code lang="VB">
            Public Function ComputeSumPosNums(args As String) As String
               Dim engine As GridFormulaEngine = GridFormulaEngine.FunctionEngineContext
               Dim sum As String = string.Empty
               Dim r As String
               For Each r In  args.Split(New Char() {","c})
                       If r.IndexOf(":"c) > - 1 Then 'is a cellrange
                           Dim s As String
                           For Each s In  engine.GetCellsFromArgs(r)
                               s1 = engine.GetValueFromArg(s).Replace("'", string.Empty)
                               '... do some calculations to compute sum
                           Next s 
                       End If
               Next r
               Return sum.ToString()
            End Function 'ComputeSumPosNums
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ActiveFunctionName">
            <summary>
            Gets the function name of the active function call. Empty if not in a call.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.AllowShortCircuitIFs">
            <summary>
            Gets or sets a value indicating whether IF function calculations should specifically avoid
            computing the non-used alternative.
            </summary>
            <remarks>
            The default value is false for code legacy consistency. When AllowShortCircuitIFs  
            is set true, only the necessary alternative of an IF function is computed. To support
            this behavior, a change in how nested IF function calculations are done is necessary.
            The default way of calculating nested functions is inside-out, with the inner most 
            functions being computed to a value before the next outer function is evaluated. To 
            support short circuiting IF functions, nested IF functions need to be computed from 
            the outside-in to know what alternative needs to be evaluated. This outside-in calculation
            pattern only applies to IF functions, and only when AllowShortCircuitIFs is true.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.ReturnNAN">
            <summary>
            Gets or sets a value indicating whether numerical formulas involving cells that hold strings return an error.
            </summary>
            <remarks>
            The default behavior is for the values of cells that hold strings to be treated as a zero if those 
            cells are used in numerical calculations. When this property is true, the calculation value is returned
            as double.NAN and an #Value! is displayed in the computed formula.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.FormulaParsing">
            <summary>
            Occurs whenever a string needs to be tested to determine whether it should be treated as a formula string and parsed,
            or be treated as a non-formula string. This event allows for preprocessing the unparsed formula.
            </summary>
            <remarks>This event may be raised more than once in the processing of a string into a formula.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.LenComparer">
            <summary>
            Used by AdjustNameRangesForSize to create an ArrayList
            ordered by string length.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.LenComparer.#ctor">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.LenComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares 2 strings based on their length.
            </summary>
            <param name="x">First string to compare.</param>
            <param name="y">Second string to compare.</param>
            <returns>Zero if both are equal; positive value if second string is greater; negative value if first string is greater.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.LibraryFunction">
            <summary>
            Delegate used to define functions that you add to the Function Library.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.SortedArrayList">
            <summary>
            ArrayList derived class that exposes a method to insert the string in a sorted position if not present.
            </summary>
            <remarks>This class can be used to maintain a sorted list of strings so ArrayList.BinarySearch can be used 
            to quickly locate a member string.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaEngine.SortedArrayList.InsertIfNotPresent(System.String)">
            <summary>
            Inserts a string into its sorted position if not present in the list.
            </summary>
            <param name="s">The string to be tested.</param>
            <returns>True if the string was inserted.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridSheetFamilyItem">
            <summary>
            Encapsulates the properties that are needed to support multiple families of crossed-referenced grids.
            This class is for internal use only.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridSheetFamilyItem.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags">
            <summary>
            Specifies behavior for copy, paste, and drag-and-drop operations.
            </summary>
            <remarks>
            Settings determine whether the formula or the calculated result is copied
            and whether formula references are updated when cells containing formulas are pasted or dropped.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags.None">
            <summary>
            No copy flags set.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags.ClipBoardText">
            <summary>
            The computed value text is placed on the Clipboard.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags.ClipBoardFormula">
            <summary>
            The formula text is placed on the Clipboard.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags.ClipBoardReferencesAdjusted">
            <summary>
            Cell references in pasted formulas are adjusted for their new location.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags.InsDelRangeReferencesUpdated">
            <summary>
            Cell references are updated when rows or columns are removed or inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags.NamedRangeReferencesUpdated">
            <summary>
            Cell references are updated when rows or columns are removed or inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridFormulaCopyFlags.UpdateReferencesDuringDnD">
            <summary>
            Cell references are updated if the cell is moved using an Ole Drag and Drop operation within the same GridControl.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaParsingEventHandler">
            <summary>
            Event delegate for the GridFormulaParsing event 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaParsingEventArgs">
            <summary>
            Used by the <see cref="!:GridFormulaParsing"/> event, GridFormulaParsingEventArgs holds a reference 
            to the string that is to be parsed. The GridFormulaParsing event allows the listener to preprocess
            the string that is being parsed.
            </summary>
            <remarks>
            Please note that this event may be raised more than once as a string is parsed. 
            </remarks>
            <example> Here is a code snippet that shows how to tell a grid to also treat any text in a formula cell 
            that begins with a minus(-) or a plus(+) as formulas. The default behavior is to treat only text beginning
            with equal(=) as formulas.
            <code lang="C#">
                   //subscribe to the event before any formulas are loaded into the grid...
                   this.engine = ((GridFormulaCellModel)gridControl1.CellModels["FormulaCell"]).Engine;
                this.engine.FormulaParsing += new GridFormulaParsingEventHandler(engine_FormulaParsing);
             <para/>    
                   //Here is the handler code that adds an = if necessary so any string beginning with +, - or =
                //is treated as a formula.
                  void engine_FormulaParsing(object sender, GridFormulaParsingEventArgs e)
                  {
                      //allow cells starting with + and - to be treated as formula cells.
                      if (e.Text.StartsWith("-"))
                           e.Text = "=" + e.Text;
                      else if (e.Text.StartsWith("+"))
                           e.Text = "=" + e.Text.Substring(1);
                  }         
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaParsingEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaParsingEventArgs.#ctor(System.String)">
            <summary>
            Holds a reference to the string that is to be parsed..
            </summary>
            <param name="text">The formula that is to be parsed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaParsingEventArgs.Text">
            <summary>
            Gets or sets the formula about to be parsed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper">
            <summary>
            A helper class that facilitates displaying and editing a NamedRanges hashtable using a CollectionEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.#ctor">
            <summary>
            Constructor which allows editing an empty NamedRange list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.#ctor(Syncfusion.Windows.Forms.Grid.GridFormulaEngine)">
            <summary>
            Constructor which allows editing an existing GridFormulaEngine.NamedRanges list.
            </summary>
            <param name="engine">The GridFormulaEngine object that holds the NamedRanges.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.ShowNamedRangesDialog(Syncfusion.Windows.Forms.Grid.GridFormulaEngine)">
            <summary>
            Displays a collection editor dialog for editing NamedRanges.
            </summary>
            <param name="engine">The GridFormulaEngine instance whose NamedRanges are being edited.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.List">
            <summary>
            Gets or sets NamedRangeList collection holding the GridFormulaEngine.NamedRange information being edited.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.ShowingNamedRangesDialog">
            <summary>
            Occurs immediately before the Dialog is displayed. The sender is 
            the Dialog being shown.
            </summary>
            <remarks>
            You can handle this event to customize the dialog to some extent.
            </remarks>
            <example> This code changes the title of the dialog.
            <code lang="C#">
            </code>
            <code lang="VB">
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.AlphaComparer">
            <summary>
            Custom IComparer object used alphabetize the ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.AlphaComparer.#ctor">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.AlphaComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares 2 items as strings.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            Neither <paramref name="x"/> nor <paramref name="y"/> implements the <see cref="T:System.IComparable"/> interface.
            -or-
            <paramref name="x"/> and <paramref name="y"/> are of different types and neither one can handle comparisons with the other.
            </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRangeList">
            <summary>
            Typed ArrayList that returns NamedRange objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRangeList.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRangeList.Item(System.Int32)">
            <summary>
            Returns the element as a NamedRange type.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRange">
            <summary>
            Holds Key and Value for a named range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRange.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRange.#ctor(System.String,System.String)">
            <summary>
               Constructor for NamedRange.
            </summary>
            <param name="key">Name of the NamedRange.</param>
            <param name="val">Value of the NamedRange.</param>
            <remarks>
            GridFormulaEngine allows you to write formulas where strings can be substitued
            for explicit values or cell references. For example, instead of hard coding an interest value 
            as in formula '= .052 * B12', you could write '= InterestRate * B12' where InterestRate
            is the Name for a NameRange object and .052 is its value. Then later, if the interest rate 
            changes, you only have to modify the value of the InterestRate NamedRange object, and do
            not have to directly modify values in cells. The NamedRange.Key property holds the name and the 
            NamedRange.Value property holds the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRange.ToString">
            <summary>
            Overridden to return the Key property.
            </summary>
            <returns>The Key property.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRange.Key">
            <summary>
            Gets or sets the name used for this named range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridFormulaNamedRangesEditHelper.NamedRange.Value">
            <summary>
            Gets or sets the value for this named range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListControlModel">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlModel.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlModel.NameToColIndex(System.String)">
            <summary>
            Used internally.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>
            The column index; or -1 if column could not be resolved.
            </returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlModel.ListControl">
            <internalonly/>
            <summary>Gets Listcontrol. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListControlChild">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChild.#ctor(Syncfusion.Windows.Forms.Grid.GridListControl)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChild.#ctor(Syncfusion.Windows.Forms.Grid.GridListControl,Syncfusion.Windows.Forms.Grid.GridListControlModel)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChild.CreateListControlItemAccessibilityInstance(System.Int32)">
            <summary>
            Creates the list control item accessibility instance.
            </summary>
            <param name="index">The index.</param>
            <returns>returns GridListControlItemAccessibleObject</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChild.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>
            A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChild.ListControl">
            <internalonly/>
            <summary>Gets ListControl. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChild.ItemAccessibleObjects">
            <internalonly/>
            <summary>Gets Item AccessibleObjects. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.#ctor(Syncfusion.Windows.Forms.Grid.GridListControlChild)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.GetChildCount">
            <summary>
            Used internally.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.GetChild(System.Int32)">
            <summary>
            Used internally.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.GetFocused">
            <summary>
            Used internally.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.GetSelected">
            <summary>
            Used internally.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns null if is no child is currently selected and the object itself does not have focus.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.HitTest(System.Int32,System.Int32)">
            <summary>
            Used internally.
            </summary>
            <param name="x">The horizontal screen coordinate.</param>
            <param name="y">The vertical screen coordinate.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns null if no object is at the tested location.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Used internally.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.
            </returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Role">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Name">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Bounds">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Description">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Help">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Parent">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.State">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlChildAccessibleObject.Value">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.#ctor(Syncfusion.Windows.Forms.Grid.GridListControlChild,System.Int32)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigate to the next or previous grid entry.
            </summary>
            <param name="navdir">The entry to navigate to.</param>
            <returns>The child object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.DoDefaultAction">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.GetFocused">
            <summary>
            Returns the currently focused child, if any.
            Returns this if the object itself is focused.
            </summary>
            <returns>The currently focused child.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Index">
            <internalonly/>
            <summary>Gets Index.Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.State">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Role">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Parent">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Name">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.DefaultAction">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Bounds">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObject.Description">
            <internalonly/>
            <summary>Used internally.</summary> 
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObjectsIndexer">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridListControlItemAccessibleObjectsIndexer.Item(System.Int32)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.IGridListControlSource">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridListControlSource.GetWidth(System.Int32)">
            <summary>
            Gets the width.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <returns>returns width</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridListControlSource.GetStyle(System.Int32,System.Int32)">
            <summary>
            Gets the style.
            </summary>
            <param name="recordNum">The record num.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>returns grid style info</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridListControlSource.SetWidth(System.Int32,System.Int32)">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.IGridListControlSource.GetVisibleColumnCount">
            <summary>
            Gets the visible column count.
            </summary>
            <returns>returns visible column count</returns>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Grid.IGridListControlSource.ItemPropertiesChanged">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridListControlDesigner">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController">
            <summary>
            This MouseController handles mouse events for cell elements. In its HitTest method, the
            cell renderer for the cell under the mouse cursor is determined and based on the cell renderer's
            HitTest result, mouse events will be forwarded to that cell.
            </summary>
            <remarks>
            This mouse controller manages the calls to each Cell Renderer's OnHitTest, OnMouseDown, OnMouseHover,
            OnMouseUp, OnMouseHoverEnter, OnMouseHoverLeave, and OnCancelMode methods. If a cell renderer's OnHitTest
            method returns a non-zero value, the cell renderer will receive mouse events associated with that cell.<para/>
            If a cell has cell button elements and the mouse is over a cell button element, the cell button element will
            receive all mouse events associated with that cell button element.<para/>
            If the user clicks on a cell button element, the cell button element will raise a Click event in its OnMouseUp
            event handler.
            <para/>
            This MouseController is not used by the GridControl by default. Instead, all this functionality is provided by the
            <see cref="T:Syncfusion.Windows.Forms.Grid.GridSelectCellsMouseController"/>. However, the grouping grid control uses this controller to forward
            events to cell renderers.
            </remarks>
            <example>This example shows code samples from GroupDropAreaDragHeaderMouseController where the mouse events are forwarded to the GridClickCellsMouseController.
            <code lang="C#">
                public class GroupDropAreaDragHeaderMouseController : GroupDragHeaderMouseControllerBase
                {
                    public GroupDropAreaDragHeaderMouseController(GridGroupDropArea grid)
                    {
                        this.groupDropArea = grid;
                        isGroupAreaOrigin = true;
                        clickCellsController = new GridClickCellsMouseController(grid);
                    }
            <para/>
                    internal GridClickCellsMouseController clickCellsController;
                    int clickCellsControllerHitTest = 0;
            <para/> 
                    public GridClickCellsMouseController ClickCellsController
                    {
                        get
                        {
                            return clickCellsController;
                        }
                    }
             <para/>
                    public void ResetClickCellsController()
                    {
                        if (this.entered)
                            clickCellsController.MouseHoverLeave(EventArgs.Empty);
                        else if (clickCellsControllerHitTest != 0)
                            clickCellsController.CancelMode();
                        entered = false;
                        clickCellsControllerHitTest = 0;
                    }
             <para/>
                       // unrelated code left out here ...
             <para/>
                    #region IMouseController implementation
             <para/>
                    public virtual string Name
                    {
                        get
                        {
                            return "DragGroupHeader";
                        }
                    }
            <para/> 
                    public virtual Cursor Cursor
                    {
                        get
                        {
                            if (cursor != null)
                                return cursor;
                            return clickCellsController.Cursor;
                        }
                    }
             <para/>
                    bool entered = false;
             <para/>
                    public virtual void MouseHoverEnter()
                    {
                        if (clickCellsControllerHitTest != 0)
                        {
                            entered = true;
                            clickCellsController.MouseHoverEnter();
                        }
                    }
            <para/> 
                    public virtual void MouseHover(MouseEventArgs e)
                    {
                        if (clickCellsControllerHitTest != 0)
                            clickCellsController.MouseHover(e);
                    }
            <para/> 
                    public virtual void MouseHoverLeave(EventArgs e)
                    {
                        if (entered)
                        {
                            clickCellsController.MouseHoverLeave(e);
                            entered = false;
                        }
                    }
             <para/>
                    public virtual void MouseDown(MouseEventArgs e)
                    {
                        if (clickCellsControllerHitTest != 0)
                            clickCellsController.MouseDown(e);
                    }
            <para/> 
                    public virtual void MouseMove(MouseEventArgs e)
                    {
                        if (clickCellsControllerHitTest != 0)
                            clickCellsController.MouseMove(e);
                    }
            <para/> 
                    public virtual void MouseUp(MouseEventArgs e)
                    {
                        if (clickCellsControllerHitTest != 0)
                            clickCellsController.MouseUp(e);
                    }
             <para/>
                    public virtual void CancelMode()
                    {
                        if (clickCellsControllerHitTest != 0)
                            clickCellsController.CancelMode();
                    }
             <para/>
                    public virtual int HitTest(MouseEventArgs e, IMouseController controller)
                    {
                        clickCellsControllerHitTest = clickCellsController.HitTest(e, controller);
                        return clickCellsControllerHitTest;
                    }
            <para/> 
                    #endregion
                   }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController"/>.
            </summary>
            <param name="grid">The parent grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.MouseHoverEnter">
            <override/>
            <summary>
            MouseHoverEnter is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHoverEnter
            is called before the first time MouseHover is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.MouseHover(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseHover is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHover
            is called after MouseHoverEnter.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.MouseHoverLeave(System.EventArgs)">
            <override/>
            <summary>
            MouseHoverLeave is called when hovering ends either because user dragged mouse out of the hit-test area or
            when context changes (e.g. user pressed the mouse button).
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.CancelMode">
            <override/>
            <summary>Occurs when the current mouse operation is cancelled.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <override/>
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <remarks>
            The current winner of the vote is specified through the controller paramter. Your implementation of HitTest
            can decide if it wants to override the existing vote or leave it.
            </remarks>
            <param name="e">A MouseEventArgs holding event data.</param>
            <param name="controller">A mouse controller.</param>
            <returns>A non-zero value if the controller can and wants to handle the mouse event; 0 otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.Name">
            <override/>
            <summary>
            The name of this mouse controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController.Cursor">
            <override/>
            <summary>
            The cursor to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderBitmaps">
            <summary>
            GridDragColumnHeaderBitmaps is a helper class for drawing and caching bitmaps 
            </summary>
            <remarks>
            The bitmaps are loaded from the manifest and cached. The PaintIcon routine
            will substitute black pixels of the original bitmap and draw them with a 
            specified forecolor.<para/>
            Example:<para/>
               GridDragColumnHeaderBitmaps.IconPainter.PaintIcon(g, rect, Point.Empty, bitmapName, Color.Black);
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderBitmaps.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderBitmaps.RedDownBitmap">
            <summary>
            Gets bitmap for moving columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderBitmaps.RedUpBitmap">
            <summary>
            Gets bitmap for moving columns.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase">
            <summary>
            This is an abstract base class used by <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController"/>.
            It implements the IMouseController interface to be used with MouseControllerDispatcher and provides common functions for 
            hit-testing and drag and drop functionality used by the derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.ResetClickCellsController">
            <summary>
            Clears out pending state of ClickCellsController, possibly sending MouseHoverLeave or CancelMode
            notification to cell renderer.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.#ctor">
            <overload>
            Initializes the object
            </overload>
            <summary>
            Initializes the object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBaseImp)">
            <summary>
            Initializes the object with the grid it is bound to.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.GetGridControl">
            <summary>
            Returns the grid it is bound to.
            </summary>
            <returns>The GridControlBase</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.ShouldShowRemoveCursor">
            <summary>
            Determines based on mouse position if remove cursor should be shown
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.GetColumnAtMousePosition">
            <summary>
            The column descriptor under the mouse position. Will be null if there is no header drawn below mouse.
            </summary>
            <returns>returns mouse position</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.ShouldShowRedArrowIndicator">
            <summary>
            Determines based on mouse position if red arrow indicator should be shown
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.GetRedArrowIndicatorLocation(System.Int32)">
            <summary>
            Gets the red arrow indicator location.
            </summary>
            <param name="colIndex">Index of the col.</param>
            <returns>returns point</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.UpdateRedArrowIndicator">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.GetMovementDelta">
            <summary>
            Gets the movement delta.
            </summary>
            <returns>returns point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.ShouldShowDragBitmap">
            <summary>
            Shoulds the show drag bitmap.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.GetAllowFixFocus">
            <summary>
            Implement this method in your <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> and return False if it would interfere with your
            controller's state when the current cell is focused and possibly scrolled into view.
            </summary>
            <returns>
            A <see cref="T:System.Boolean"/> that indicates if the grid is allowed to set the focus onto the current cells <see cref="T:System.Windows.Forms.Control"/>.
            </returns>
            <implement/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.MouseHoverEnter">
            <implement/>
            <summary>
            MouseHoverEnter is called when this controller signaled in HitTest that it wants to handle mouse events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.MouseHover(System.Windows.Forms.MouseEventArgs)">
             <implement/>
            <summary>
             MouseHover is called when this controller signaled in HitTest that it wants to handle mouse events.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.MouseHoverLeave(System.EventArgs)">
            <implement/>
            <summary>
            MouseHoverLeave is called when hovering ends either because user dragged mouse out of the hit-test area or
            when context changes (e.g. user pressed the mouse button).
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <implement/>
            <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <implement/>
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <implement/>
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.CancelMode">
            <implement/>
            <summary>
            CancelMode is called for the active controller after a MouseDown message when the mouse operation is cancelled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <param name="controller">The controller.</param>
            <returns>returns int value to determine whether your controller wants to handle the mouse events based current context</returns>
            <implement/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.ClickCellsController">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridClickCellsMouseController"/> which is used to forward mouse events
            to cell renderers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.DragHeaderVisible">
            <internalonly/>
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.Name">
             <implement/>
            <summary>
             The name of mouse controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseControllerBase.Cursor">
            <implement/>
            <summary>
            The cursor to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController">
            <summary>
            Mouse controller that provides support for dragging column headers within the
            grid.
            </summary>
            <param name="mouseEventArgs">A MouseEventArgs holding event data.</param>
            <param name="controller">A mouse controller.</param>
            <returns>A non-zero value if the controller can and wants to handle the mouse event; 0 otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBaseImp)">
            <summary>
            Initializes the mouse controller with grid it operates on
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
            /// <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController.CancelMode">
            <override/>
            <summary>
            CancelMode is called for the active controller after a MouseDown message when the mouse operation is cancelled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <override/>
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <param name="e">A MouseEventArgs holding event data.</param>
            <param name="controller">A mouse controller.</param>
            <returns>A non-zero value if the controller can and wants to handle the mouse event; 0 otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper">
            <internalonly/>
            <summary>For internal use.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.#ctor">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.StartDrag(System.Drawing.Bitmap,System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.CheckDragCursor(System.Windows.Forms.DragDropEffects)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.StopDrag">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.DoDrag(System.Drawing.Point,System.Windows.Forms.DragDropEffects)">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.CancelDrag">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.EndDrag">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.Dispose">
            <summary>Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.DragWindow">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.LastDragDropEffect">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderHelper.IsDragging">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderWindow">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderWindow.#ctor">
            <internalonly/>
            <summary>Used internally.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderWindow.StartDrag(System.Drawing.Point)">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderWindow.MoveTo(System.Drawing.Point)">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderWindow.StopDrag">
            <summary>
            Used internally.
            </summary>
            <returns>returns boolean value</returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragColumnHeaderWindow.DragBitmap">
            <internalonly/>
            <summary>Gets or sets DragBitmap. Used internally.</summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventHandler">
            <summary>
            Represents a method that handles events with <see cref="T:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs"/> that are raised when the user hovers over a column
            header  or drags column header with the mouse.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderReason">
            <summary>
            Reason why QueryAllowDragColumnHeader event was raised (Show Red Indicator, MouseUp or HitTest).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderReason.HitTest">
            <summary>
            HitTest is occurring
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderReason.ShowRedArrowIndicator">
            <summary>
            RedArrowIndicator is displayed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderReason.MouseUp">
            <summary>
            Represents MouseUp
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs">
            <summary>
            Holds a reference to a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> that initiates the event and the column 
            that is affected.
            </summary>
            <remarks>
            Set <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.AllowDrag"/> to False if you do not want to allow the user 
            to drag the specified <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.Column"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderReason)">
            <summary>
            Initializes the event args.
            </summary>
            <param name="grid">The table control.</param>
            <param name="column">Column Name.</param>
            <param name="insertBeforeColumn">Name of the column to insert at. You can call TableDescriptor.Columns[InsertBeforeColumn] to get the GridColumnDescriptor.</param>
            <param name="reason">Reason why this event was raised (Show Red Indicator, MouseUp, or HitTest).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.Grid">
            <summary>
            Gets the table control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.Column">
            <summary>
            Gets Column Name. You can call TableDescriptor.Columns[Column] to get the GridColumnDescriptor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.InsertBeforeColumn">
            <summary>
            Gets Name of the column to insert at. You can call TableDescriptor.Columns[InsertBeforeColumn] to get the GridColumnDescriptor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.Reason">
            <summary>
            Gets or sets reason why this event was raised (Show Red Indicator, MouseUp, or HitTest).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.AllowDrag">
            <summary>
            Gets or sets a value indicating whether to allow drag. <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.AllowDrag"/> to False if you do not want to allow the user 
            to drag the specified <see cref="P:Syncfusion.Windows.Forms.Grid.GridQueryDragColumnHeaderEventArgs.Column"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragMode">
            <summary>
            Indicates if rows or columns are dragged.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragMode.None">
            <summary>
            Represents None.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragMode.DragColumn">
            <summary>
            Represents Columns.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridDragMode.DragRow">
            <summary>
            Represents Rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController">
            <summary>
            Implements the dragging of selected rows or columns in a grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new GridDragSelectMouseController and attaches it to a grid.
            </summary>
            <param name="Grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.GetAllowFixFocus">
            <override/>
            <summary>
            Override this method in your <see cref="T:Syncfusion.Windows.Forms.Grid.GridMouseController"/> and return False if it would interfere with your
            controller's state when the current cell would be focused and possibly scrolled into view.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> (True by default) that indicates if the grid is allowed to set the focus onto the current cells <see cref="T:System.Windows.Forms.Control"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.MouseHoverEnter">
            <override/>
            <summary>
            MouseHoverEnter is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHoverEnter
            is called before the first time MouseHover is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.MouseHover(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseHover is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHover
            is called after MouseHoverEnter.
            </summary>
            <param name="e">A MouseEventArgs holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.MouseHoverLeave(System.EventArgs)">
            <override/>
            <summary>
            MouseHoverLeave is called when hovering ends either because user dragged mouse out of the hit-test area or
            when context changes (e.g. user pressed the mouse button).
            </summary>
            <param name="e">A reference to <see cref="T:System.EventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A MouseEventArgs holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A MouseEventArgs holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A MouseEventArgs holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.CancelMode">
            <override/>
            <summary>
            CancelMode is called for the active controller after a MouseDown message when the mouse operation is cancelled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <override/>
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <remarks>
            The current winner of the vote is specified through the controller paramter. Your implementation of HitTest
            can decide if it wants to override the existing vote or leave it.
            </remarks>
            <param name="e">A MouseEventArgs holding event data.</param>
            <param name="controller">A mouse controller.</param>
            <returns>A non-zero value if the controller can and wants to handle the mouse event; 0 otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.DragSelectionMode">
            <summary>
            Gets if rows or columns are dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.Name">
            <override/>
            <summary>
            The name of this mouse controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDragSelectMouseController.Cursor">
            <override/>
            <summary>
            The cursor to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController">
            <summary>
            Implements the datasource part of an OLE drag-and-drop operation in a grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new GridDragSelectMouseController and attaches it to a grid.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.EnableOleDataSource(System.Int32)">
            <summary>
            Sets drag-and-drop flags. See <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/>.
            </summary>
            <param name="flags">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridDragDropFlags"/>.</param>
            <returns>returns True.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.GetAllowFixFocus">
            <override/>
            <summary>
            Override this method in your <see cref="T:Syncfusion.Windows.Forms.Grid.GridMouseController"/> and return False if it would interfere with your
            controller's state when the current cell would be focused and possibly scrolled into view.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> (True by default) that indicates if the grid is allowed to set the focus onto the current cells <see cref="T:System.Windows.Forms.Control"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.DndStartDragDrop(System.Int32,System.Int32)">
            <summary>
            Starts the drag-and-drop operation at the specified row and column.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if operation was started; False otherwise.</returns>
            <remarks>
            If the grid supports drag-and-drop at the given coordinates, it
            will call Control.DoDragDrop.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.MouseHoverEnter">
            <override/>
            <summary>
            MouseHoverEnter is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHoverEnter
            is called before the first time MouseHover is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.MouseHover(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseHover is called when this controller signaled in HitTest that it wants to handle mouse events. MouseHover
            is called after MouseHoverEnter.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.MouseHoverLeave(System.EventArgs)">
            <override/>
            <summary>
            MouseHoverLeave is called when hovering ends either because user dragged mouse out of the hit-test area or
            when context changes (e.g. user pressed the mouse button).
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseDown is called when this controller signaled in HitTest that it wants to handle mouse events and the
            user pressed the mouse button.
            </summary>
            <remarks>
            MouseDown is called and this controller will become the active controller and receive all subsequent mouse message
            until the mouse button is released or the mouse operation is cancelled.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseMove is called for the active controller after a MouseDown message when the user moves the mouse pointer.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <override/>
            <summary>
            MouseUp is called for the active controller after a MouseDown message when the user releases the mouse button.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.CancelMode">
            <override/>
            <summary>
            CancelMode is called for the active controller after a MouseDown message when the mouse operation is cancelled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.HitTest(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.IMouseController)">
            <override/>
            <summary>
            HitTest is called to determine whether your controller wants to handle the mouse events based current context.
            </summary>
            <remarks>
            The current winner of the vote is specified through the controller paramter. Your implementation of HitTest
            can decide if it wants to override the existing vote or leave it.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> holding event data..</param>
            <param name="controller">A <see cref="T:Syncfusion.Windows.Forms.IMouseController"/> that has indicated to handle the mouse event.</param>
            <returns>A non-zero value if the button can and wants to handle the mouse event; 0 if the
            mouse event is unrelated for this button.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.HitTestSelectionEdge">
            <internalonly/>
            <summary>Gets or sets HitTestSelectionEdge. Used internally.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.Name">
            <override/>
            <summary>
            The name of this mouse controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridOleDataSourceMouseController.Cursor">
            <override/>
            <summary>
            The cursor to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridQueryAcceptDataOptions">
            <summary>
            Not implemented. Reserved for future use - possibly return options how to handle operation, e.g. EdgeScroll
             or implement this behavior itself.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridQueryAcceptDataOptions.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridDataDataObjectConsumer">
            <summary>
            Implements a DataObject consumer for serialized GridData. Checks if the provided data are of type <see cref="T:Syncfusion.Windows.Forms.Grid.GridData"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataDataObjectConsumer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridDataDataObjectConsumer"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> this object should be associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataDataObjectConsumer.QueryAcceptData(System.Windows.Forms.IDataObject,Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer,Syncfusion.Windows.Forms.Grid.GridQueryAcceptDataOptions)">
            <summary>
            Queries the DataObject consumer if it knows how to handle the IDataObject.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="consumer">Another consumer that is capable of reading the data. Might be NULL.</param>
            <param name="options">Reserved for future use.</param>
            <returns>True if this consumer is able to read the data from <paramref name="dataObject"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataDataObjectConsumer.DetermineRowColCount(System.Windows.Forms.IDataObject)">
            <summary>
            Queries the dimension in rows and columns of the data object.
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>returns Dimension.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridDataDataObjectConsumer.DropAtRowCol(System.Windows.Forms.IDataObject,System.Int32,System.Int32)">
            <summary>
            Paste the contents of the data object at the specified cell coordinates.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if successful; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridDataDataObjectConsumer.Name">
            <summary>
            Gets the name of the DataObject consumer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridTextDataObjectConsumer">
            <summary>
            Implements a DataObject consumer for text data. Will handle data provided in DataFormats.Text and DataFormats.UnicodeText format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextDataObjectConsumer.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridTextDataObjectConsumer"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControlBase"/> this object should be associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextDataObjectConsumer.QueryAcceptData(System.Windows.Forms.IDataObject,Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer,Syncfusion.Windows.Forms.Grid.GridQueryAcceptDataOptions)">
            <summary>
            Queries the DataObject consumer if it knows how to handle the IDataObject.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="consumer">Another consumer that is capable of reading the data. Might be NULL.</param>
            <param name="options">Reserved for future use.</param>
            <returns>True if this consumer is able to read the data from <paramref name="dataObject"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextDataObjectConsumer.DetermineRowColCount(System.Windows.Forms.IDataObject)">
            <summary>
            Queries the dimension in rows and columns of the data object.
            </summary>
            <param name="dataObject">Data object.</param>
            <returns>returns Dimension.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridTextDataObjectConsumer.DropAtRowCol(System.Windows.Forms.IDataObject,System.Int32,System.Int32)">
            <summary>
            Paste the contents of the data object at the specified cell coordinates.
            </summary>
            <param name="dataObject">Provides data to be consumed.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridTextDataObjectConsumer.Name">
            <summary>
            Gets the name of the DataObject consumer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridOleDropTarget">
            <summary>
            Implements the DropTarget part for OLE drag-and-drop operations. You can add support for additional data formats
            by creating a class that implements IGridDataObjectConsumer and register an instance of this with <see cref="M:Syncfusion.Windows.Forms.Grid.GridControlBaseImp.RegisterDataObjectConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridOleDropTarget"/>.
            </summary>
            <param name="grid">The grid control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.Register(System.Int32)">
            <summary>
            Sets grid.Model.Options.DragDropDropTargetFlags 
            </summary>
            <param name="flags">Value for DragDropDropTargetFlags.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.GridBeforeScrolling(System.Object,Syncfusion.Windows.Forms.Grid.GridRowColIndexChangingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.RegisterConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)">
            <summary>
            Adds a IGridDataObjectConsumer.
            </summary>
            <param name="consumer">A <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.UnregisterConsumer(Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer)">
            <summary>
            Removes a IGridDataObjectConsumer.
            </summary>
            <param name="consumer">A <see cref="T:Syncfusion.Windows.Forms.Grid.IGridDataObjectConsumer"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <implement/>
            <summary>Occurs when an object is dragged into the control's bounds.</summary>
            <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs"/> holding the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.EnableEdgeScrolling(System.Windows.Forms.ScrollBars)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.QueryAcceptData(System.Windows.Forms.IDataObject)">
            <summary>
            Queries the accept data.
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>returns IGridDataObjectConsumer</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <implement/>
            <summary>
            Occurs when a drag-drop operation is completed.
            </summary>
            <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs"/> holding the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.OnDragLeave(System.EventArgs)">
            <implement/>
            <summary>Occurs when an object is dragged out of the control's bounds.</summary>
            <param name="e">An EventArgs that holds the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <implement/>
            <summary>Occurs when an object is dragged over the control's bounds.</summary>
            <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs"/> holding event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.DropDataAtRowCol(System.Windows.Forms.IDataObject,System.Int32,System.Int32)">
            <summary>
            Drops the data at row col.
            </summary>
            <param name="dataObject">The data object.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the col.</param>
            <returns>returns boolean value</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridOleDropTarget.OutlineDropTargetRange(System.Drawing.Point,System.Boolean,System.Boolean)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridInternal.GridInternalDataObjectConsumer">
            <summary>
            This should implement internal drag-and-drop inside a grid. Not implemented yet, since grid itself does not provide
            CopyCells and MoveCells functionality yet.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridPrintDocument">
            <summary>
               Implements printing support for a grid.
            </summary>
            <example>
            Use the following code for printing:
            <code lang="C#">
                                GridPrintDocument pd = new GridPrintDocument(grid); //Assumes the default printer
                                if (PrinterSettings.storedPageSettings != null)
                                {
                                    pd.DefaultPageSettings = PrinterSettings.storedPageSettings ;
                                }
                                PrintDialog dlg = new PrintDialog() ;
                                dlg.Document = pd;
                                dlg.AllowSelection = true;
                                dlg.AllowSomePages = true;
                                DialogResult result = dlg.ShowDialog();
            <para/> 
                                if (result == DialogResult.OK)
                                {
                                    pd.Print();
                                }
            </code>
            Use the following code for print preview:
            <code lang="C#">
                                   GridControlBase grid = ActiveGrid;
                                GridPrintDocument pd = new GridPrintDocument(grid, true); //Assumes the default printer
                                if (PrinterSettings.storedPageSettings != null)
                                {
                                    pd.DefaultPageSettings = PrinterSettings.storedPageSettings ;
                                }
             <para/>
                                PrintPreviewDialog dlg = new PrintPreviewDialog() ;
                                dlg.Document = pd;
                                dlg.ShowDialog();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrintDocument.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrintDocument"/> for a grid.
            </summary>
            <param name="grid">The parent grid for this object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrintDocument.#ctor(Syncfusion.Windows.Forms.Grid.GridControlBase,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridPrintDocument"/> for a grid.
            </summary>
            <param name="grid">The parent grid for this object.</param>
            <param name="printPreview">True if print preview; False if printing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridPrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPrintDocument.IsPrintPreview">
            <summary>
            Gets a value indicating whether this object is in print preview mode or if it is output to a printer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPrintDocument.CustomBounds">
            <summary>
            Gets or sets Grid will take this Bounds while calculating page breaks in the OnBeginPrint override. By default it uses PrintDocument's DefaultPageSettings.Bounds.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridPrintDocument.IsPDFExport">
            <summary>
            Enable/Disable ToplevelGroupCaption painting in GridGroupingControl.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridIconPaint">
            <summary>
            GridIconPaint is a helper class for drawing and caching bitmaps from a resource manifest with a given forecolor.
            </summary>
            <remarks>
            The bitmaps are loaded from the manifest and cached. The PaintIcon routine
            will substitute black pixels of the original bitmap and draw them with a 
            specified forecolor.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridIconPaint.#ctor(System.String,System.Reflection.Assembly)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Grid.GridIconPaint"/> object with manifestPrefix and a reference to the assembly
            to load bitmaps from. You should save this object in a static variable.
            </summary>
            <param name="manifestPrefix"> The manifest to load from. The bitmaps should be saved in the Resources
            tree in the Visual Studio project with the build action set to "Embedded Resource".</param>
            <param name="ass">The assembly to load from. The bitmaps should be saved in the Resources
            tree in Visual Studio project with the build action set to "Embedded Resource".</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.GridGdiPaint">
            <summary>
            Provides a set of advanced GDI Interop drawing routines that can be used
            instead of GDI plus routines to optimize drawing performance of the grid.
            Call these methods from <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.DrawCellDisplayText"/> and <see cref="E:Syncfusion.Windows.Forms.Grid.GridControlBase.FillRectangleHook"/> 
            as shown in example. You might also try turning off double buffering.
            </summary>
            <example>
            <code lang="C#">
            protected override void OnDrawCellDisplayText(GridDrawCellDisplayTextEventArgs e)
            {
                   base.OnDrawCellDisplayText (e);
            <para/>
                   GridGdiPaint.AllowTextOut = false;
                   if (!e.Cancel)
                       e.Cancel = GridGdiPaint.Instance.DrawText(e.Graphics, e.DisplayText, e.TextRectangle, e.Style);
            }
             <para/>
            protected override void OnFillRectangleHook(GridFillRectangleHookEventArgs e)
            {
                base.OnFillRectangleHook (e);
             <para/>
                if (!e.Cancel)
                    e.Cancel = GridGdiPaint.Instance.FillRectangle(e.Graphics, e.Bounds, e.Brush);
            }
             <para/>
            - Or -
             <para/>
            public class PerformanceGridControl : GridControl
            {
                private bool useGDI;
             <para/>    
                /// <summary>
                /// Property UseGDI (bool)
                /// </summary>
                public bool UseGDI
                {
                    get
                    {
                        return this.useGDI;
                    }
                    set
                    {
                        if (this.UseGDI != value)
                        {
                            this.useGDI = value;
                            Invalidate();
                        }
                    }
                }
            <para/> 
                private bool useDoubleBuffer = true;
            <para/>      
                   public bool UseDoubleBuffer
                   {
                    get
                    {
                        return this.useDoubleBuffer;
                    }
                    set
                    {
                        if (this.useDoubleBuffer != value)
                        {
                            this.useDoubleBuffer = value;
                            SetStyle(ControlStyles.Opaque, value);
                            SetStyle(ControlStyles.DoubleBuffer, value);
                        }
                    }
                }
             <para/>
                protected override void OnPaintBackground(PaintEventArgs pevent)
                {
                    if (useDoubleBuffer)
                        base.OnPaintBackground (pevent);
                }
             <para/>
                protected override void OnDrawCellDisplayText(GridDrawCellDisplayTextEventArgs e)
                {
                    base.OnDrawCellDisplayText (e);
            <para/> 
                    if (!useGDI || e.Cancel)
                        return;
             <para/>   
                       e.Cancel = GridGdiPaint.Instance.DrawText(e.Graphics, e.DisplayText, e.TextRectangle, e.Style);
                   }
             <para/>   
                   protected override void OnFillRectangleHook(GridFillRectangleHookEventArgs e)
                {
                    base.OnFillRectangleHook (e);
             <para/>
                    if (!useGDI || e.Cancel)
                        return;
             <para/>
                    e.Cancel = GridGdiPaint.Instance.FillRectangle(e.Graphics, e.Bounds, e.Brush);
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridGdiPaint.AllowTextOut">
            <summary>
            Specifies if GDI TextOut routine can be used as is when text is left-aligned and top-aligned.
            Set this false if text might need to be clipped.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Grid.GridGdiPaint.ForceDrawText">
            <summary>
            Specifies if GDI DrawText routine should always be used and text should be clipped. When you 
            set this true the performance of the GDI drawing routine will be the same as for GDIplus DrawString
            since text needs to be clipped everytime it is drawn. If you want to force GDI DrawText on a cell
            by cell basis you can specify style.Trimming = System.Drawing.StringTrimming.Character instead
            and leave ForceDrawText = false.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGdiPaint.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <overload>
            Draws the text emulating the Graphics.DrawString method if possible.
            </overload>
            <summary>
            Draws the text emulating the Graphics.DrawString method if possible.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="displayText">Display text.</param>
            <param name="textRectangle">Text rectangle.</param>
            <param name="style">Cell style information.</param>
            <returns>true if text could be painted; false if text could not be painted (e.g. because it needs to be drawn rotated).</returns>
            <example>
            <code lang="C#">
            protected override void OnDrawCellDisplayText(GridDrawCellDisplayTextEventArgs e)
            {
                   base.OnDrawCellDisplayText (e);
            <para/>
                   GridGdiPaint.AllowTextOut = false;
                   if (!e.Cancel)
                       e.Cancel = GridGdiPaint.Instance.DrawText(e.Graphics, e.DisplayText, e.TextRectangle, e.Style, e.Bounds);
            }
             <para/>
            protected override void OnFillRectangleHook(GridFillRectangleHookEventArgs e)
            {
                base.OnFillRectangleHook (e);
            <para/> 
                if (!e.Cancel)
                    e.Cancel = GridGdiPaint.Instance.FillRectangle(e.Graphics, e.Bounds, e.Brush);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGdiPaint.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle)">
            <summary>
            Draws the text emulating the Graphics.DrawString method if possible.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="displayText">Display text.</param>
            <param name="textRectangle">Text rectangle.</param>
            <param name="style">Cell style information.</param>
            <param name="clipBounds">The clip bounds of the text. When empty or same as textRectangle there will be no explicit clipping (but this does not
            affect DT_NOCLIP setting of GDI DrawText routine). If specified
            then output will be clipped by setting IntersectClipRect and DT_NOCLIP option is used for DrawText.</param>
            <returns>true if text could be painted; false if text could not be painted (e.g. because it needs to be drawn rotated).</returns>
            <example>
            <code lang="C#">
            protected override void OnDrawCellDisplayText(GridDrawCellDisplayTextEventArgs e)
            {
                   base.OnDrawCellDisplayText (e);
            <para/>
                   GridGdiPaint.AllowTextOut = false;
                   if (!e.Cancel)
                   {
                       GridControlBase grid = (GridControlBase) sender;
                       Rectangle clipBounds = grid.ViewLayout.RangeInfoToRectangle(GridRangeInfo.Cell(e.Style.CellIdentity.RowIndex, e.Style.CellIdentity.ColIndex), GridCellSizeKind.VisibleSize);
                       e.Cancel = GridGdiPaint.Instance.DrawText(e.Graphics, e.DisplayText, e.TextRectangle, e.Style, e.Bounds, clipBounds);
                   }
            }
             <para/>
            protected override void OnFillRectangleHook(GridFillRectangleHookEventArgs e)
            {
                base.OnFillRectangleHook (e);
            <para/> 
                if (!e.Cancel)
                    e.Cancel = GridGdiPaint.Instance.FillRectangle(e.Graphics, e.Bounds, e.Brush);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGdiPaint.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the text emulating the Graphics.DrawString method if possible.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="displayText">Display text.</param>
            <param name="textRectangle">Text rectangle.</param>
            <param name="style">Cell style information.</param>
            <param name="clipBounds">The clip bounds of the text. When empty or same as textRectangle there will be no explicit clipping (but this does not
            affect DT_NOCLIP setting of GDI DrawText routine). If specified
            then output will be clipped by setting IntersectClipRect and DT_NOCLIP option is used for DrawText.</param>
            <param name="isRightToLeft">true for RTL languages, false if left to right. Affects Horizontal Alignemnt.</param>
            <returns>true if text could be painted; false if text could not be painted (e.g. because it needs to be drawn rotated).</returns>
            <example>
            <code lang="C#">
            protected override void OnDrawCellDisplayText(GridDrawCellDisplayTextEventArgs e)
            {
                   base.OnDrawCellDisplayText (e);
            <para/>
                   GridGdiPaint.AllowTextOut = false;
                   if (!e.Cancel)
                   {
                       GridControlBase grid = (GridControlBase) sender;
                       Rectangle clipBounds = grid.ViewLayout.RangeInfoToRectangle(GridRangeInfo.Cell(e.Style.CellIdentity.RowIndex, e.Style.CellIdentity.ColIndex), GridCellSizeKind.VisibleSize);
                       e.Cancel = GridGdiPaint.Instance.DrawText(e.Graphics, e.DisplayText, e.TextRectangle, e.Style, e.Bounds, clipBounds);
                   }
            }
             <para/>
            protected override void OnFillRectangleHook(GridFillRectangleHookEventArgs e)
            {
                base.OnFillRectangleHook (e);
             <para/>
                if (!e.Cancel)
                    e.Cancel = GridGdiPaint.Instance.FillRectangle(e.Graphics, e.Bounds, e.Brush);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.GridGdiPaint.FillRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Fills the specified rectangle with the specified brush emulating Graphics.FillRectangle method
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="bounds">Rectangle bounds.</param>
            <param name="brush">Fill brush.</param>
            <returns>true if text could be painted; false if text could not be painted (e.g. color is alphablended or gradient).</returns>
            <example>
            <code lang="C#">
            protected override void OnDrawCellDisplayText(GridDrawCellDisplayTextEventArgs e)
            {
                   base.OnDrawCellDisplayText (e);
            <para/>
                   GridGdiPaint.AllowTextOut = false;
                   if (!e.Cancel)
                       e.Cancel = GridGdiPaint.Instance.DrawText(e.Graphics, e.DisplayText, e.TextRectangle, e.Style);
            }
             <para/>
            protected override void OnFillRectangleHook(GridFillRectangleHookEventArgs e)
            {
                base.OnFillRectangleHook (e);
             <para/>
                if (!e.Cancel)
                    e.Cancel = GridGdiPaint.Instance.FillRectangle(e.Graphics, e.Bounds, e.Brush);
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.GridGdiPaint.Instance">
            <summary>
            Gets an instance of this calls
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Grid.NativeMethods.FakeLeftMouseClick(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Sends a WM_LBUTTONDOWN and WM_LBUTTONUP message to the control at the specified client coordinates.
            </summary>
            <param name="c">The target control</param>
            <param name="point">The client coordinates where to simulate the click</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.SR">
            <summary>
               SR provides localized access to string resources specific 
               from the assembly manifest Syncfusion.Windows.Forms.Grid.SR.resources
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.SRCategoryAttribute">
            <summary>
            Specifies the category in which the property or event will be displayed in a visual designer.
            </summary>
            <remarks>
            This is a localized version of CategoryAttribute. The localized string will be loaded from the 
            assembly manifest Syncfusion.Windows.Forms.Grid.SR.resources
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.SRDescriptionAttribute">
            <summary>
            Specifies a description for a property or event.
            </summary>
            <remarks>
            This is a localized version of DescriptionAttribute. The localized string will be loaded from the 
            assembly manifest Syncfusion.Windows.Forms.Grid.SR.resources
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Grid.Switches">
            <summary>
               Provides predefined switches for enabling/disabling trace
               output or code instrumentation in the Grid library.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Grid.Switches.General">
            <summary>
            Gets General Tracing level for the Grid Library
            </summary>
        </member>
    </members>
</doc>
